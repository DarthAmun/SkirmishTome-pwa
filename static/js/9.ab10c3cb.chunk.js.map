{"version":3,"sources":["components/general_elements/SmallFormatedText.tsx","components/entities/talents/TalentTile.tsx","../node_modules/peerjs/dist sync","services/OptionService.tsx","components/p2p/P2PReciver.tsx","components/options/GeneralOptions.tsx","components/options/TalentsOptions.tsx","components/form_elements/FileField.tsx","components/form_elements/ImportField.tsx","components/options/DiscordOptions.tsx","services/CsvService.tsx","components/options/Options.tsx","database/SkirmishDB.tsx","services/DatabaseService.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","hooks/webhookHook.tsx","services/DiscordService.tsx","components/form_elements/StringField.tsx","data/SpellValues.tsx","services/DiceService.tsx","components/general_elements/LinkCheck.tsx","data/Talent.tsx","data/Spell.tsx","data/Race.tsx","components/general_elements/TabBar.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx"],"names":["SmallFormatedText","text","webhook","useWebhook","useState","formatedText","setFormatedText","history","useHistory","cut","str","cutStart","cutEnd","substr","rollDiscord","useCallback","command","includes","rollCommand","result","undefined","sendMessage","newCommand","value","parseInt","replaceAll","krit","fail","rollString","formatLink","parts","split","formattedParts","forEach","part","index","codePart","linkParts","linkEntity","push","TextPart","key","DiscordPart","onClick","LinkCheck","type","name","link","Link","formatTable","textPart","table","tableRows","isHead","map","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","useEffect","FormatedTextContainer","styled","div","span","theme","tile","backgroundColorLink","color","th","input","backgroundColor","td","TalentTile","talent","Tile","to","id","$isflaw","isFlaw","Cost","cost","Name","PropWrapper","Prop","stress","prerequisite","props","boxShadow","main","highlight","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","scanImportFileTest","json","fileName","callback","a","promList","Array","isArray","obj","isTalent","saveNew","Promise","all","exportAll","filename","reciveAllPromise","spells","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","P2PReciver","changeData","reload","peerId","setId","loading","isLoading","error","setError","state","setState","Peer","host","secure","peer","conn","connect","on","data","console","log","Loading","StringField","label","onChange","Icon","icon","faExclamationCircle","TextButton","faCheck","FontAwesomeIcon","GeneralOptions","useTheme","setTheme","General","OptionSection","SelectionTitle","Button","darkTheme","lightTheme","localStorage","setItem","button","buttons","TalentsOptions","amount","triggerDeleteAll","send","setSend","OptionTab","SectionRow","SectionText","IconButton","faFileExport","tableName","reciveAll","entity","faTrashAlt","faPaperPlane","P2PSender","mode","ImportModus","FileField","accept","isMulti","transform","Field","LabelText","Input","files","multiple","ImportField","modus","setFiles","Files","faFileImport","file","fileList","from","changeFile","FileTile","succCount","setSucc","maxCount","setMax","scanImportFile","listOfNew","newMax","length","NORMAL","newEntitiy","Object","entries","newTableName","bulkList","filter","saveNewFromList","fileReader","FileReader","onloadend","content","parse","toString","readAsText","FileWrapper","completed","Math","round","isLabelVisible","bgcolor","height","margin","DiscordOptions","getItem","setWebhook","webhookUser","setWebhookUser","saveInDB","tablename","listOfIEntity","Options","activeTab","setTab","talentAmount","setTalentAmount","isReload","setData","readString","usePapaParse","useCSVDownloader","CSVDownloader","Type","csvBackup","setBackup","handleSpellCsvUpload","worker","complete","results","csv","listOfSpells","slice","newSpell","Spell","SpellSource","find","SpellCastTime","SpellRite","SpellDuration","SpellRange","SpellSchool","SpellScalingEffect","SpellTarget","SpellAoeRadius","SpellDamage","SpellDirectEffects","NONE","SpellLevel","SpellProjectileType","SpellProjectileNumber","SpellDamageType","SpellTargetingType","SpellLosRange","SpellDrainType","SpellPureDamage","SpellSize","SpellHp","toLowerCase","drain","calcDrain","scanImportedSpellCsv","reciveCount","backup","concat","Talent","Race","returnTile","Date","getFullYear","getMonth","bom","config","delimiter","TabBar","children","tab","deleteAll","OptionSectionLarge","SkirmishDB","randomTables","talents","races","version","stores","Dexie","updateWithCallback","db","open","then","update","finally","close","put","prom","entities","refinedEntities","bulkPut","remove","delete","toArray","array","count","reciveCountPromise","recivePromiseByAttribute","where","equalsIgnoreCase","recivePromise","get","recivePromiseByAttributeCount","equals","applyFilters","filters","test","fieldName","hasTag","fieldPart","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAllFilteredPromise","reciveAttributeSelectionPromise","attribute","orderBy","uniqueKeys","createNewWithId","clear","exportFilteredFromTable","floatLeft","disabled","style","SimpleButton","left","DisabledSimpleButton","hoverColor","hook","avatar","request","XMLHttpRequest","setRequestHeader","params","username","avatar_url","sendEmbedMessage","formatDiscordText","placeholder","ACID","NECROTIC","FROST","FIRE","LIGHTNING","RADIANT","ARCANE","POISON","trim","getAll","HALFMAGICSTRUCTUREHP","HALFMAGICSTRUCTUREDOUBLEHP","HALFMAGICSTRUCTURETRIPPLEHP","MAGICSTRUCTUREHP","MAGICSTRUCTUREDOUBLEHP","DOUBLEMAGICESTRUCTUREHP","MAGICHP","MAGICDOUBLEHP","MAGICTRIPPLEHP","MAGICQUADRUPLEHP","HALFMAGICSQUARED","MAGICSQUARED","DOUBLEMAGICSQUARED","TRIPPLEMAGICSQUARED","HALFMAGICQUBED","MAGICQUBED","DOUBLEMAGICQUBED","TRIPPLEMAGICQUBED","DIFFICULTTERRAIN","LIFELEECH","COMMUNICATE","CONFUSIONSTUNBLIND","HEX","IMPAIRMOVEMENTVISION","MOVEFEARROOT","DOT","INCAPACITATE","SPHERE","KNOCKDOWN","WALLBARRIERCONSTRUCTSUMMON","TELEPORT","HEAL","BUFFILLUSIONSHIELD","CHARMCONTROLINFLUENCE","TRANSFORM","MYSTBRADIUS","MYSTBPROJECTILES","ONEVARIABLEPROJECTILE","ONEPROJECTILETHREEMAGIC","ONEPROJECTILETWOMAGIC","ONEPROJECTILERADIUSTWOMAGIC","ONEPROJECTILERADIUSTHREEMAGIC","PROJECTILETWOMAGIC","PROJECTILETHREEMAGIC","ONEPROJECTILEFOURMAGIC","MYSTBRADIUSEFFECT","COMBINED","PHYSICAL","STUN","PURE","FATIGUE","AGONY","ONEPRMAGIC","TWOPRMAGIC","THREEPRMAGIC","FOURPRMAGIC","FIVEPRMAGIC","ONE","TWO","THREE","FOUR","FIVE","ONEDFOUR","ONEDSIX","ONEDEIGHT","ONEDTEN","ONEDTWELVE","ONEDTWENTY","TWODFOUR","TWODSIX","TWODEIGHT","TWODTEN","TWODTWELVE","TWODTWENTY","THREEDFOUR","THREEDSIX","THREEDEIGHT","THREEDTEN","THREEDTWELVE","FOURDFOUR","FOURDSIX","FOURDEIGHT","FOURDTEN","FIVEDFOUR","FIVEDSIX","FIVEDEIGHT","SIXDFOUR","MYSTB","MYSTBDOUBLE","QUARTERMAGIC","HALFMAGIC","MAGIC","COLLETERAL","ONEMETER","TWOMETER","THREEMETER","FOURMETER","FIVEMETER","SIXMETER","SEVENMETER","EIGHTMETER","NINEMETER","TENMETER","HALFMAGICMETER","MAGICMETER","DOUBLEMAGICMETER","ONEMAGIC","TWOMAGIC","THREEMAGIC","FOURMAGIC","FIVEMAGIC","SCALING","BALL","MISSILE","BOLT","RAY","SPRAY","LASSO","DIRECTTARGET","AURATARGETING","INDIRECTTARGETING","FOURMYSTBROUNDS","NINETHREE","NINETHREECHANNEL","SEVENTHREE","FIVETHREE","DRAINCHENNEL","DRAINTHREE","MAGIFAITHHOURS","getAllPhysical","getAllStun","SIX","SEVEN","EIGHT","NINE","EARTH","AIR","DIVINE","DEMONIC","DRUIDIC","PSYCHIC","TOUCH","SONIC","RADIUS","RADIUSPLUS","LOSAURA","LOSMANIPULATE","LOSPOINT","VERBAL","SOMATIC","MENTAL","RITUAL","SINGLE","DAOE","MULTI","AOE","CASTER","TARGET","LINE","CONCENTRATION","INSTANTANEOUS","PERMANENT","FIXEDTICKS","FIXEDROUNDS","FIXEDHOURS","CHANNEL","TRANSMUTATION","EVOCATION","FORTIFICATION","ILLUSION","CONJURATION","NECROMANCY","ENCHANTMENT","commands","newCommands","rolls","fullCommand","commandSplits","multiplier","startsWith","com","i","newRoll","rollDie","size","max","random","setLoading","entitiyFound","setEntity","newType","catch","formatIcon","TalentCategory","category","effect","trigger","triggerFrequency","ticks","this","magical","arg","nameCheck","costCheck","isFlawCheck","prerequisiteCheck","effectCheck","typeCheck","stressCheck","triggerCheck","triggerFrequencyCheck","ticksCheck","source","castTime","rite","duration","durationText","range","school","damageText","mastery","resist","masteryDrain","scalingEffect","spellTarget","aoeRadius","damage","directEffects","level","projectileType","projectileNumber","damageType","targetingType","losRange","drainType","pureDamage","hp","chargeable","needsMaterial","spell","abilityModifier","stamina","flaws","Bar","child","Tab","isActive","setName","setPeer","brokerId","min","password","characters","floor","generateBrokerId","newPeer","errorData","disconnected","destroyed","reconnect"],"mappings":"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","file":"static/js/9.ab10c3cb.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { sendMessage } from \"../../services/DiscordService\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst SmallFormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20(`\" + (result - value) + \"`)\" + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <Link onClick={() => history.push(link)}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </Link>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <FormatedTextContainer>{formatedText}</FormatedTextContainer>;\n};\n\nexport default SmallFormatedText;\n\nconst FormatedTextContainer = styled.div`\n  padding: 5px;\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Talent from \"../../../data/Talent\";\nimport SmallFormatedText from \"../../general_elements/SmallFormatedText\";\n\ninterface $Props {\n  talent: Talent;\n}\n\nconst TalentTile = ({ talent }: $Props) => {\n  return (\n    <Tile to={\"/talent-detail/id/\" + talent.id} $isflaw={talent.isFlaw}>\n      <Cost>\n        <b>{talent.cost}</b>\n      </Cost>\n\n      <Name>\n        <b>{talent.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <Prop>{talent.type ? talent.stress : \"Passive\"}</Prop>\n        <SmallFormatedText text={talent.prerequisite} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default TalentTile;\n\ntype type = {\n  $isflaw: boolean;\n};\n\nconst Tile = styled(Link)<type>`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  ${(props) => {\n    if (props.$isflaw) {\n      return `background-color: ${props.theme.input.backgroundColor};`;\n    } else {\n      return `background-color: ${props.theme.tile.backgroundColor};`;\n    }\n  }}\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n`;\n\nconst Cost = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: white;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 105;","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Talent, { isTalent } from \"../data/Talent\";\n\nexport const scanImportFileTest = async (json: any, fileName: string, callback: () => void) => {\n  let promList: Promise<any>[] = [];\n\n  if (!Array.isArray(json)) {\n    json = [json];\n  }\n\n  json.forEach((obj: any) => {\n    if (isTalent(obj)) {\n      promList.push(saveNew(\"talents\", obj as Talent, fileName));\n    }\n  });\n  await Promise.all(promList);\n  callback();\n};\n\n// const scanForFormatErrors = (obj: any) => {\n//   const itemFormatErrors = findItemFromattError(obj);\n//   let itemFailCount: number = 0;\n//   for (const value of Object.entries(itemFormatErrors)) {\n//     if (!value[1]) itemFailCount++;\n//   }\n//   const gearFormatErrors = findGearFormattError(obj);\n//   let gearFailCount: number = 0;\n//   for (const value of Object.entries(gearFormatErrors)) {\n//     if (!value[1]) gearFailCount++;\n//   }\n//   const spellFormatErrors = findSpellFormattError(obj);\n//   let spellFailCount: number = 0;\n//   for (const value of Object.entries(spellFormatErrors)) {\n//     if (!value[1]) spellFailCount++;\n//   }\n//   const monsterFormatErrors = findMonsterFormattError(obj);\n//   let monsterFailCount: number = 0;\n//   for (const value of Object.entries(monsterFormatErrors)) {\n//     if (!value[1]) monsterFailCount++;\n//   }\n//   const raceFormatErrors = findRaceFormattError(obj);\n//   let raceFailCount: number = 0;\n//   for (const value of Object.entries(raceFormatErrors)) {\n//     if (!value[1]) raceFailCount++;\n//   }\n//   const subraceFormatErrors = findSubraceFormattError(obj);\n//   let subraceFailCount: number = 0;\n//   for (const value of Object.entries(subraceFormatErrors)) {\n//     if (!value[1]) subraceFailCount++;\n//   }\n//   const classFormatErrors = findClassFormattError(obj);\n//   let classFailCount: number = 0;\n//   for (const value of Object.entries(classFormatErrors)) {\n//     if (!value[1]) classFailCount++;\n//   }\n//   const subclassFormatErrors = formattSubclassFromattError(obj);\n//   let subclassFailCount: number = 0;\n//   for (const value of Object.entries(subclassFormatErrors)) {\n//     if (!value[1]) subclassFailCount++;\n//   }\n//   const selectionFormatErrors = findSelectionFormattError(obj);\n//   let selectionFailCount: number = 0;\n//   for (const value of Object.entries(selectionFormatErrors)) {\n//     if (!value[1]) selectionFailCount++;\n//   }\n\n//   let errors: any[] = [];\n//   if (\n//     itemFailCount <= gearFailCount &&\n//     itemFailCount <= spellFailCount &&\n//     itemFailCount <= raceFailCount &&\n//     itemFailCount <= subraceFailCount &&\n//     itemFailCount <= classFailCount &&\n//     itemFailCount <= subclassFailCount &&\n//     itemFailCount <= selectionFailCount &&\n//     itemFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ item: itemFormatErrors });\n//   }\n//   if (\n//     gearFailCount <= itemFailCount &&\n//     gearFailCount <= spellFailCount &&\n//     gearFailCount <= raceFailCount &&\n//     gearFailCount <= subraceFailCount &&\n//     gearFailCount <= classFailCount &&\n//     gearFailCount <= subclassFailCount &&\n//     gearFailCount <= selectionFailCount &&\n//     gearFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ gear: gearFormatErrors });\n//   }\n//   if (\n//     spellFailCount <= itemFailCount &&\n//     spellFailCount <= gearFailCount &&\n//     spellFailCount <= raceFailCount &&\n//     spellFailCount <= subraceFailCount &&\n//     spellFailCount <= classFailCount &&\n//     spellFailCount <= subclassFailCount &&\n//     spellFailCount <= selectionFailCount &&\n//     spellFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ spell: spellFormatErrors });\n//   }\n//   if (\n//     monsterFailCount <= itemFailCount &&\n//     monsterFailCount <= gearFailCount &&\n//     monsterFailCount <= raceFailCount &&\n//     monsterFailCount <= subraceFailCount &&\n//     monsterFailCount <= classFailCount &&\n//     monsterFailCount <= subclassFailCount &&\n//     monsterFailCount <= selectionFailCount &&\n//     monsterFailCount <= spellFailCount\n//   ) {\n//     errors.push({ monster: monsterFormatErrors });\n//   }\n//   if (\n//     raceFailCount <= itemFailCount &&\n//     raceFailCount <= gearFailCount &&\n//     raceFailCount <= monsterFailCount &&\n//     raceFailCount <= subraceFailCount &&\n//     raceFailCount <= classFailCount &&\n//     raceFailCount <= subclassFailCount &&\n//     raceFailCount <= selectionFailCount &&\n//     raceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ race: raceFormatErrors });\n//   }\n//   if (\n//     subraceFailCount <= itemFailCount &&\n//     subraceFailCount <= gearFailCount &&\n//     subraceFailCount <= monsterFailCount &&\n//     subraceFailCount <= raceFailCount &&\n//     subraceFailCount <= classFailCount &&\n//     subraceFailCount <= subclassFailCount &&\n//     subraceFailCount <= selectionFailCount &&\n//     subraceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subrace: subraceFormatErrors });\n//   }\n//   if (\n//     classFailCount <= itemFailCount &&\n//     classFailCount <= gearFailCount &&\n//     classFailCount <= monsterFailCount &&\n//     classFailCount <= raceFailCount &&\n//     classFailCount <= subraceFailCount &&\n//     classFailCount <= subclassFailCount &&\n//     classFailCount <= selectionFailCount &&\n//     classFailCount <= spellFailCount\n//   ) {\n//     errors.push({ class: classFormatErrors });\n//   }\n//   if (\n//     subclassFailCount <= itemFailCount &&\n//     subclassFailCount <= gearFailCount &&\n//     subclassFailCount <= monsterFailCount &&\n//     subclassFailCount <= raceFailCount &&\n//     subclassFailCount <= subraceFailCount &&\n//     subclassFailCount <= classFailCount &&\n//     subclassFailCount <= selectionFailCount &&\n//     subclassFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subclass: subclassFormatErrors });\n//   }\n//   if (\n//     selectionFailCount <= itemFailCount &&\n//     selectionFailCount <= gearFailCount &&\n//     selectionFailCount <= monsterFailCount &&\n//     selectionFailCount <= raceFailCount &&\n//     selectionFailCount <= subraceFailCount &&\n//     selectionFailCount <= classFailCount &&\n//     selectionFailCount <= subclassFailCount &&\n//     selectionFailCount <= spellFailCount\n//   ) {\n//     errors.push({ selection: selectionFormatErrors });\n//   }\n//   return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n// };\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let entity = { [tableName]: all };\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(entity)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(entity));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  const spells = await reciveAllPromise(\"spells\");\n\n  let all: any = {\n    spells: spells,\n  };\n\n  let contentType = \"application/json;charset=utf-8;\";\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n      type: contentType,\n    });\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../services/OptionService\";\nimport IEntity from \"../../data/IEntity\";\n\nimport {\n  faCheck,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thedndtome.com\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField\n        value={peerId}\n        label={\"ID to recive from\"}\n        onChange={(id) => setId(id)}\n      />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton\n            text={\"Accept\"}\n            icon={faCheck}\n            onClick={() => acceptData()}\n          />\n          <TextButton\n            text={\"Decline\"}\n            icon={faCheck}\n            onClick={() => declineData()}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../theme/Theme\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst TalentsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Talents?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"talents\", \"SkirmishTome_talents.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Talents?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"talents\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all talents`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"talents\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default TalentsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, accept, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} accept={accept} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport FileField from \"./FileField\";\nimport IEntity from \"../../data/IEntity\";\nimport { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport { saveNewFromList } from \"../../services/DatabaseService\";\n\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nexport enum ImportModus {\n  NORMAL,\n}\n\ninterface $Props {\n  modus: ImportModus;\n}\n\nconst ImportField = ({ modus }: $Props) => {\n  const [files, setFiles] = useState<File[]>([]);\n\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      setFiles(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\".json\"}\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n      <Files>\n        {files &&\n          files.map((file: File, index: number) => (\n            <FileTile key={index} modus={modus} file={file} />\n          ))}\n      </Files>\n    </>\n  );\n};\n\nexport default ImportField;\n\ninterface $FileProps {\n  file: File;\n  modus: ImportModus;\n}\n\nconst FileTile = ({ file, modus }: $FileProps) => {\n  const [succCount, setSucc] = useState<number>(0);\n  const [maxCount, setMax] = useState<number>(0);\n\n  const scanImportFile = async (json: any, fileName: string) => {\n    console.log(\"Start 5eTools Json interpreting \" + fileName);\n\n    let listOfNew: { tableName: string; newEntitiy: IEntity }[] = [];\n\n    let newMax: number = 0;\n    for (const [key, value] of Object.entries(json)) {\n      if (Array.isArray(value)) {\n        newMax += value.length;\n        if (modus === ImportModus.NORMAL) {\n          // eslint-disable-next-line\n          value.forEach((obj: any) => listOfNew.push({ tableName: key, newEntitiy: obj }));\n        }\n      }\n    }\n    setMax(newMax);\n\n    while (listOfNew.length > 0) {\n      let newTableName = listOfNew[0].tableName;\n      let bulkList: IEntity[] = listOfNew\n        .filter((newEntitiy) => newEntitiy.tableName === newTableName)\n        .map((entity: { tableName: string; newEntitiy: IEntity }) => {\n          return entity.newEntitiy;\n        });\n      await saveNewFromList(newTableName, bulkList, fileName);\n      listOfNew = listOfNew.filter((entity) => entity.tableName !== newTableName);\n      setSucc(newMax - listOfNew.length);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Start Filereader \" + file.name);\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        let json = JSON.parse(content.toString());\n        console.log(\"Json loaded from \" + file.name);\n        scanImportFile(json, file.name);\n      }\n    };\n    fileReader.readAsText(file);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file]);\n\n  return (\n    <FileWrapper>\n      {file.name} {succCount}/{maxCount}\n      <ProgressBar\n        completed={Math.round((succCount / maxCount) * 100)}\n        isLabelVisible={false}\n        bgcolor={\"#F55C5C\"}\n        height={\"5px\"}\n        margin={\"5px\"}\n      />\n    </FileWrapper>\n  );\n};\n\nconst Files = styled.div`\n  flex: 1 1 100%;\n`;\n\nconst FileWrapper = styled.div`\n  width: clac(100% - 20px);\n  height: 50px;\n  padding: 10px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport StringField from \"../form_elements/StringField\";\n\nconst DiscordOptions = () => {\n  const [webhook, setWebhook] = useState<string>(localStorage.getItem(\"webhook\") + \"\");\n  const [webhookUser, setWebhookUser] = useState<string>(localStorage.getItem(\"webhook_user\") + \"\");\n\n  useEffect(() => {\n    if (webhook !== localStorage.getItem(\"webhook\")) localStorage.setItem(\"webhook\", webhook);\n  }, [webhook]);\n\n  useEffect(() => {\n    if (webhookUser !== localStorage.getItem(\"webhook_user\"))\n      localStorage.setItem(\"webhook_user\", webhookUser);\n  }, [webhookUser]);\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Discord Webhook</SelectionTitle>\n        <StringField value={webhookUser} label=\"PlayerName\" onChange={setWebhookUser} />\n        <StringField value={webhook} label=\"Webhook\" onChange={setWebhook} />\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default DiscordOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import IEntity from \"../data/IEntity\";\nimport Spell from \"../data/Spell\";\nimport {\n  SpellSource,\n  SpellRite,\n  SpellDuration,\n  SpellRange,\n  SpellSchool,\n  SpellTarget,\n  SpellDrainType,\n  SpellLevel,\n  SpellCastTime,\n  SpellDamage,\n  SpellScalingEffect,\n  SpellAoeRadius,\n  SpellDirectEffects,\n  SpellProjectileType,\n  SpellProjectileNumber,\n  SpellDamageType,\n  SpellTargetingType,\n  SpellLosRange,\n  SpellSize,\n  SpellPureDamage,\n  SpellHp,\n} from \"../data/SpellValues\";\nimport { saveNewFromList } from \"./DatabaseService\";\n\nexport const scanImportedSpellCsv = (csv: Array<any>, filename: string) => {\n  let listOfSpells: Array<Spell> = [];\n  console.log(\"Raw\", csv);\n  csv.slice(1).forEach((row: Array<string>) => {\n    let newSpell = new Spell(\n      0,\n      row[0],\n      SpellSource.find(row[1]),\n      SpellCastTime.find(row[24]),\n      SpellRite.find(row[4]),\n      SpellDuration.find(row[23]),\n      \"\",\n      SpellRange.find(row[7]),\n      SpellSchool.find(row[25]),\n      row[27],\n      \"\",\n      row[28],\n      row[31],\n      0,\n      +row[29],\n      SpellScalingEffect.find(row[14]),\n      SpellTarget.find(row[3]),\n      SpellAoeRadius.find(row[9]),\n      [\n        SpellDamage.find(row[13]),\n        SpellDamage.find(row[14]),\n        SpellDamage.find(row[15]),\n      ],\n      SpellDirectEffects.NONE,\n      SpellLevel.find(row[2]),\n      SpellProjectileType.find(row[10]),\n      SpellProjectileNumber.find(row[11]),\n      SpellDamageType.find(row[17]),\n      SpellTargetingType.find(row[16]),\n      SpellLosRange.find(row[8]),\n      SpellDrainType.find(row[22]),\n      SpellPureDamage.find(row[18]),\n      SpellSize.find(row[21]),\n      SpellHp.find(row[20]),\n      row[30]?.toLowerCase() === \"yes\" ? true : false,\n      row[6]?.toLowerCase() === \"yes\" ? true : false\n    );\n    newSpell.drain = Spell.calcDrain(newSpell);\n    listOfSpells.push(newSpell);\n  });\n  console.log(\"Processed Spells\", listOfSpells);\n  saveInDB(\"spells\", listOfSpells, filename);\n};\n\nexport const saveInDB = async (\n  tablename: string,\n  listOfIEntity: Array<IEntity>,\n  filename: string\n) => {\n  let listOfNew = [...listOfIEntity];\n  await saveNewFromList(tablename, listOfNew, filename);\n  console.log(\"Done saving\");\n};\n\n// export const parseRowEntry = (entry: string): number => {\n//   return parseInt(\n//     entry.replaceAll(\"€\", \"\").trim().replaceAll(\".\", \"\").replaceAll(\",\", \"\")\n//   );\n// };\n\n// export const updateListsWith = (bookeeEntryJson: BookeeEntry[]) => {\n//   bookeeEntryJson.forEach((entry: BookeeEntry) => {\n//     reciveAllByAttributes(\n//       \"[dateDay+dateMonth+dateYear]\",\n//       [[entry.dateDay, entry.dateMonth, entry.dateYear]],\n//       (data: any[]) => {\n//         let isPresent = false;\n//         data.forEach((dat: any) => {\n//           const compDat = { ...dat };\n//           delete compDat[\"id\"];\n//           if (JSON.stringify(compDat) === JSON.stringify(entry))\n//             isPresent = true;\n//         });\n//         if (!isPresent) {\n//           console.log(\n//             `New Entry on ${\n//               (entry.dateDay, entry.dateMonth, entry.dateYear)\n//             } will be saved.`\n//           );\n//           saveNew(entry);\n//         }\n//       }\n//     );\n//   });\n// };\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { exportAll } from \"../../services/OptionService\";\nimport {\n  deleteAll,\n  reciveCount,\n} from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport P2PReciver from \"../p2p/P2PReciver\";\n\nimport Talent, { isTalent } from \"../../data/Talent\";\n\nimport { faFileExport, faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../general_elements/TabBar\";\nimport IconButton from \"../form_elements/IconButton\";\nimport TalentTile from \"../entities/talents/TalentTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport TalentsOptions from \"./TalentsOptions\";\nimport ImportField, { ImportModus } from \"../form_elements/ImportField\";\nimport DiscordOptions from \"./DiscordOptions\";\nimport { useCSVDownloader, usePapaParse } from \"react-papaparse\";\nimport FileField from \"../form_elements/FileField\";\nimport { scanImportedSpellCsv } from \"../../services/CsvService\";\nimport Spell from \"../../data/Spell\";\nimport Race from \"../../data/Race\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [talentAmount, setTalentAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  const { readString } = usePapaParse();\n  const { CSVDownloader, Type } = useCSVDownloader();\n  const [csvBackup, setBackup] = useState<any>();\n\n  const handleSpellCsvUpload = (files: any) => {\n    const file: File = files[0];\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        readString(content.toString(), {\n          worker: true,\n          complete: (results) => {\n            console.log(\"Csv loaded from \" + file.name);\n            const csv: Array<any> = results.data;\n            console.log(csv);\n            scanImportedSpellCsv(csv, file.name);\n            console.log(\"---------\");\n          },\n        });\n      }\n    };\n    fileReader.readAsText(file);\n  };\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"talents\", (result: number) => {\n        setTalentAmount(result);\n      });\n      let backup: any[] = [];\n      backup.push([\"Spell\"].concat(Object.keys(new Spell())));\n      backup.push([\"Talent\"].concat(Object.keys(new Talent())));\n      backup.push([\"Race\"].concat(Object.keys(new Race())));\n      setBackup(backup);\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isTalent(entity)) {\n      return <TalentTile key={index} talent={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  return (\n    <>\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <ImportField modus={ImportModus.NORMAL} />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAll(\"SkirmishTome_all.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <CSVDownloader\n          type={Type.Button}\n          filename={\n            \"CsvBackup_\" +\n            new Date().getFullYear() +\n            \".\" +\n            (new Date().getMonth() + 1)\n          }\n          bom={true}\n          config={{\n            delimiter: \";\",\n          }}\n          data={csvBackup}\n        >\n          Download\n        </CSVDownloader>\n      </OptionSection>\n      <TabBar\n        children={[\"General\", \"Talents\", \"Discord\", \"Receive\", \"CSV Imports\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Talents\" && (\n        <TalentsOptions\n          amount={talentAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Discord\" && <DiscordOptions />}\n      {activeTab === \"Receive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {activeTab === \"CSV Imports\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Import Spell CSV</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              accept={\".csv\"}\n              icon={faFileImport}\n              onChange={(file) => handleSpellCsvUpload(file)}\n            />\n          </OptionSection>\n        </OptionTab>\n      )}\n      {/* {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })} */}\n    </>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-align: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import Dexie from \"dexie\";\nimport Race from \"../data/Race\";\nimport RandomTable from \"../data/RandomTable\";\nimport Spell from \"../data/Spell\";\nimport Talent from \"../data/Talent\";\n\nexport class SkirmishDB extends Dexie {\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  talents: Dexie.Table<Talent, number>;\n  races: Dexie.Table<Race, number>;\n  spells: Dexie.Table<Spell, number>;\n\n  constructor() {\n    super(\"SkirmishTomeDB\");\n    this.version(1).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(2).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(3).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery,resist, drain\",\n    });\n    this.version(4).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n    });\n\n    this.talents = this.table(\"talents\");\n    this.spells = this.table(\"spells\");\n    this.races = this.table(\"races\");\n    this.randomTables = this.table(\"randomTables\");\n  }\n}\n","import { SkirmishDB } from \"../database/SkirmishDB\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\n// export const saveNewFromList = (tableName: string, entities: BookeeEntry[]) => {\n//   const db = new BookeeDB();\n//   db.open()\n//     .then(async function () {\n//       const refinedEntities = (entities as BookeeEntry[]).map(\n//         (entity: BookeeEntry) => {\n//           delete entity[\"id\"];\n//           return entity;\n//         }\n//       );\n//       const prom = await db.table(tableName).bulkPut(refinedEntities);\n//       return prom;\n//     })\n//     .finally(function () {\n//       db.close();\n//     });\n// };\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new SkirmishDB();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new SkirmishDB();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  style?: any;\n  onClick?: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, style, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick} style={style}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton style={style}>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  style?: any;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, style, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled} style={style}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","export function useWebhook(): { hook: string; name: string } | undefined {\n  if (localStorage.getItem(\"webhook\") !== null && localStorage.getItem(\"webhook\") !== \"\") {\n    let name = \"SkirmishTome\";\n    if (localStorage.getItem(\"webhook_user\") !== null)\n      name = localStorage.getItem(\"webhook_user\") + \"\";\n    return { hook: localStorage.getItem(\"webhook\") + \"\", name: name };\n  } else return undefined;\n}\n","export const sendMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  content: string,\n  avatar?: string\n) => {\n  if (webhook !== undefined) {\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    let params = {\n      username: webhook.name !== \"\" ? webhook.name : \"SkirmishTome\",\n      avatar_url: avatar !== undefined ? avatar : \"\",\n      content: content,\n    };\n    request.send(JSON.stringify(params));\n  }\n};\n\nexport const sendEmbedMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  params: string\n) => {\n  if (webhook !== undefined) {\n    console.log(params);\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.send(params);\n  }\n};\n\nexport const formatDiscordText = (text: string): string => {\n  if (text.includes(\"[[\")) {\n    return text.replaceAll(\"[[\", \"*\").replaceAll(\"]]\", \"*\");\n  } else {\n    return text;\n  }\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","export interface StringPair {\n  label: string;\n  drain: number;\n}\nexport interface NumberPair {\n  label: number;\n  drain: number;\n}\n\n// export class Dummy {\n//   static readonly NONE: StringPair = { label: \"\", drain: 0,};\n//   static readonly DUMMY: StringPair = { label: , drain: 0 };\n\n//   private constructor(\n//     private readonly label: string,\n//     public readonly drain: number\n//   ) {}\n\n//   static find = (label: string): StringPair => {\n//     switch (label?.toLowerCase().trim()) {\n//       case Dummy.DUMMY.label.toLowerCase():\n//         return Dummy.DUMMY;\n//       default:\n//         return Dummy.NONE;\n//     }\n//   };\n//   static getAll = (): string[] => {\n//     return [Dummy.DUMMY.label];\n//   };\n// }\n\nexport class SpellPureDamage {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ACID: StringPair = { label: \"Acid\", drain: 0 };\n  static readonly NECROTIC: StringPair = { label: \"Necrotic\", drain: 0 };\n  static readonly FROST: StringPair = { label: \"Frost\", drain: 0 };\n  static readonly FIRE: StringPair = { label: \"Fire\", drain: 0 };\n  static readonly LIGHTNING: StringPair = { label: \"Lightning\", drain: 0 };\n  static readonly RADIANT: StringPair = { label: \"Radiant\", drain: 0 };\n  static readonly ARCANE: StringPair = { label: \"Arcane\", drain: 1 };\n  static readonly POISON: StringPair = { label: \"Poison\", drain: 0 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellPureDamage.ACID.label.toLowerCase():\n        return SpellPureDamage.ACID;\n      case SpellPureDamage.NECROTIC.label.toLowerCase():\n        return SpellPureDamage.NECROTIC;\n      case SpellPureDamage.FROST.label.toLowerCase():\n        return SpellPureDamage.FROST;\n      case SpellPureDamage.FIRE.label.toLowerCase():\n        return SpellPureDamage.FIRE;\n      case SpellPureDamage.LIGHTNING.label.toLowerCase():\n        return SpellPureDamage.LIGHTNING;\n      case SpellPureDamage.RADIANT.label.toLowerCase():\n        return SpellPureDamage.RADIANT;\n      case SpellPureDamage.ARCANE.label.toLowerCase():\n        return SpellPureDamage.ARCANE;\n      case SpellPureDamage.POISON.label.toLowerCase():\n        return SpellPureDamage.POISON;\n      default:\n        return SpellPureDamage.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellPureDamage.NONE.label,\n      SpellPureDamage.ACID.label,\n      SpellPureDamage.NECROTIC.label,\n      SpellPureDamage.FROST.label,\n      SpellPureDamage.FIRE.label,\n      SpellPureDamage.LIGHTNING.label,\n      SpellPureDamage.RADIANT.label,\n      SpellPureDamage.ARCANE.label,\n      SpellPureDamage.POISON.label,\n    ];\n  };\n}\n\nexport class SpellHp {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSTRUCTUREHP: StringPair = {\n    label: \"1/2 Magic/Faith structure rating and Magic/Faith *1 hit points\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSTRUCTUREDOUBLEHP: StringPair = {\n    label: \"1/2 Magic/Faith structure rating and Magic/Faith *2 hit points\",\n    drain: 1,\n  };\n  static readonly HALFMAGICSTRUCTURETRIPPLEHP: StringPair = {\n    label: \"1/2 Magic/Faith structure rating and Magic/Faith *3 hit points\",\n    drain: 2,\n  };\n  static readonly MAGICSTRUCTUREHP: StringPair = {\n    label: \"Magic/Faith structure rating and Magic/Faith *1 hit points\",\n    drain: 1,\n  };\n  static readonly MAGICSTRUCTUREDOUBLEHP: StringPair = {\n    label: \"Magic/Faith structure rating and Magic/Faith *2 hit points\",\n    drain: 3,\n  };\n  static readonly DOUBLEMAGICESTRUCTUREHP: StringPair = {\n    label: \"Magic/Faith *2 structure rating and Magic/Faith hit points\",\n    drain: 4,\n  };\n  static readonly MAGICHP: StringPair = {\n    label: \"Magic/Faith *1 hit points\",\n    drain: 1,\n  };\n  static readonly MAGICDOUBLEHP: StringPair = {\n    label: \"Magic/Faith *2 hit points\",\n    drain: 2,\n  };\n  static readonly MAGICTRIPPLEHP: StringPair = {\n    label: \"Magic/Faith *3 hit points\",\n    drain: 3,\n  };\n  static readonly MAGICQUADRUPLEHP: StringPair = {\n    label: \"Magic/Faith *4 hit points\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellHp.HALFMAGICSTRUCTUREHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTUREHP;\n      case SpellHp.HALFMAGICSTRUCTUREDOUBLEHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTUREDOUBLEHP;\n      case SpellHp.HALFMAGICSTRUCTURETRIPPLEHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTURETRIPPLEHP;\n      case SpellHp.MAGICSTRUCTUREHP.label.toLowerCase():\n        return SpellHp.MAGICSTRUCTUREHP;\n      case SpellHp.MAGICSTRUCTUREDOUBLEHP.label.toLowerCase():\n        return SpellHp.MAGICSTRUCTUREDOUBLEHP;\n      case SpellHp.DOUBLEMAGICESTRUCTUREHP.label.toLowerCase():\n        return SpellHp.DOUBLEMAGICESTRUCTUREHP;\n      case SpellHp.MAGICHP.label.toLowerCase():\n        return SpellHp.MAGICHP;\n      case SpellHp.MAGICDOUBLEHP.label.toLowerCase():\n        return SpellHp.MAGICDOUBLEHP;\n      case SpellHp.MAGICTRIPPLEHP.label.toLowerCase():\n        return SpellHp.MAGICTRIPPLEHP;\n      case SpellHp.MAGICQUADRUPLEHP.label.toLowerCase():\n        return SpellHp.MAGICQUADRUPLEHP;\n      default:\n        return SpellHp.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellHp.NONE.label,\n      SpellHp.HALFMAGICSTRUCTUREHP.label,\n      SpellHp.HALFMAGICSTRUCTUREDOUBLEHP.label,\n      SpellHp.HALFMAGICSTRUCTURETRIPPLEHP.label,\n      SpellHp.MAGICSTRUCTUREHP.label,\n      SpellHp.MAGICSTRUCTUREDOUBLEHP.label,\n      SpellHp.DOUBLEMAGICESTRUCTUREHP.label,\n      SpellHp.MAGICHP.label,\n      SpellHp.MAGICDOUBLEHP.label,\n      SpellHp.MAGICTRIPPLEHP.label,\n      SpellHp.MAGICQUADRUPLEHP.label,\n    ];\n  };\n}\n\nexport class SpellSize {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSQUARED: StringPair = {\n    label: \"1/2 Magic/Faith M²\",\n    drain: 0,\n  };\n  static readonly MAGICSQUARED: StringPair = {\n    label: \"Magic/Faith M²\",\n    drain: 1,\n  };\n  static readonly DOUBLEMAGICSQUARED: StringPair = {\n    label: \"Magic/Faith *2 M²\",\n    drain: 2,\n  };\n  static readonly TRIPPLEMAGICSQUARED: StringPair = {\n    label: \"Magic/Faith *3 M²\",\n    drain: 4,\n  };\n  static readonly HALFMAGICQUBED: StringPair = {\n    label: \"1/2 Magic/Faith M³\",\n    drain: 0,\n  };\n  static readonly MAGICQUBED: StringPair = {\n    label: \"Magic/Faith M³\",\n    drain: 1,\n  };\n  static readonly DOUBLEMAGICQUBED: StringPair = {\n    label: \"Magic/Faith *2 M³\",\n    drain: 2,\n  };\n  static readonly TRIPPLEMAGICQUBED: StringPair = {\n    label: \"Magic/Faith *3 M³\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSize.HALFMAGICSQUARED.label.toLowerCase():\n        return SpellSize.HALFMAGICSQUARED;\n      case SpellSize.MAGICSQUARED.label.toLowerCase():\n        return SpellSize.MAGICSQUARED;\n      case SpellSize.DOUBLEMAGICSQUARED.label.toLowerCase():\n        return SpellSize.DOUBLEMAGICSQUARED;\n      case SpellSize.TRIPPLEMAGICSQUARED.label.toLowerCase():\n        return SpellSize.TRIPPLEMAGICSQUARED;\n      case SpellSize.HALFMAGICQUBED.label.toLowerCase():\n        return SpellSize.HALFMAGICQUBED;\n      case SpellSize.MAGICQUBED.label.toLowerCase():\n        return SpellSize.MAGICQUBED;\n      case SpellSize.DOUBLEMAGICQUBED.label.toLowerCase():\n        return SpellSize.DOUBLEMAGICQUBED;\n      case SpellSize.TRIPPLEMAGICQUBED.label.toLowerCase():\n        return SpellSize.TRIPPLEMAGICQUBED;\n      default:\n        return SpellSize.HALFMAGICSQUARED;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSize.NONE.label,\n      SpellSize.HALFMAGICSQUARED.label,\n      SpellSize.MAGICSQUARED.label,\n      SpellSize.DOUBLEMAGICSQUARED.label,\n      SpellSize.TRIPPLEMAGICSQUARED.label,\n      SpellSize.HALFMAGICQUBED.label,\n      SpellSize.MAGICQUBED.label,\n      SpellSize.DOUBLEMAGICQUBED.label,\n      SpellSize.TRIPPLEMAGICQUBED.label,\n    ];\n  };\n}\n\nexport class SpellDirectEffects {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly DIFFICULTTERRAIN: StringPair = {\n    label: \"Difficult Terrain\",\n    drain: 1,\n  };\n  static readonly LIFELEECH: StringPair = { label: \"Life Leech\", drain: 2 };\n  static readonly COMMUNICATE: StringPair = { label: \"Communicate\", drain: 2 };\n  static readonly CONFUSIONSTUNBLIND: StringPair = {\n    label: \"Confusion / Stun / Blind\",\n    drain: 3,\n  };\n  static readonly HEX: StringPair = { label: \"Hex\", drain: 4 };\n  static readonly IMPAIRMOVEMENTVISION: StringPair = {\n    label: \"Impair Movement / Vision\",\n    drain: 4,\n  };\n  static readonly MOVEFEARROOT: StringPair = {\n    label: \"Move / Fear / Root\",\n    drain: 4,\n  };\n  static readonly DOT: StringPair = { label: \"Damage Over Time\", drain: 3 };\n  static readonly INCAPACITATE: StringPair = {\n    label: \"Incapacitate\",\n    drain: 4,\n  };\n  static readonly SPHERE: StringPair = { label: \"Sphere\", drain: 5 };\n  static readonly KNOCKDOWN: StringPair = { label: \"Knockdown\", drain: 2 };\n  static readonly WALLBARRIERCONSTRUCTSUMMON: StringPair = {\n    label: \"Wall / Barrier / Construct / Summon\",\n    drain: 0,\n  };\n  static readonly TELEPORT: StringPair = { label: \"Teleport\", drain: 6 };\n  static readonly HEAL: StringPair = { label: \"Heal\", drain: 5 };\n  static readonly BUFFILLUSIONSHIELD: StringPair = {\n    label: \"Buff / Illusion / Shield\",\n    drain: 5,\n  };\n  static readonly CHARMCONTROLINFLUENCE: StringPair = {\n    label: \"Charm / Control / Influence\",\n    drain: 3,\n  };\n  static readonly TRANSFORM: StringPair = { label: \"Transform\", drain: 4 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDirectEffects.DIFFICULTTERRAIN.label.toLowerCase():\n        return SpellDirectEffects.DIFFICULTTERRAIN;\n      case SpellDirectEffects.LIFELEECH.label.toLowerCase():\n        return SpellDirectEffects.LIFELEECH;\n      case SpellDirectEffects.COMMUNICATE.label.toLowerCase():\n        return SpellDirectEffects.COMMUNICATE;\n      case SpellDirectEffects.CONFUSIONSTUNBLIND.label.toLowerCase():\n        return SpellDirectEffects.CONFUSIONSTUNBLIND;\n      case SpellDirectEffects.HEX.label.toLowerCase():\n        return SpellDirectEffects.HEX;\n      case SpellDirectEffects.IMPAIRMOVEMENTVISION.label.toLowerCase():\n        return SpellDirectEffects.IMPAIRMOVEMENTVISION;\n      case SpellDirectEffects.MOVEFEARROOT.label.toLowerCase():\n        return SpellDirectEffects.MOVEFEARROOT;\n      case SpellDirectEffects.DOT.label.toLowerCase():\n        return SpellDirectEffects.DOT;\n      case SpellDirectEffects.INCAPACITATE.label.toLowerCase():\n        return SpellDirectEffects.INCAPACITATE;\n      case SpellDirectEffects.SPHERE.label.toLowerCase():\n        return SpellDirectEffects.SPHERE;\n      case SpellDirectEffects.KNOCKDOWN.label.toLowerCase():\n        return SpellDirectEffects.KNOCKDOWN;\n      case SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON.label.toLowerCase():\n        return SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON;\n      case SpellDirectEffects.TELEPORT.label.toLowerCase():\n        return SpellDirectEffects.TELEPORT;\n      case SpellDirectEffects.HEAL.label.toLowerCase():\n        return SpellDirectEffects.HEAL;\n      case SpellDirectEffects.BUFFILLUSIONSHIELD.label.toLowerCase():\n        return SpellDirectEffects.BUFFILLUSIONSHIELD;\n      case SpellDirectEffects.CHARMCONTROLINFLUENCE.label.toLowerCase():\n        return SpellDirectEffects.CHARMCONTROLINFLUENCE;\n      case SpellDirectEffects.TRANSFORM.label.toLowerCase():\n        return SpellDirectEffects.TRANSFORM;\n      default:\n        return SpellDirectEffects.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDirectEffects.NONE.label,\n      SpellDirectEffects.DIFFICULTTERRAIN.label,\n      SpellDirectEffects.LIFELEECH.label,\n      SpellDirectEffects.COMMUNICATE.label,\n      SpellDirectEffects.CONFUSIONSTUNBLIND.label,\n      SpellDirectEffects.HEX.label,\n      SpellDirectEffects.IMPAIRMOVEMENTVISION.label,\n      SpellDirectEffects.MOVEFEARROOT.label,\n      SpellDirectEffects.DOT.label,\n      SpellDirectEffects.INCAPACITATE.label,\n      SpellDirectEffects.SPHERE.label,\n      SpellDirectEffects.KNOCKDOWN.label,\n      SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON.label,\n      SpellDirectEffects.TELEPORT.label,\n      SpellDirectEffects.HEAL.label,\n      SpellDirectEffects.BUFFILLUSIONSHIELD.label,\n      SpellDirectEffects.CHARMCONTROLINFLUENCE.label,\n      SpellDirectEffects.TRANSFORM.label,\n    ];\n  };\n}\n\nexport class SpellScalingEffect {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly MYSTBRADIUS: StringPair = {\n    label: \"plus MystB Meters Radius\",\n    drain: 2,\n  };\n  static readonly MYSTBPROJECTILES: StringPair = {\n    label: \"plus MystB Projectiles\",\n    drain: 2,\n  };\n  static readonly ONEVARIABLEPROJECTILE: StringPair = {\n    label: \"1 Projectile/Effect per Variable Factor\",\n    drain: 3,\n  };\n  static readonly ONEPROJECTILETHREEMAGIC: StringPair = {\n    label: \"1 Projectile/Effect per 3 Magic/Faith Rating\",\n    drain: 2,\n  };\n  static readonly ONEPROJECTILETWOMAGIC: StringPair = {\n    label: \"1 Projectile/Effect per 2 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly ONEPROJECTILERADIUSTWOMAGIC: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per 2 Magic/Faith Rating\",\n    drain: 5,\n  };\n  static readonly ONEPROJECTILERADIUSTHREEMAGIC: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per 3 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PROJECTILETWOMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 2 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PROJECTILETHREEMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 3 Magic/Faith Rating\",\n    drain: 3,\n  };\n  static readonly ONEPROJECTILEFOURMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 4 Magic/Faith Rating\",\n    drain: 2,\n  };\n  static readonly MYSTBRADIUSEFFECT: StringPair = {\n    label: \"plus MystB Meters Radius & Effect\",\n    drain: 3,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellScalingEffect.MYSTBRADIUS.label.toLowerCase():\n        return SpellScalingEffect.MYSTBRADIUS;\n      case SpellScalingEffect.MYSTBPROJECTILES.label.toLowerCase():\n        return SpellScalingEffect.MYSTBPROJECTILES;\n      case SpellScalingEffect.ONEVARIABLEPROJECTILE.label.toLowerCase():\n        return SpellScalingEffect.ONEVARIABLEPROJECTILE;\n      case SpellScalingEffect.ONEPROJECTILETHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.ONEPROJECTILETHREEMAGIC;\n      case SpellScalingEffect.ONEPROJECTILETWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.ONEPROJECTILETWOMAGIC;\n      case SpellScalingEffect.ONEPROJECTILERADIUSTWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.ONEPROJECTILERADIUSTWOMAGIC;\n      case SpellScalingEffect.ONEPROJECTILERADIUSTHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.ONEPROJECTILERADIUSTHREEMAGIC;\n      case SpellScalingEffect.PROJECTILETWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILETWOMAGIC;\n      case SpellScalingEffect.PROJECTILETHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILETHREEMAGIC;\n      case SpellScalingEffect.ONEPROJECTILEFOURMAGIC.label.toLowerCase():\n        return SpellScalingEffect.ONEPROJECTILEFOURMAGIC;\n      case SpellScalingEffect.MYSTBRADIUSEFFECT.label.toLowerCase():\n        return SpellScalingEffect.MYSTBRADIUSEFFECT;\n      default:\n        return SpellScalingEffect.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellScalingEffect.NONE.label,\n      SpellScalingEffect.MYSTBRADIUS.label,\n      SpellScalingEffect.MYSTBPROJECTILES.label,\n      SpellScalingEffect.ONEVARIABLEPROJECTILE.label,\n      SpellScalingEffect.ONEPROJECTILETHREEMAGIC.label,\n      SpellScalingEffect.ONEPROJECTILETWOMAGIC.label,\n      SpellScalingEffect.ONEPROJECTILERADIUSTWOMAGIC.label,\n      SpellScalingEffect.ONEPROJECTILERADIUSTHREEMAGIC.label,\n      SpellScalingEffect.PROJECTILETWOMAGIC.label,\n      SpellScalingEffect.PROJECTILETHREEMAGIC.label,\n      SpellScalingEffect.ONEPROJECTILEFOURMAGIC.label,\n      SpellScalingEffect.MYSTBRADIUSEFFECT.label,\n    ];\n  };\n}\n\nexport class SpellDamageType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly COMBINED: StringPair = { label: \"Combined\", drain: 0 };\n  static readonly PHYSICAL: StringPair = { label: \"Physical\", drain: 0 };\n  static readonly STUN: StringPair = { label: \"Stun\", drain: 1 };\n  static readonly PURE: StringPair = { label: \"Pure\", drain: 2 };\n  static readonly FATIGUE: StringPair = { label: \"Fatigue\", drain: 3 };\n  static readonly AGONY: StringPair = { label: \"Agony\", drain: 5 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDamageType.COMBINED.label.toLowerCase():\n        return SpellDamageType.COMBINED;\n      case SpellDamageType.PHYSICAL.label.toLowerCase():\n        return SpellDamageType.PHYSICAL;\n      case SpellDamageType.STUN.label.toLowerCase():\n        return SpellDamageType.STUN;\n      case SpellDamageType.PURE.label.toLowerCase():\n        return SpellDamageType.PURE;\n      case SpellDamageType.FATIGUE.label.toLowerCase():\n        return SpellDamageType.FATIGUE;\n      case SpellDamageType.AGONY.label.toLowerCase():\n        return SpellDamageType.AGONY;\n      default:\n        return SpellDamageType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDamageType.NONE.label,\n      SpellDamageType.COMBINED.label,\n      SpellDamageType.PHYSICAL.label,\n      SpellDamageType.STUN.label,\n      SpellDamageType.PURE.label,\n      SpellDamageType.FATIGUE.label,\n      SpellDamageType.AGONY.label,\n    ];\n  };\n}\n\nexport class SpellDamage {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONEPRMAGIC: StringPair = {\n    label: \"1 PR Magic/Faith\",\n    drain: 3,\n  };\n  static readonly TWOPRMAGIC: StringPair = {\n    label: \"2 PR Magic/Faith\",\n    drain: 4,\n  };\n  static readonly THREEPRMAGIC: StringPair = {\n    label: \"3 PR Magic/Faith\",\n    drain: 6,\n  };\n  static readonly FOURPRMAGIC: StringPair = {\n    label: \"4 PR Magic/Faith\",\n    drain: 8,\n  };\n  static readonly FIVEPRMAGIC: StringPair = {\n    label: \"5 PR Magic/Faith\",\n    drain: 12,\n  };\n  static readonly ONE: StringPair = { label: \"1\", drain: 1 };\n  static readonly TWO: StringPair = { label: \"2\", drain: 2 };\n  static readonly THREE: StringPair = { label: \"3\", drain: 3 };\n  static readonly FOUR: StringPair = { label: \"4\", drain: 4 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 5 };\n  static readonly ONEDFOUR: StringPair = { label: \"1d4\", drain: 1 };\n  static readonly ONEDSIX: StringPair = { label: \"1d6\", drain: 1 };\n  static readonly ONEDEIGHT: StringPair = { label: \"1d8\", drain: 2 };\n  static readonly ONEDTEN: StringPair = { label: \"1d10\", drain: 3 };\n  static readonly ONEDTWELVE: StringPair = { label: \"1d12\", drain: 3 };\n  static readonly ONEDTWENTY: StringPair = { label: \"1d20\", drain: 5 };\n  static readonly TWODFOUR: StringPair = { label: \"2d4\", drain: 2 };\n  static readonly TWODSIX: StringPair = { label: \"2d6\", drain: 3 };\n  static readonly TWODEIGHT: StringPair = { label: \"2d8\", drain: 4 };\n  static readonly TWODTEN: StringPair = { label: \"2d10\", drain: 5 };\n  static readonly TWODTWELVE: StringPair = { label: \"2d12\", drain: 5 };\n  static readonly TWODTWENTY: StringPair = { label: \"2d20\", drain: 10 };\n  static readonly THREEDFOUR: StringPair = { label: \"3d4\", drain: 3 };\n  static readonly THREEDSIX: StringPair = { label: \"3d6\", drain: 5 };\n  static readonly THREEDEIGHT: StringPair = { label: \"3d8\", drain: 6 };\n  static readonly THREEDTEN: StringPair = { label: \"3d10\", drain: 7 };\n  static readonly THREEDTWELVE: StringPair = { label: \"3d12\", drain: 9 };\n  static readonly FOURDFOUR: StringPair = { label: \"4d4\", drain: 4 };\n  static readonly FOURDSIX: StringPair = { label: \"4d6\", drain: 6 };\n  static readonly FOURDEIGHT: StringPair = { label: \"4d8\", drain: 8 };\n  static readonly FOURDTEN: StringPair = { label: \"4d10\", drain: 11 };\n  static readonly FIVEDFOUR: StringPair = { label: \"5d4\", drain: 5 };\n  static readonly FIVEDSIX: StringPair = { label: \"5d6\", drain: 8 };\n  static readonly FIVEDEIGHT: StringPair = { label: \"5d8\", drain: 12 };\n  static readonly SIXDFOUR: StringPair = { label: \"6d4\", drain: 7 };\n  static readonly MYSTB: StringPair = { label: \"MystB\", drain: 1 };\n  static readonly MYSTBDOUBLE: StringPair = { label: \"MystB *2\", drain: 2 };\n  static readonly QUARTERMAGIC: StringPair = {\n    label: \"1/4 Magic/Faith\",\n    drain: 2,\n  };\n  static readonly HALFMAGIC: StringPair = {\n    label: \"1/2 Magic/Faith\",\n    drain: 3,\n  };\n  static readonly MAGIC: StringPair = { label: \"Magic/Faith\", drain: 4 };\n  static readonly COLLETERAL: StringPair = {\n    label: \"Collateral Damage based on environment\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDamage.ONEPRMAGIC.label.toLowerCase():\n        return SpellDamage.ONEPRMAGIC;\n      case SpellDamage.TWOPRMAGIC.label.toLowerCase():\n        return SpellDamage.TWOPRMAGIC;\n      case SpellDamage.THREEPRMAGIC.label.toLowerCase():\n        return SpellDamage.THREEPRMAGIC;\n      case SpellDamage.FOURPRMAGIC.label.toLowerCase():\n        return SpellDamage.FOURPRMAGIC;\n      case SpellDamage.FIVEPRMAGIC.label.toLowerCase():\n        return SpellDamage.FIVEPRMAGIC;\n      case SpellDamage.ONE.label.toLowerCase():\n        return SpellDamage.ONE;\n      case SpellDamage.TWO.label.toLowerCase():\n        return SpellDamage.TWO;\n      case SpellDamage.THREE.label.toLowerCase():\n        return SpellDamage.THREE;\n      case SpellDamage.FOUR.label.toLowerCase():\n        return SpellDamage.FOUR;\n      case SpellDamage.FIVE.label.toLowerCase():\n        return SpellDamage.FIVE;\n      case SpellDamage.ONEDFOUR.label.toLowerCase():\n        return SpellDamage.ONEDFOUR;\n      case SpellDamage.ONEDSIX.label.toLowerCase():\n        return SpellDamage.ONEDSIX;\n      case SpellDamage.ONEDEIGHT.label.toLowerCase():\n        return SpellDamage.ONEDEIGHT;\n      case SpellDamage.ONEDTEN.label.toLowerCase():\n        return SpellDamage.ONEDTEN;\n      case SpellDamage.ONEDTWELVE.label.toLowerCase():\n        return SpellDamage.ONEDTWELVE;\n      case SpellDamage.ONEDTWENTY.label.toLowerCase():\n        return SpellDamage.ONEDTWENTY;\n      case SpellDamage.TWODFOUR.label.toLowerCase():\n        return SpellDamage.TWODFOUR;\n      case SpellDamage.TWODSIX.label.toLowerCase():\n        return SpellDamage.TWODSIX;\n      case SpellDamage.TWODEIGHT.label.toLowerCase():\n        return SpellDamage.TWODEIGHT;\n      case SpellDamage.TWODTEN.label.toLowerCase():\n        return SpellDamage.TWODTEN;\n      case SpellDamage.TWODTWELVE.label.toLowerCase():\n        return SpellDamage.TWODTWELVE;\n      case SpellDamage.TWODTWENTY.label.toLowerCase():\n        return SpellDamage.TWODTWENTY;\n      case SpellDamage.THREEDFOUR.label.toLowerCase():\n        return SpellDamage.THREEDFOUR;\n      case SpellDamage.THREEDSIX.label.toLowerCase():\n        return SpellDamage.THREEDSIX;\n      case SpellDamage.THREEDEIGHT.label.toLowerCase():\n        return SpellDamage.THREEDEIGHT;\n      case SpellDamage.THREEDTEN.label.toLowerCase():\n        return SpellDamage.THREEDTEN;\n      case SpellDamage.THREEDTWELVE.label.toLowerCase():\n        return SpellDamage.THREEDTWELVE;\n      case SpellDamage.FOURDFOUR.label.toLowerCase():\n        return SpellDamage.FOURDFOUR;\n      case SpellDamage.FOURDSIX.label.toLowerCase():\n        return SpellDamage.FOURDSIX;\n      case SpellDamage.FOURDEIGHT.label.toLowerCase():\n        return SpellDamage.FOURDEIGHT;\n      case SpellDamage.FOURDTEN.label.toLowerCase():\n        return SpellDamage.FOURDTEN;\n      case SpellDamage.FIVEDFOUR.label.toLowerCase():\n        return SpellDamage.FIVEDFOUR;\n      case SpellDamage.FIVEDSIX.label.toLowerCase():\n        return SpellDamage.FIVEDSIX;\n      case SpellDamage.FIVEDEIGHT.label.toLowerCase():\n        return SpellDamage.FIVEDEIGHT;\n      case SpellDamage.SIXDFOUR.label.toLowerCase():\n        return SpellDamage.SIXDFOUR;\n      case SpellDamage.MYSTB.label.toLowerCase():\n        return SpellDamage.MYSTB;\n      case SpellDamage.MYSTBDOUBLE.label.toLowerCase():\n        return SpellDamage.MYSTBDOUBLE;\n      case SpellDamage.QUARTERMAGIC.label.toLowerCase():\n        return SpellDamage.QUARTERMAGIC;\n      case SpellDamage.HALFMAGIC.label.toLowerCase():\n        return SpellDamage.HALFMAGIC;\n      case SpellDamage.MAGIC.label.toLowerCase():\n        return SpellDamage.MAGIC;\n      case SpellDamage.COLLETERAL.label.toLowerCase():\n        return SpellDamage.COLLETERAL;\n      default:\n        return SpellDamage.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDamage.NONE.label,\n      SpellDamage.ONEPRMAGIC.label,\n      SpellDamage.TWOPRMAGIC.label,\n      SpellDamage.THREEPRMAGIC.label,\n      SpellDamage.FOURPRMAGIC.label,\n      SpellDamage.FIVEPRMAGIC.label,\n      SpellDamage.ONE.label,\n      SpellDamage.TWO.label,\n      SpellDamage.THREE.label,\n      SpellDamage.FOUR.label,\n      SpellDamage.FIVE.label,\n      SpellDamage.ONEDFOUR.label,\n      SpellDamage.ONEDSIX.label,\n      SpellDamage.ONEDEIGHT.label,\n      SpellDamage.ONEDTEN.label,\n      SpellDamage.ONEDTWELVE.label,\n      SpellDamage.ONEDTWENTY.label,\n      SpellDamage.TWODFOUR.label,\n      SpellDamage.TWODSIX.label,\n      SpellDamage.TWODEIGHT.label,\n      SpellDamage.TWODTEN.label,\n      SpellDamage.TWODTWELVE.label,\n      SpellDamage.TWODTWENTY.label,\n      SpellDamage.THREEDFOUR.label,\n      SpellDamage.THREEDSIX.label,\n      SpellDamage.THREEDEIGHT.label,\n      SpellDamage.THREEDTEN.label,\n      SpellDamage.THREEDTWELVE.label,\n      SpellDamage.FOURDFOUR.label,\n      SpellDamage.FOURDSIX.label,\n      SpellDamage.FOURDEIGHT.label,\n      SpellDamage.FOURDTEN.label,\n      SpellDamage.FIVEDFOUR.label,\n      SpellDamage.FIVEDSIX.label,\n      SpellDamage.FIVEDEIGHT.label,\n      SpellDamage.SIXDFOUR.label,\n      SpellDamage.MYSTB.label,\n      SpellDamage.MYSTBDOUBLE.label,\n      SpellDamage.QUARTERMAGIC.label,\n      SpellDamage.HALFMAGIC.label,\n      SpellDamage.MAGIC.label,\n      SpellDamage.COLLETERAL.label,\n    ];\n  };\n}\n\nexport class SpellAoeRadius {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONEMETER: StringPair = { label: \"1 Meter\", drain: -1 };\n  static readonly TWOMETER: StringPair = { label: \"2 Meter\", drain: 0 };\n  static readonly THREEMETER: StringPair = { label: \"3 Meter\", drain: 1 };\n  static readonly FOURMETER: StringPair = { label: \"4 Meter\", drain: 2 };\n  static readonly FIVEMETER: StringPair = { label: \"5 Meter\", drain: 2 };\n  static readonly SIXMETER: StringPair = { label: \"6 Meter\", drain: 3 };\n  static readonly SEVENMETER: StringPair = { label: \"7 Meter\", drain: 3 };\n  static readonly EIGHTMETER: StringPair = { label: \"8 Meter\", drain: 4 };\n  static readonly NINEMETER: StringPair = { label: \"9 Meter\", drain: 4 };\n  static readonly TENMETER: StringPair = { label: \"10 Meter\", drain: 5 };\n  static readonly HALFMAGICMETER: StringPair = {\n    label: \"1/2 Magic/Faith Meter\",\n    drain: 2,\n  };\n  static readonly MAGICMETER: StringPair = {\n    label: \"Magic/Faith Meters\",\n    drain: 3,\n  };\n  static readonly DOUBLEMAGICMETER: StringPair = {\n    label: \"Magic/Faith *2 Meters\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellAoeRadius.ONEMETER.label.toLowerCase():\n        return SpellAoeRadius.ONEMETER;\n      case SpellAoeRadius.TWOMETER.label.toLowerCase():\n        return SpellAoeRadius.TWOMETER;\n      case SpellAoeRadius.THREEMETER.label.toLowerCase():\n        return SpellAoeRadius.THREEMETER;\n      case SpellAoeRadius.FOURMETER.label.toLowerCase():\n        return SpellAoeRadius.FOURMETER;\n      case SpellAoeRadius.FIVEMETER.label.toLowerCase():\n        return SpellAoeRadius.FIVEMETER;\n      case SpellAoeRadius.SIXMETER.label.toLowerCase():\n        return SpellAoeRadius.SIXMETER;\n      case SpellAoeRadius.SEVENMETER.label.toLowerCase():\n        return SpellAoeRadius.SEVENMETER;\n      case SpellAoeRadius.EIGHTMETER.label.toLowerCase():\n        return SpellAoeRadius.EIGHTMETER;\n      case SpellAoeRadius.NINEMETER.label.toLowerCase():\n        return SpellAoeRadius.NINEMETER;\n      case SpellAoeRadius.TENMETER.label.toLowerCase():\n        return SpellAoeRadius.TENMETER;\n      case SpellAoeRadius.HALFMAGICMETER.label.toLowerCase():\n        return SpellAoeRadius.HALFMAGICMETER;\n      case SpellAoeRadius.MAGICMETER.label.toLowerCase():\n        return SpellAoeRadius.MAGICMETER;\n      case SpellAoeRadius.DOUBLEMAGICMETER.label.toLowerCase():\n        return SpellAoeRadius.DOUBLEMAGICMETER;\n      default:\n        return SpellAoeRadius.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellAoeRadius.NONE.label,\n      SpellAoeRadius.ONEMETER.label,\n      SpellAoeRadius.TWOMETER.label,\n      SpellAoeRadius.THREEMETER.label,\n      SpellAoeRadius.FOURMETER.label,\n      SpellAoeRadius.FIVEMETER.label,\n      SpellAoeRadius.SIXMETER.label,\n      SpellAoeRadius.SEVENMETER.label,\n      SpellAoeRadius.EIGHTMETER.label,\n      SpellAoeRadius.NINEMETER.label,\n      SpellAoeRadius.TENMETER.label,\n      SpellAoeRadius.HALFMAGICMETER.label,\n      SpellAoeRadius.MAGICMETER.label,\n      SpellAoeRadius.DOUBLEMAGICMETER.label,\n    ];\n  };\n}\n\nexport class SpellLosRange {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGIC: StringPair = {\n    label: \"1/2 Magic/Faith meters\",\n    drain: -1,\n  };\n  static readonly ONEMAGIC: StringPair = {\n    label: \"Magic/Faith meters\",\n    drain: -1,\n  };\n  static readonly TWOMAGIC: StringPair = {\n    label: \"Magic/Faith *2 meters\",\n    drain: 0,\n  };\n  static readonly THREEMAGIC: StringPair = {\n    label: \"Magic/Faith *3 meters\",\n    drain: 1,\n  };\n  static readonly FOURMAGIC: StringPair = {\n    label: \"Magic/Faith *4 meters\",\n    drain: 2,\n  };\n  static readonly FIVEMAGIC: StringPair = {\n    label: \"Magic/Faith *5 meters\",\n    drain: 3,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellLosRange.HALFMAGIC.label.toLowerCase():\n        return SpellLosRange.HALFMAGIC;\n      case SpellLosRange.ONEMAGIC.label.toLowerCase():\n        return SpellLosRange.ONEMAGIC;\n      case SpellLosRange.TWOMAGIC.label.toLowerCase():\n        return SpellLosRange.TWOMAGIC;\n      case SpellLosRange.THREEMAGIC.label.toLowerCase():\n        return SpellLosRange.THREEMAGIC;\n      case SpellLosRange.FOURMAGIC.label.toLowerCase():\n        return SpellLosRange.FOURMAGIC;\n      case SpellLosRange.FIVEMAGIC.label.toLowerCase():\n        return SpellLosRange.FIVEMAGIC;\n      default:\n        return SpellLosRange.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellLosRange.NONE.label,\n      SpellLosRange.HALFMAGIC.label,\n      SpellLosRange.ONEMAGIC.label,\n      SpellLosRange.TWOMAGIC.label,\n      SpellLosRange.THREEMAGIC.label,\n      SpellLosRange.FOURMAGIC.label,\n      SpellLosRange.FIVEMAGIC.label,\n    ];\n  };\n}\n\nexport class SpellProjectileNumber {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONE: StringPair = { label: \"1\", drain: 1 };\n  static readonly TWO: StringPair = { label: \"2\", drain: 2 };\n  static readonly THREE: StringPair = { label: \"3\", drain: 4 };\n  static readonly FOUR: StringPair = { label: \"4\", drain: 6 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 8 };\n  static readonly SCALING: StringPair = {\n    label: \"Scaling / Variable\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellProjectileNumber.ONE.label.toLowerCase():\n        return SpellProjectileNumber.ONE;\n      case SpellProjectileNumber.TWO.label.toLowerCase():\n        return SpellProjectileNumber.TWO;\n      case SpellProjectileNumber.THREE.label.toLowerCase():\n        return SpellProjectileNumber.THREE;\n      case SpellProjectileNumber.FOUR.label.toLowerCase():\n        return SpellProjectileNumber.FOUR;\n      case SpellProjectileNumber.FIVE.label.toLowerCase():\n        return SpellProjectileNumber.FIVE;\n      case SpellProjectileNumber.SCALING.label.toLowerCase():\n        return SpellProjectileNumber.SCALING;\n      default:\n        return SpellProjectileNumber.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellProjectileNumber.NONE.label,\n      SpellProjectileNumber.ONE.label,\n      SpellProjectileNumber.TWO.label,\n      SpellProjectileNumber.THREE.label,\n      SpellProjectileNumber.FOUR.label,\n      SpellProjectileNumber.FIVE.label,\n      SpellProjectileNumber.SCALING.label,\n    ];\n  };\n}\n\nexport class SpellProjectileType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly BALL: StringPair = { label: \"Ball\", drain: -1 };\n  static readonly MISSILE: StringPair = { label: \"Missile\", drain: 0 };\n  static readonly BOLT: StringPair = { label: \"Bolt\", drain: 0 };\n  static readonly RAY: StringPair = { label: \"Ray\", drain: 1 };\n  static readonly SPRAY: StringPair = { label: \"Spray\", drain: 0 };\n  static readonly LASSO: StringPair = { label: \"Lasso\", drain: 1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellProjectileType.BALL.label.toLowerCase():\n        return SpellProjectileType.BALL;\n      case SpellProjectileType.MISSILE.label.toLowerCase():\n        return SpellProjectileType.MISSILE;\n      case SpellProjectileType.BOLT.label.toLowerCase():\n        return SpellProjectileType.BOLT;\n      case SpellProjectileType.RAY.label.toLowerCase():\n        return SpellProjectileType.RAY;\n      case SpellProjectileType.SPRAY.label.toLowerCase():\n        return SpellProjectileType.SPRAY;\n      case SpellProjectileType.LASSO.label.toLowerCase():\n        return SpellProjectileType.LASSO;\n      default:\n        return SpellProjectileType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellProjectileType.NONE.label,\n      SpellProjectileType.BALL.label,\n      SpellProjectileType.MISSILE.label,\n      SpellProjectileType.BOLT.label,\n      SpellProjectileType.RAY.label,\n      SpellProjectileType.SPRAY.label,\n      SpellProjectileType.LASSO.label,\n    ];\n  };\n}\n\nexport class SpellTargetingType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly DIRECTTARGET: StringPair = {\n    label: \"Direct Target\",\n    drain: 0,\n  };\n  static readonly AURATARGETING: StringPair = {\n    label: \"Aura Targeting\",\n    drain: 2,\n  };\n  static readonly INDIRECTTARGETING: StringPair = {\n    label: \"Indirect Targeting\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellTargetingType.DIRECTTARGET.label.toLowerCase():\n        return SpellTargetingType.DIRECTTARGET;\n      case SpellTargetingType.AURATARGETING.label.toLowerCase():\n        return SpellTargetingType.AURATARGETING;\n      case SpellTargetingType.INDIRECTTARGETING.label.toLowerCase():\n        return SpellTargetingType.INDIRECTTARGETING;\n      default:\n        return SpellTargetingType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellTargetingType.NONE.label,\n      SpellTargetingType.DIRECTTARGET.label,\n      SpellTargetingType.AURATARGETING.label,\n      SpellTargetingType.INDIRECTTARGETING.label,\n    ];\n  };\n}\n\nexport class SpellCastTime {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly FOURMYSTBROUNDS: StringPair = {\n    label: \"4 - Mystb Rounds\",\n    drain: 2,\n  };\n  static readonly NINETHREE: StringPair = { label: \"9 + 3\", drain: -4 };\n  static readonly NINETHREECHANNEL: StringPair = {\n    label: \"9 + 3 (Channel)\",\n    drain: -3,\n  };\n  static readonly SEVENTHREE: StringPair = { label: \"7 + 3\", drain: -1 };\n  static readonly FIVETHREE: StringPair = { label: \"5 + 3\", drain: 1 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 4 };\n  static readonly DRAINCHENNEL: StringPair = {\n    label: \"Drain (Channel)\",\n    drain: -3,\n  };\n  static readonly DRAINTHREE: StringPair = { label: \"Drain + 3\", drain: -2 };\n  static readonly MAGIFAITHHOURS: StringPair = {\n    label: \"24/MagiFaith Hours\",\n    drain: 0,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellCastTime.FOURMYSTBROUNDS.label.toLowerCase():\n        return SpellCastTime.FOURMYSTBROUNDS;\n      case SpellCastTime.NINETHREE.label.toLowerCase():\n        return SpellCastTime.NINETHREE;\n      case SpellCastTime.NINETHREECHANNEL.label.toLowerCase():\n        return SpellCastTime.NINETHREECHANNEL;\n      case SpellCastTime.SEVENTHREE.label.toLowerCase():\n        return SpellCastTime.SEVENTHREE;\n      case SpellCastTime.FIVETHREE.label.toLowerCase():\n        return SpellCastTime.FIVETHREE;\n      case SpellCastTime.FIVE.label.toLowerCase():\n        return SpellCastTime.FIVE;\n      case SpellCastTime.DRAINCHENNEL.label.toLowerCase():\n        return SpellCastTime.DRAINCHENNEL;\n      case SpellCastTime.DRAINTHREE.label.toLowerCase():\n        return SpellCastTime.DRAINTHREE;\n      case SpellCastTime.MAGIFAITHHOURS.label.toLowerCase():\n        return SpellCastTime.MAGIFAITHHOURS;\n      default:\n        return SpellCastTime.NONE;\n    }\n  };\n  static getAllPhysical = (): string[] => {\n    return [\n      SpellCastTime.NONE.label,\n      SpellCastTime.FOURMYSTBROUNDS.label,\n      SpellCastTime.NINETHREE.label,\n      SpellCastTime.NINETHREECHANNEL.label,\n      SpellCastTime.SEVENTHREE.label,\n      SpellCastTime.FIVETHREE.label,\n      SpellCastTime.FIVE.label,\n      SpellCastTime.DRAINCHENNEL.label,\n      SpellCastTime.DRAINTHREE.label,\n      SpellCastTime.MAGIFAITHHOURS.label,\n    ];\n  };\n  static getAllStun = (): string[] => {\n    return [\n      SpellCastTime.NONE.label,\n      SpellCastTime.FOURMYSTBROUNDS.label,\n      SpellCastTime.NINETHREE.label,\n      SpellCastTime.NINETHREECHANNEL.label,\n      SpellCastTime.SEVENTHREE.label,\n      SpellCastTime.FIVETHREE.label,\n      SpellCastTime.FIVE.label,\n      SpellCastTime.MAGIFAITHHOURS.label,\n    ];\n  };\n}\n\nexport class SpellLevel {\n  static readonly NONE: NumberPair = {\n    label: 0,\n    drain: 0,\n  };\n  static readonly ONE: NumberPair = { label: 1, drain: -4 };\n  static readonly TWO: NumberPair = { label: 2, drain: -3 };\n  static readonly THREE: NumberPair = { label: 3, drain: -2 };\n  static readonly FOUR: NumberPair = { label: 4, drain: -1 };\n  static readonly FIVE: NumberPair = { label: 5, drain: 0 };\n  static readonly SIX: NumberPair = { label: 6, drain: 1 };\n  static readonly SEVEN: NumberPair = { label: 7, drain: 2 };\n  static readonly EIGHT: NumberPair = { label: 8, drain: 3 };\n  static readonly NINE: NumberPair = { label: 9, drain: 4 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): NumberPair => {\n    switch (+label) {\n      case SpellLevel.ONE.label:\n        return SpellLevel.ONE;\n      case SpellLevel.TWO.label:\n        return SpellLevel.TWO;\n      case SpellLevel.THREE.label:\n        return SpellLevel.THREE;\n      case SpellLevel.FOUR.label:\n        return SpellLevel.FOUR;\n      case SpellLevel.FIVE.label:\n        return SpellLevel.FIVE;\n      case SpellLevel.SIX.label:\n        return SpellLevel.SIX;\n      case SpellLevel.SEVEN.label:\n        return SpellLevel.SEVEN;\n      case SpellLevel.EIGHT.label:\n        return SpellLevel.EIGHT;\n      case SpellLevel.NINE.label:\n        return SpellLevel.NINE;\n      default:\n        return SpellLevel.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellLevel.NONE.label + \"\",\n      SpellLevel.ONE.label + \"\",\n      SpellLevel.TWO.label + \"\",\n      SpellLevel.THREE.label + \"\",\n      SpellLevel.FOUR.label + \"\",\n      SpellLevel.FIVE.label + \"\",\n      SpellLevel.SIX.label + \"\",\n      SpellLevel.SEVEN.label + \"\",\n      SpellLevel.EIGHT.label + \"\",\n      SpellLevel.NINE.label + \"\",\n    ];\n  };\n}\n\nexport class SpellSource {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly EARTH: StringPair = { label: \"earth\", drain: 0 };\n  static readonly FROST: StringPair = { label: \"frost\", drain: 0 };\n  static readonly AIR: StringPair = { label: \"air\", drain: 0 };\n  static readonly FIRE: StringPair = { label: \"fire\", drain: 0 };\n  static readonly ARCANE: StringPair = { label: \"arcane\", drain: 1 };\n  static readonly DIVINE: StringPair = { label: \"divine\", drain: 0 };\n  static readonly DEMONIC: StringPair = { label: \"demonic\", drain: 0 };\n  static readonly DRUIDIC: StringPair = { label: \"druidic\", drain: 0 };\n  static readonly PSYCHIC: StringPair = { label: \"psychic\", drain: 0 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSource.EARTH.label.toLowerCase():\n        return SpellSource.EARTH;\n      case SpellSource.FROST.label.toLowerCase():\n        return SpellSource.FROST;\n      case SpellSource.AIR.label.toLowerCase():\n        return SpellSource.AIR;\n      case SpellSource.FIRE.label.toLowerCase():\n        return SpellSource.FIRE;\n      case SpellSource.ARCANE.label.toLowerCase():\n        return SpellSource.ARCANE;\n      case SpellSource.DIVINE.label.toLowerCase():\n        return SpellSource.DIVINE;\n      case SpellSource.DEMONIC.label.toLowerCase():\n        return SpellSource.DEMONIC;\n      case SpellSource.DRUIDIC.label.toLowerCase():\n        return SpellSource.DRUIDIC;\n      case SpellSource.PSYCHIC.label.toLowerCase():\n        return SpellSource.PSYCHIC;\n      default:\n        return SpellSource.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSource.NONE.label,\n      SpellSource.EARTH.label,\n      SpellSource.FROST.label,\n      SpellSource.AIR.label,\n      SpellSource.FIRE.label,\n      SpellSource.ARCANE.label,\n      SpellSource.DIVINE.label,\n      SpellSource.DEMONIC.label,\n      SpellSource.DRUIDIC.label,\n      SpellSource.PSYCHIC.label,\n    ];\n  };\n}\n\nexport class SpellRange {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly TOUCH: StringPair = { label: \"touch\", drain: 1 };\n  static readonly SONIC: StringPair = { label: \"sonic\", drain: 1 };\n  static readonly RADIUS: StringPair = {\n    label: \"Radius 90° around Caster\",\n    drain: 1,\n  };\n  static readonly RADIUSPLUS: StringPair = {\n    label: \"Radius 90°+ around Caster\",\n    drain: 2,\n  };\n  static readonly LOSAURA: StringPair = {\n    label: \"Line of Sight Aura or Projectile\",\n    drain: 1,\n  };\n  static readonly LOSMANIPULATE: StringPair = {\n    label: \"Line of Sight Manipulate\",\n    drain: 3,\n  };\n  static readonly LOSPOINT: StringPair = {\n    label: \"Line of Sight Spawn At Point\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellRange.TOUCH.label.toLowerCase():\n        return SpellRange.TOUCH;\n      case SpellRange.SONIC.label.toLowerCase():\n        return SpellRange.SONIC;\n      case SpellRange.RADIUS.label.toLowerCase():\n        return SpellRange.RADIUS;\n      case SpellRange.RADIUSPLUS.label.toLowerCase():\n        return SpellRange.RADIUSPLUS;\n      case SpellRange.LOSAURA.label.toLowerCase():\n        return SpellRange.LOSAURA;\n      case SpellRange.LOSMANIPULATE.label.toLowerCase():\n        return SpellRange.LOSMANIPULATE;\n      case SpellRange.LOSPOINT.label.toLowerCase():\n        return SpellRange.LOSPOINT;\n      default:\n        return SpellRange.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellRange.NONE.label,\n      SpellRange.TOUCH.label,\n      SpellRange.SONIC.label,\n      SpellRange.RADIUS.label,\n      SpellRange.RADIUSPLUS.label,\n      SpellRange.LOSAURA.label,\n      SpellRange.LOSMANIPULATE.label,\n      SpellRange.LOSPOINT.label,\n    ];\n  };\n}\n\nexport class SpellRite {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly VERBAL: StringPair = { label: \"verbal\", drain: 2 };\n  static readonly SOMATIC: StringPair = { label: \"somatic\", drain: 1 };\n  static readonly MENTAL: StringPair = { label: \"mental\", drain: 3 };\n  static readonly RITUAL: StringPair = { label: \"ritual\", drain: 3 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellRite.VERBAL.label.toLowerCase():\n        return SpellRite.VERBAL;\n      case SpellRite.SOMATIC.label.toLowerCase():\n        return SpellRite.SOMATIC;\n      case SpellRite.MENTAL.label.toLowerCase():\n        return SpellRite.MENTAL;\n      case SpellRite.RITUAL.label.toLowerCase():\n        return SpellRite.RITUAL;\n      default:\n        return SpellRite.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellRite.NONE.label,\n      SpellRite.VERBAL.label,\n      SpellRite.SOMATIC.label,\n      SpellRite.MENTAL.label,\n      SpellRite.RITUAL.label,\n    ];\n  };\n}\n\nexport class SpellTarget {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly SINGLE: StringPair = { label: \"Single Target\", drain: 1 };\n  static readonly DAOE: StringPair = {\n    label: \"Diminishing Area Of Effect \",\n    drain: 1,\n  };\n  static readonly MULTI: StringPair = {\n    label: \"Multiple Targets\",\n    drain: 4,\n  };\n  static readonly AOE: StringPair = {\n    label: \"Area Of Effect\",\n    drain: 2,\n  };\n  static readonly CASTER: StringPair = {\n    label: \"Caster\",\n    drain: 3,\n  };\n  static readonly TARGET: StringPair = {\n    label: \"Caster Or Target\",\n    drain: 3,\n  };\n  static readonly LINE: StringPair = {\n    label: \"Straight Line\",\n    drain: 2,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellTarget.SINGLE.label.toLowerCase():\n        return SpellTarget.SINGLE;\n      case SpellTarget.DAOE.label.toLowerCase():\n        return SpellTarget.DAOE;\n      case SpellTarget.MULTI.label.toLowerCase():\n        return SpellTarget.MULTI;\n      case SpellTarget.AOE.label.toLowerCase():\n        return SpellTarget.AOE;\n      case SpellTarget.CASTER.label.toLowerCase():\n        return SpellTarget.CASTER;\n      case SpellTarget.TARGET.label.toLowerCase():\n        return SpellTarget.TARGET;\n      case SpellTarget.LINE.label.toLowerCase():\n        return SpellTarget.LINE;\n      default:\n        return SpellTarget.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellTarget.NONE.label,\n      SpellTarget.SINGLE.label,\n      SpellTarget.MULTI.label,\n      SpellTarget.AOE.label,\n      SpellTarget.DAOE.label,\n      SpellTarget.TARGET.label,\n      SpellTarget.CASTER.label,\n      SpellTarget.LINE.label,\n    ];\n  };\n}\n\nexport class SpellDuration {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly CONCENTRATION: StringPair = {\n    label: \"concentration\",\n    drain: 0,\n  };\n  static readonly INSTANTANEOUS: StringPair = {\n    label: \"instantaneous\",\n    drain: 1,\n  };\n  static readonly PERMANENT: StringPair = { label: \"permanent\", drain: 1 };\n  static readonly FIXEDTICKS: StringPair = {\n    label: \"fixed # of ticks\",\n    drain: 1,\n  };\n  static readonly FIXEDROUNDS: StringPair = {\n    label: \"fixed # of rounds\",\n    drain: 2,\n  };\n  static readonly FIXEDHOURS: StringPair = {\n    label: \"fixed # of hours\",\n    drain: 2,\n  };\n  static readonly CHANNEL: StringPair = { label: \"channel\", drain: -1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDuration.CONCENTRATION.label.toLowerCase():\n        return SpellDuration.CONCENTRATION;\n      case SpellDuration.INSTANTANEOUS.label.toLowerCase():\n        return SpellDuration.INSTANTANEOUS;\n      case SpellDuration.PERMANENT.label.toLowerCase():\n        return SpellDuration.PERMANENT;\n      case SpellDuration.FIXEDTICKS.label.toLowerCase():\n        return SpellDuration.FIXEDTICKS;\n      case SpellDuration.FIXEDROUNDS.label.toLowerCase():\n        return SpellDuration.FIXEDROUNDS;\n      case SpellDuration.FIXEDHOURS.label.toLowerCase():\n        return SpellDuration.FIXEDHOURS;\n      case SpellDuration.CHANNEL.label.toLowerCase():\n        return SpellDuration.CHANNEL;\n      default:\n        return SpellDuration.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDuration.NONE.label,\n      SpellDuration.CONCENTRATION.label,\n      SpellDuration.FIXEDTICKS.label,\n      SpellDuration.FIXEDROUNDS.label,\n      SpellDuration.FIXEDHOURS.label,\n      SpellDuration.CHANNEL.label,\n      SpellDuration.INSTANTANEOUS.label,\n      SpellDuration.PERMANENT.label,\n    ];\n  };\n}\n\nexport class SpellSchool {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly TRANSMUTATION: StringPair = {\n    label: \"Transmutation\",\n    drain: 1,\n  };\n  static readonly EVOCATION: StringPair = { label: \"Evocation\", drain: 0 };\n  static readonly FORTIFICATION: StringPair = {\n    label: \"Fortification\",\n    drain: 1,\n  };\n  static readonly HEX: StringPair = { label: \"Hex\", drain: 1 };\n  static readonly ILLUSION: StringPair = { label: \"Illusion\", drain: 1 };\n  static readonly CONJURATION: StringPair = { label: \"Conjuration\", drain: 1 };\n  static readonly NECROMANCY: StringPair = { label: \"Necromancy\", drain: 1 };\n  static readonly ENCHANTMENT: StringPair = { label: \"Enchantment\", drain: 2 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSchool.FORTIFICATION.label.toLowerCase():\n        return SpellSchool.FORTIFICATION;\n      case SpellSchool.HEX.label.toLowerCase():\n        return SpellSchool.HEX;\n      case SpellSchool.ILLUSION.label.toLowerCase():\n        return SpellSchool.ILLUSION;\n      case SpellSchool.NECROMANCY.label.toLowerCase():\n        return SpellSchool.NECROMANCY;\n      case SpellSchool.TRANSMUTATION.label.toLowerCase():\n        return SpellSchool.TRANSMUTATION;\n      case SpellSchool.CONJURATION.label.toLowerCase():\n        return SpellSchool.CONJURATION;\n      case SpellSchool.EVOCATION.label.toLowerCase():\n        return SpellSchool.EVOCATION;\n      case SpellSchool.ENCHANTMENT.label.toLowerCase():\n        return SpellSchool.ENCHANTMENT;\n      default:\n        return SpellSchool.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSchool.NONE.label,\n      SpellSchool.CONJURATION.label,\n      SpellSchool.EVOCATION.label,\n      SpellSchool.FORTIFICATION.label,\n      SpellSchool.HEX.label,\n      SpellSchool.ILLUSION.label,\n      SpellSchool.NECROMANCY.label,\n      SpellSchool.TRANSMUTATION.label,\n      SpellSchool.ENCHANTMENT.label,\n    ];\n  };\n}\n\nexport class SpellDrainType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly STUN: StringPair = { label: \"Stun\", drain: 0 };\n  static readonly PHYSICAL: StringPair = { label: \"Physical\", drain: -7 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDrainType.STUN.label.toLowerCase():\n        return SpellDrainType.STUN;\n      case SpellDrainType.PHYSICAL.label.toLowerCase():\n        return SpellDrainType.PHYSICAL;\n      default:\n        return SpellDrainType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDrainType.NONE.label,\n      SpellDrainType.STUN.label,\n      SpellDrainType.PHYSICAL.label,\n    ];\n  };\n}\n","export const rollCommand = (\n  commands: string,\n  krit?: boolean\n): { result: number; text: string; rolls: string } => {\n  let result = 0;\n  let text = \"\";\n\n  let newCommands = \"\";\n  commands.split(\" \").forEach((command) => {\n    if (/\\d+/g.test(command)) {\n      newCommands += command;\n    } else {\n      text += \" \" + command;\n    }\n  });\n  newCommands = newCommands.trim();\n\n  let rolls: string = \"(`\";\n  newCommands.split(\" \").forEach((fullCommand: string) => {\n    let commandSplits: string[] = [];\n    fullCommand.split(\"+\").forEach((part) => {\n      let split = part.split(\"-\");\n      commandSplits = commandSplits.concat(split);\n    });\n\n    commandSplits.forEach((command: string) => {\n      let multiplier: number = 1;\n      if (command.includes(\"d\")) {\n        if (!command.startsWith(\"d\")) {\n          multiplier = parseInt(command.split(\"d\")[0]);\n          command = command.split(\"d\")[1];\n        }\n        command = command.replaceAll(\"d\", \"\");\n        if (krit) multiplier = multiplier * 2;\n\n        if (command.includes(\"+\")) {\n          const com = command.split(\"+\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result += parseInt(com[1]);\n        } else if (command.includes(\"-\")) {\n          const com = command.split(\"-\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result -= parseInt(com[1]);\n        } else {\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(command));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n        }\n      } else {\n        result += parseInt(command);\n        rolls += command + \",\";\n      }\n    });\n    rolls = rolls.slice(0, -1) + \"`)\";\n  });\n\n  return { result: result, text: text, rolls: rolls };\n};\n\nexport const rollDie = (size: number): number => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory } from \"react-icons/bi\";\nimport { GiDiceTwentyFacesTwenty, GiSwordsPower } from \"react-icons/gi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name)\n        .then((count: number) => {\n          setEntity(count > 0);\n          setLoading(false);\n        })\n        .catch(() => {\n          setEntity(false);\n          setLoading(false);\n        });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"talent\":\n        return <GiSwordsPower />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import IEntity from \"./IEntity\";\n\nexport enum TalentCategory {\n  physical = \"physical\",\n  mental = \"mental\",\n  social = \"social\",\n  magical = \"magical\",\n}\n\nexport default class Talent implements IEntity {\n  id?: number;\n  name: string;\n  category: string;\n  isFlaw: boolean;\n  cost: number;\n  prerequisite: string;\n  effect: string;\n  type: boolean;\n  stress: string;\n  trigger: string;\n  triggerFrequency: string;\n  ticks: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    category?: string,\n    isFlaw?: boolean,\n    cost?: number,\n    prerequisite?: string,\n    effect?: string,\n    type?: boolean,\n    stress?: string,\n    trigger?: string,\n    triggerFrequency?: string,\n    ticks?: number\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.category = category || TalentCategory.magical;\n    this.isFlaw = isFlaw || false;\n    this.cost = cost || 0;\n    this.prerequisite = prerequisite || \"\";\n    this.effect = effect || \"\";\n    this.type = type || false;\n    this.stress = stress || \"\";\n    this.trigger = trigger || \"\";\n    this.triggerFrequency = triggerFrequency || \"\";\n    this.ticks = ticks || 0;\n  }\n}\n\nexport function isTalent(arg: any): arg is Talent {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"number\";\n  const isFlawCheck =\n    arg.isFlaw !== undefined && typeof arg.isFlaw == \"boolean\";\n  const prerequisiteCheck =\n    arg.prerequisite !== undefined && typeof arg.prerequisite == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"boolean\";\n  const stressCheck = arg.stress !== undefined && typeof arg.stress == \"string\";\n  const triggerCheck =\n    arg.trigger !== undefined && typeof arg.trigger == \"string\";\n  const triggerFrequencyCheck =\n    arg.triggerFrequency !== undefined &&\n    typeof arg.triggerFrequency == \"string\";\n  const ticksCheck = arg.ticks !== undefined && typeof arg.ticks == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    costCheck &&\n    isFlawCheck &&\n    prerequisiteCheck &&\n    effectCheck &&\n    typeCheck &&\n    stressCheck &&\n    triggerCheck &&\n    triggerFrequencyCheck &&\n    ticksCheck\n  );\n}\n","import IEntity from \"./IEntity\";\nimport {\n  StringPair,\n  NumberPair,\n  SpellSource,\n  SpellRite,\n  SpellDuration,\n  SpellRange,\n  SpellSchool,\n  SpellTarget,\n  SpellDrainType,\n  SpellLevel,\n  SpellCastTime,\n  SpellScalingEffect,\n  SpellAoeRadius,\n  SpellDirectEffects,\n  SpellProjectileType,\n  SpellProjectileNumber,\n  SpellDamageType,\n  SpellTargetingType,\n  SpellLosRange,\n  SpellSize,\n  SpellPureDamage,\n  SpellHp,\n} from \"./SpellValues\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  source: StringPair;\n  castTime: StringPair;\n  rite: StringPair;\n  duration: StringPair;\n  durationText: string;\n  range: StringPair;\n  school: StringPair;\n  effect: string;\n  damageText: string;\n  mastery: string;\n  resist: string;\n  drain: number;\n  masteryDrain: number;\n\n  drainType: StringPair;\n  scalingEffect: StringPair;\n  spellTarget: StringPair;\n  aoeRadius: StringPair;\n  damage: StringPair[];\n  directEffects: StringPair;\n  level: NumberPair;\n  projectileType: StringPair;\n  projectileNumber: StringPair;\n  damageType: StringPair;\n  targetingType: StringPair;\n  losRange: StringPair;\n  pureDamage: StringPair;\n  size: StringPair;\n  hp: StringPair;\n  chargeable: boolean;\n  needsMaterial: boolean;\n\n  constructor(\n    id?: number,\n    name?: string,\n    source?: StringPair,\n    castTime?: StringPair,\n    rite?: StringPair,\n    duration?: StringPair,\n    durationText?: string,\n    range?: StringPair,\n    school?: StringPair,\n    effect?: string,\n    damageText?: string,\n    mastery?: string,\n    resist?: string,\n    drain?: number,\n    masteryDrain?: number,\n\n    scalingEffect?: StringPair,\n    spellTarget?: StringPair,\n    aoeRadius?: StringPair,\n    damage?: StringPair[],\n    directEffects?: StringPair,\n    level?: NumberPair,\n    projectileType?: StringPair,\n    projectileNumber?: StringPair,\n    damageType?: StringPair,\n    targetingType?: StringPair,\n    losRange?: StringPair,\n    drainType?: StringPair,\n    pureDamage?: StringPair,\n    size?: StringPair,\n    hp?: StringPair,\n    chargeable?: boolean,\n    needsMaterial?: boolean\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.source = source || SpellSource.NONE;\n    this.castTime = castTime || SpellCastTime.NONE;\n    this.rite = rite || SpellRite.NONE;\n    this.duration = duration || SpellDuration.NONE;\n    this.durationText = durationText || \"\";\n    this.range = range || SpellRange.NONE;\n    this.school = school || SpellSchool.NONE;\n    this.effect = effect || \"\";\n    this.damageText = damageText || \"\";\n    this.mastery = mastery || \"\";\n    this.resist = resist || \"\";\n    this.drain = drain || 0;\n    this.masteryDrain = masteryDrain || 0;\n\n    this.scalingEffect = scalingEffect || SpellScalingEffect.NONE;\n    this.spellTarget = spellTarget || SpellTarget.NONE;\n    this.aoeRadius = aoeRadius || SpellAoeRadius.NONE;\n    this.damage = damage || [];\n    this.directEffects = directEffects || SpellDirectEffects.NONE;\n    this.level = level || SpellLevel.NONE;\n    this.projectileType = projectileType || SpellProjectileType.NONE;\n    this.projectileNumber = projectileNumber || SpellProjectileNumber.NONE;\n    this.damageType = damageType || SpellDamageType.NONE;\n    this.targetingType = targetingType || SpellTargetingType.NONE;\n    this.losRange = losRange || SpellLosRange.NONE;\n    this.drainType = drainType || SpellDrainType.NONE;\n    this.pureDamage = pureDamage || SpellPureDamage.NONE;\n    this.size = size || SpellSize.NONE;\n    this.hp = hp || SpellHp.NONE;\n    this.chargeable = chargeable || false;\n    this.needsMaterial = needsMaterial || false;\n  }\n\n  static calcDrain = (spell: Spell): number => {\n    let drain = 0;\n    drain += spell.drainType ? spell.drainType.drain : 0;\n    drain += spell.school ? spell.school.drain : 0;\n    drain += spell.duration ? spell.duration.drain : 0;\n    drain += spell.spellTarget ? spell.spellTarget.drain : 0;\n    drain += spell.rite ? spell.rite.drain : 0;\n    drain += spell.range ? spell.range.drain : 0;\n    drain += spell.source ? spell.source.drain : 0;\n    drain += spell.level ? spell.level.drain : 0;\n    drain += spell.chargeable ? -1 : 0;\n    drain += spell.needsMaterial ? -1 : 0;\n    drain += spell.targetingType ? spell.targetingType.drain : 0;\n    drain += spell.projectileType ? spell.projectileType.drain : 0;\n    drain += spell.projectileNumber ? spell.projectileNumber.drain : 0;\n    drain += spell.losRange ? spell.losRange.drain : 0;\n    drain += spell.aoeRadius ? spell.aoeRadius.drain : 0;\n    drain += spell.damage[0] ? spell.damage[0].drain : 0;\n    drain += spell.damage[1] ? spell.damage[1].drain : 0;\n    drain += spell.damage[2] ? spell.damage[2].drain : 0;\n    drain += spell.damageType ? spell.damageType.drain : 0;\n    drain += spell.scalingEffect ? spell.scalingEffect.drain : 0;\n    drain += spell.directEffects ? spell.directEffects.drain : 0;\n    drain += spell.size ? spell.size.drain : 0;\n    drain += spell.hp ? spell.hp.drain : 0;\n    drain += spell.pureDamage ? spell.pureDamage.drain : 0;\n    return drain;\n  };\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourceCheck = arg.source !== undefined && typeof arg.source == \"string\";\n  const castTimeCheck =\n    arg.castTime !== undefined && typeof arg.castTime == \"string\";\n  const riteCheck = arg.rite !== undefined && typeof arg.rite == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const masteryCheck =\n    arg.mastery !== undefined && typeof arg.mastery == \"string\";\n  const resistCheck = arg.resist !== undefined && typeof arg.resist == \"string\";\n  const drainCheck = arg.drain !== undefined && typeof arg.drain == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    sourceCheck &&\n    castTimeCheck &&\n    riteCheck &&\n    durationCheck &&\n    rangeCheck &&\n    schoolCheck &&\n    effectCheck &&\n    damageCheck &&\n    masteryCheck &&\n    resistCheck &&\n    drainCheck\n  );\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  hp: number;\n  abilityModifier: string;\n  size: string;\n  stamina: number;\n  talents: string[];\n  flaws: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    hp?: number,\n    abilityModifier?: string,\n    size?: string,\n    stamina?: number,\n    talents?: string[],\n    flaws?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.abilityModifier = abilityModifier || \"\";\n    this.size = size || \"\";\n    this.stamina = stamina || 0;\n    this.talents = talents || [];\n    this.flaws = flaws || [];\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const abilityModifierCheck =\n    arg.abilityModifier !== undefined && typeof arg.abilityModifier == \"number\";\n  const talentsCheck = arg.talents !== undefined && Array.isArray(arg.talents);\n  const flawsCheck = arg.flaws !== undefined && Array.isArray(arg.flaws);\n\n  return arg && nameCheck && hpCheck && abilityModifierCheck && talentsCheck && flawsCheck;\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n"],"sourceRoot":""}