{"version":3,"sources":["components/form_elements/SelectField.tsx","components/SearchbarStyle.tsx","data/Spell.tsx","components/form_elements/TextField.tsx","components/theme/Theme.tsx","components/form_elements/StringField.tsx","components/Loading.tsx","components/form_elements/NumberField.tsx","components/theme/MyThemeProvider.tsx","logo192.png","components/navigation/Header.tsx","components/navigation/NavButton.tsx","components/navigation/NavMenu.tsx","components/navigation/Navigation.tsx","components/AppWrapper.tsx","components/entities/spells/details/SpellBuilder.tsx","App.tsx","serviceWorker.js","index.js"],"names":["SelectField","value","options","label","icon","transform","onChange","useState","opts","setOptions","handleChange","option","undefined","useEffect","newOptions","forEach","push","Field","LabelText","Icon","length","StyledSelect","isMulti","defaultValue","classNamePrefix","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","Select","input","buttons","Tooltip","span","LeftTooltip","RightTooltip","Bar","open","FixedBar","SearchBar","CreateButton","button","hoverColor","ExportButton","SpellSource","SpellRange","SpellRite","SpellTarget","SpellDuration","SpellSchool","Spell","id","name","source","castTime","rite","duration","durationText","range","school","effect","damage","mastery","resist","drain","this","air","mental","instantaneous","touch","conjuration","TextField","height","Input","e","target","textarea","lightTheme","disabled","header","backgroundColorLink","headerColor","boxShadow","nav","size","small","width","medium","large","darkTheme","StringField","placeholder","type","LoadingSpinner","Spinner","faDiceD20","r","cx","cy","stopColor","offset","CompleteLoadingSpinner","CompleteWrapper","LocalLoadingSpinner","Wrapper","LocalSpinner","NumberField","max","step","ctx","createContext","c","useContext","Error","Provider","createCtx","useTheme","CtxProvider","MyThemeProvider","children","setTheme","localTheme","localStorage","getItem","setItem","module","exports","Header","NameWrapper","Logo","src","LogoImg","Name","HomeCredits","packageJson","version","img","NavButton","setOpen","Button","onClick","NavMenu","location","useLocation","Menu","TopSide","to","className","pathname","faHome","MiddleSide","LeftSide","faTable","RightSide","faMeteor","BottomSide","Seperator","faChartPie","faCog","Navigation","Nav","AppWrapper","moveNav","mode","handlers","useSwipeable","onSwipedRight","onSwipedLeft","Content","App","SpellBuilderView","setDrain","spell","onEdit","scalingEffect","setSaclingEffect","spellTarget","setSpellTarget","aoeRadius","setAoeRadius","setDamage","directEffects","setDirectEffects","level","setLevel","projectileType","setProjectileType","projectileNumber","setProjectileNumber","damageType","setDamageType","targetingType","setTargetingType","losRange","setLosRange","drainType","setDrainType","pureDamage","setPureDamage","setSize","hp","setHp","makeDrain","sum","d","console","log","CenterWrapper","View","newD","arcane","demonic","divine","druidic","earth","fire","frost","psychic","category","ritual","somatic","verbal","concentration","fixedTicks","fixedRounds","fixedHours","channel","permanent","sonic","radius","radiusPlus","losAura","losManipulate","losPoint","evocation","fortification","hex","illusion","necromancy","transmutation","enchantment","single","multi","aoe","daoe","caster","line","faBookOpen","ToEntity","lazy","EntityOverview","Help","Home","Options","Statistics","fallback","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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UACL,IAAK,UACL,IAAK,qBACHA,EAAK,GAAK,EACV,MACF,IAAK,UACL,IAAK,UACL,IAAK,wBACHA,EAAK,GAAK,EACV,MACF,IAAK,WACHA,EAAK,GAAK,EACV,MACF,QACEA,EAAK,GAAK,EAGd,OAAOA,KAET9B,EAAavL,MAIlBgL,EAAMlH,QAAUb,KAAWuL,OAC1BxD,EAAMlH,QAAUb,KAAWwB,OAC3BuG,EAAMlH,QAAUb,KAAWwL,QAC3BzD,EAAMlH,QAAUb,KAAWyL,YACzB,kBAAC3O,GAAA,EAAD,CACEC,MAAOqM,GACPpM,QAAS,CACP,yBACA,qBACA,wBACA,wBACA,wBACA,yBAEFC,MAAO,sBACPG,SAAU,SAACL,GACT+K,GAAS,SAACiC,GACR,IAAIK,EAAI,aAAOL,GACf,OAAQhN,GACN,IAAK,yBACL,IAAK,qBACHqN,EAAK,KAAO,EACZ,MACF,IAAK,wBACHA,EAAK,IAAM,EACX,MACF,IAAK,wBACHA,EAAK,IAAM,EACX,MACF,IAAK,wBACHA,EAAK,IAAM,EACX,MACF,IAAK,wBACHA,EAAK,IAAM,EACX,MACF,QACEA,EAAK,IAAM,EAGf,OAAOA,KAETf,GAAYtM,MAIpB,kBAACD,GAAA,EAAD,CACEC,MAAOiE,EAAO,GACdhE,QAAS,CACP,mBACA,mBACA,mBACA,mBACA,mBACA,IACA,IACA,IACA,IACA,IACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,QACA,WACA,uBACA,uBACA,0CAEFC,MAAO,mBACPG,SAAU,SAACL,GACT+K,GAAS,SAACiC,GACR,IAAIK,EAAI,aAAOL,GACf,OAAQhN,GACN,IAAK,uBACHqN,EAAK,IAAM,EACX,MACF,IAAK,uBACHA,EAAK,IAAM,EACX,MACF,IAAK,IACL,IAAK,MACL,IAAK,MACL,IAAK,QACL,IAAK,yCACHA,EAAK,GAAK,EACV,MACF,IAAK,WACL,IAAK,IACL,IAAK,MACL,IAAK,MACHA,EAAK,GAAK,EACV,MACF,IAAK,IACL,IAAK,mBACL,IAAK,OACL,IAAK,OACL,IAAK,MACL,IAAK,MACHA,EAAK,GAAK,EACV,MACF,IAAK,IACL,IAAK,mBACL,IAAK,MACL,IAAK,MACHA,EAAK,GAAK,EACV,MACF,IAAK,IACL,IAAK,MACL,IAAK,OACL,IAAK,OACL,IAAK,MACL,IAAK,OACHA,EAAK,GAAK,EACV,MACF,IAAK,mBACL,IAAK,MACL,IAAK,MACHA,EAAK,GAAK,EACV,MACF,IAAK,MACL,IAAK,OACHA,EAAK,GAAK,EACV,MACF,IAAK,mBACL,IAAK,MACL,IAAK,MACHA,EAAK,GAAK,EACV,MACF,IAAK,OACHA,EAAK,GAAK,EACV,MACF,IAAK,OACHA,EAAK,GAAK,GACV,MACF,IAAK,OACHA,EAAK,GAAK,GACV,MACF,IAAK,MACL,IAAK,mBACHA,EAAK,GAAK,GACV,MACF,QACEA,EAAK,GAAK,EAGd,OAAOA,KAET7B,GAAU,SAACwB,GACT,IAAIK,EAAI,aAAOL,GAEf,OADAK,EAAK,GAAKrN,EACHqN,QAIb,kBAACtN,GAAA,EAAD,CACEC,MAAOiE,EAAO,GACdhE,QAAS,CACP,mBACA,mBACA,mBACA,mBACA,mBACA,IACA,IACA,IACA,IACA,IACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,QACA,WACA,uBACA,uBACA,0CAEFC,MAAO,mBACPG,SAAU,SAACL,GACT+K,GAAS,SAACiC,GACR,IAAIK,EAAI,aAAOL,GACf,OAAQhN,GACN,IAAK,uBACHqN,EAAK,IAAM,EACX,MACF,IAAK,uBACHA,EAAK,IAAM,EACX,MACF,IAAK,IACL,IAAK,MACL,IAAK,MACL,IAAK,QACL,IAAK,yCACHA,EAAK,GAAK,EACV,MACF,IAAK,WACL,IAAK,IACL,IAAK,MACL,IAAK,MACHA,EAAK,GAAK,EACV,MACF,IAAK,IACL,IAAK,mBACL,IAAK,OACL,IAAK,OACL,IAAK,MACL,IAAK,MACHA,EAAK,GAAK,EACV,MACF,IAAK,IACL,IAAK,mBACL,IAAK,MACL,IAAK,MACHA,EAAK,GAAK,EACV,MACF,IAAK,IACL,IAAK,MACL,IAAK,OACL,IAAK,OACL,IAAK,MACL,IAAK,OACHA,EAAK,GAAK,EACV,MACF,IAAK,mBACL,IAAK,MACL,IAAK,MACHA,EAAK,GAAK,EACV,MACF,IAAK,MACL,IAAK,OACHA,EAAK,GAAK,EACV,MACF,IAAK,mBACL,IAAK,MACL,IAAK,MACHA,EAAK,GAAK,EACV,MACF,IAAK,OACHA,EAAK,GAAK,EACV,MACF,IAAK,OACHA,EAAK,GAAK,GACV,MACF,IAAK,OACHA,EAAK,GAAK,GACV,MACF,IAAK,MACL,IAAK,mBACHA,EAAK,GAAK,GACV,MACF,QACEA,EAAK,GAAK,EAGd,OAAOA,KAET7B,GAAU,SAACwB,GACT,IAAIK,EAAI,aAAOL,GAEf,OADAK,EAAK,GAAKrN,EACHqN,QAIb,kBAACtN,GAAA,EAAD,CACEC,MAAOiE,EAAO,GACdhE,QAAS,CACP,mBACA,mBACA,mBACA,mBACA,mBACA,IACA,IACA,IACA,IACA,IACA,MACA,MACA,MACA,OACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,OACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,QACA,WACA,uBACA,uBACA,0CAEFC,MAAO,mBACPG,SAAU,SAACL,GACT+K,GAAS,SAACiC,GACR,IAAIK,EAAI,aAAOL,GACf,OAAQhN,GACN,IAAK,uBACHqN,EAAK,KAAO,EACZ,MACF,IAAK,uBACHA,EAAK,KAAO,EACZ,MACF,IAAK,IACL,IAAK,MACL,IAAK,MACL,IAAK,QACL,IAAK,yCACHA,EAAK,IAAM,EACX,MACF,IAAK,WACL,IAAK,IACL,IAAK,MACL,IAAK,MACHA,EAAK,IAAM,EACX,MACF,IAAK,IACL,IAAK,mBACL,IAAK,OACL,IAAK,OACL,IAAK,MACL,IAAK,MACHA,EAAK,IAAM,EACX,MACF,IAAK,IACL,IAAK,mBACL,IAAK,MACL,IAAK,MACHA,EAAK,IAAM,EACX,MACF,IAAK,IACL,IAAK,MACL,IAAK,OACL,IAAK,OACL,IAAK,MACL,IAAK,OACHA,EAAK,IAAM,EACX,MACF,IAAK,mBACL,IAAK,MACL,IAAK,MACHA,EAAK,IAAM,EACX,MACF,IAAK,MACL,IAAK,OACHA,EAAK,IAAM,EACX,MACF,IAAK,mBACL,IAAK,MACL,IAAK,MACHA,EAAK,IAAM,EACX,MACF,IAAK,OACHA,EAAK,IAAM,EACX,MACF,IAAK,OACHA,EAAK,IAAM,GACX,MACF,IAAK,OACHA,EAAK,IAAM,GACX,MACF,IAAK,MACL,IAAK,mBACHA,EAAK,IAAM,GACX,MACF,QACEA,EAAK,IAAM,EAGf,OAAOA,KAET7B,GAAU,SAACwB,GACT,IAAIK,EAAI,aAAOL,GAEf,OADAK,EAAK,GAAKrN,EACHqN,QAIb,kBAACtN,GAAA,EAAD,CACEC,MAAOyL,EACPxL,QAAS,CACP,oBACA,aACA,cACA,2BACA,MACA,2BACA,qBACA,mBACA,eACA,SACA,YACA,sCACA,WACA,OACA,2BACA,8BACA,aAEFC,MAAO,iBACPG,SAAU,SAACL,GACT+K,GAAS,SAACiC,GACR,IAAIK,EAAI,aAAOL,GACf,OAAQhN,GACN,IAAK,oBACHqN,EAAK,IAAM,EACX,MACF,IAAK,aACL,IAAK,cACL,IAAK,YACHA,EAAK,IAAM,EACX,MACF,IAAK,2BACL,IAAK,mBACHA,EAAK,IAAM,EACX,MACF,IAAK,MACL,IAAK,2BACL,IAAK,qBACL,IAAK,YACHA,EAAK,IAAM,EACX,MACF,IAAK,SACL,IAAK,sCACL,IAAK,OACL,IAAK,2BACHA,EAAK,IAAM,EACX,MACF,IAAK,WACHA,EAAK,IAAM,EACX,MACF,QACEA,EAAK,IAAM,EAGf,OAAOA,KAET3B,EAAiB1L,MAGrB,kBAACD,GAAA,EAAD,CACEC,MAAO2L,EACP1L,QAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAClDC,MAAO,QACPG,SAAU,SAACL,GACT+K,GAAS,SAACiC,GACR,I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","file":"static/js/main.b82c688c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\nimport Select from \"react-select\";\nimport { useEffect } from \"react\";\n\ninterface $Props {\n  value: string;\n  options: string[];\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst SelectField = ({ value, options, label, icon, transform, onChange }: $Props) => {\n  const [opts, setOptions] = useState<{ value: string; label: string }[]>([]);\n  const handleChange = (option: string) => {\n    if (option !== null && option !== undefined) {\n      onChange(option);\n    }\n  };\n\n  useEffect(() => {\n    let newOptions: { value: string; label: string }[] = [];\n    options.forEach((option: string) => newOptions.push({ value: option, label: option }));\n    setOptions(newOptions);\n  }, [options]);\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {opts.length > 0 && (\n        <StyledSelect\n          isMulti={false}\n          defaultValue={{ value: value, label: value }}\n          classNamePrefix=\"react-select\"\n          options={opts}\n          onChange={(options: { value: string; label: string }) => handleChange(options.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default SelectField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst StyledSelect = styled(Select)`\n  flex: 3 2 auto;\n  box-sizing: border-box;\n  border: none;\n  min-width: 120px;\n\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n\n  .react-select__single-value {\n    color: ${({ theme }) => theme.input.color};\n  }\n  .react-select__control {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n    border: none;\n    border-radius: 5px;\n  }\n  .react-select__menu {\n    background-color: ${({ theme }) => theme.input.backgroundColor};\n\n    .react-select__option:hover {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n    .react-select__option--is-focused {\n      background-color: ${({ theme }) => theme.buttons.backgroundColor};\n      color: ${({ theme }) => theme.buttons.color};\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nconst Tooltip = styled.span`\n  visibility: hidden;\n  width: 120px;\n  font-size: 16px;\n  background-color: ${({ theme }) => theme.main.highlight};\n  color: #fff;\n  text-align: center;\n  border-radius: 10px;\n  padding: 5px 0;\n  margin-top: -5px;\n  position: absolute;\n  z-index: 1;\n  opacity: 0.6;\n  transition: 0.3s;\n`;\n\nexport const LeftTooltip = styled(Tooltip)`\n  right: 150%;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent transparent transparent ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nexport const RightTooltip = styled(Tooltip)`\n  left: 150%;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    right: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent ${({ theme }) => theme.main.highlight} transparent transparent;\n  }\n`;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nexport const Bar = styled.div<SearchMode>`\n  position: absolute;\n  z-index: 50;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 125px);\n  padding: 10px 10px 10px 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nexport const FixedBar = styled(Bar)<SearchMode>`\n  position: fixed;\n  top: 40px;\n  left: 100px;\n  z-index: 900;\n\n  @media (max-width: 576px) {\n    min-width: calc(100% - 20px);\n    left: 0px;\n  }\n`;\n\nexport const SearchBar = styled.div<SearchMode>`\n  position: absolute;\n  bottom: -35px;\n  left: calc(50% - 17px);\n\n  height: 40px;\n  width: 40px;\n  transform: rotate(45deg);\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  text-align: center;\n  line-height: 40px;\n\n  @media (max-width: 576px) {\n    left: calc(50% - 20px);\n  }\n\n  svg {\n    transform: rotate(-45deg);\n  }\n`;\n\nexport const CreateButton = styled.button`\n    position: fixed;\n    bottom: 10px;\n    right: 10px;\n    top: auto;\n  \n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n    box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n    border: none;\n    padding 10px;\n    box-sizing:content-box;\n    line-height: 20px;\n    cursor: pointer;\n  \n    width: 30px;\n    height: 30px;\n    border-radius: 40px;\n    text-decoration: none;\n  \n    &:hover {\n      color: ${({ theme }) => theme.buttons.hoverColor};\n      ${LeftTooltip} {\n        opacity: 1;\n        visibility: visible;\n      }\n    }\n  `;\n\nexport const ExportButton = styled(CreateButton)`\n  bottom: 70px;\n`;\n\nexport const FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n","import IEntity from \"./IEntity\";\n\nexport enum SpellSource {\n  earth = \"earth\",\n  frost = \"frost\",\n  air = \"air\",\n  fire = \"fire\",\n  arcane = \"arcane\",\n  divine = \"divine\",\n  demonic = \"demonic\",\n  druidic = \"druidic\",\n  psychic = \"psychic\",\n}\n\nexport enum SpellRange {\n  touch = \"touch\",\n  sonic = \"sonic\",\n  radius = \"Radius 90° around Caster\",\n  radiusPlus = \"Radius 90°+ around Caster\",\n  losAura = \"Line of Sight Aura or Projectile\",\n  losManipulate = \"Line of Sight Manipulate\",\n  losPoint = \"Line of Sight Spawn At Point\",\n}\n\nexport enum SpellRite {\n  verbal = \"verbal\",\n  somatic = \"somatic\",\n  mental = \"mental\",\n  ritual = \"ritual\",\n}\n\nexport enum SpellTarget {\n  single = \"Single Target\",\n  daoe = \"Diminishing Area Of Effect \",\n  multi = \"Multiple Targets\",\n  aoe = \"Area Of Effect\",\n  caster = \"Caster\",\n  target = \"Caster Or Target\",\n  line = \"Straight Line\",\n}\n\nexport enum SpellDuration {\n  concentration = \"concentration\",\n  instantaneous = \"instantaneous\",\n  permanent = \"permanent\",\n  fixedTicks = \"fixed # of ticks\",\n  fixedRounds = \"fixed # of rounds\",\n  fixedHours = \"fixed # of hours\",\n  channel = \"channel\",\n}\n\nexport enum SpellSchool {\n  transmutation = \"Transmutation\",\n  evocation = \"Evocation\",\n  fortification = \"Fortification\",\n  hex = \"Hex\",\n  illusion = \"Illusion\",\n  conjuration = \"Conjuration\",\n  necromancy = \"Necromancy\",\n  enchantment = \"Enchantment\",\n}\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  source: string;\n  castTime: string;\n  rite: string;\n  duration: string;\n  durationText: string;\n  range: string;\n  school: string;\n  effect: string;\n  damage: string;\n  mastery: string;\n  resist: string;\n  drain: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    source?: string,\n    castTime?: string,\n    rite?: string,\n    duration?: string,\n    durationText?: string,\n    range?: string,\n    school?: string,\n    effect?: string,\n    damage?: string,\n    mastery?: string,\n    resist?: string,\n    drain?: number\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.source = source || SpellSource.air;\n    this.castTime = castTime || \"4 - Mystb Rounds\";\n    this.rite = rite || SpellRite.mental;\n    this.duration = duration || SpellDuration.instantaneous;\n    this.durationText = durationText || \"\";\n    this.range = range || SpellRange.touch;\n    this.school = school || SpellSchool.conjuration;\n    this.effect = effect || \"\";\n    this.damage = damage || \"\";\n    this.mastery = mastery || \"\";\n    this.resist = resist || \"\";\n    this.drain = drain || 0;\n  }\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourceCheck = arg.source !== undefined && typeof arg.source == \"string\";\n  const castTimeCheck = arg.castTime !== undefined && typeof arg.castTime == \"string\";\n  const riteCheck = arg.rite !== undefined && typeof arg.rite == \"string\";\n  const durationCheck = arg.duration !== undefined && typeof arg.duration == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const masteryCheck = arg.mastery !== undefined && typeof arg.mastery == \"string\";\n  const resistCheck = arg.resist !== undefined && typeof arg.resist == \"string\";\n  const drainCheck = arg.drain !== undefined && typeof arg.drain == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    sourceCheck &&\n    castTimeCheck &&\n    riteCheck &&\n    durationCheck &&\n    rangeCheck &&\n    schoolCheck &&\n    effectCheck &&\n    damageCheck &&\n    masteryCheck &&\n    resistCheck &&\n    drainCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  height?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, height, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input height={height} value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\ntype TextProps = {\n  height?: string;\n};\n\nconst Input = styled.textarea<TextProps>`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  height: ${({ height }) => (height !== undefined ? height : \"auto\")};\n  min-height: ${({ height }) => (height !== undefined ? height : \"22vh\")};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","interface Theme {\n  buttons: {\n    color: string;\n    backgroundColor: string;\n    disabled: string;\n    hoverColor: string;\n    height: string;\n  };\n  input: {\n    color: string;\n    backgroundColor: string;\n  };\n  main: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  header: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  tile: {\n    backgroundColor: string;\n    backgroundColorLink: string;\n    color: string;\n    headerColor: string;\n    boxShadow: string;\n  };\n  nav: {\n    size: {\n      small: {\n        width: string;\n        height: string;\n      };\n      medium: {\n        width: string;\n        height: string;\n      };\n      large: {\n        width: string;\n        height: string;\n      };\n    };\n  };\n}\n\nexport const lightTheme: Theme = {\n  buttons: {\n    color: \"white\",\n    backgroundColor: \"#7033FF\",\n    disabled: \"#E1D0E5\",\n    hoverColor: \"darkgrey\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"inherit\",\n    backgroundColor: \"white\",\n  },\n  main: {\n    backgroundColor: \"#F3F5F8\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  header: {\n    color: \"white\",\n    backgroundColor: \"#7033FF\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"white\",\n    backgroundColorLink: \"lightslategray\",\n    color: \"darkgrey\",\n    headerColor: \"black\",\n    boxShadow: \"\",\n  },\n  nav: {\n    size: {\n      small: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      medium: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      large: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n    },\n  },\n};\n\nexport const darkTheme: Theme = {\n  buttons: {\n    color: \"#fff\",\n    backgroundColor: \"#202020\",\n    disabled: \"#E1D0E5\",\n    hoverColor: \"#191D38\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"#435E70\",\n    backgroundColor: \"#202020\",\n  },\n  main: {\n    backgroundColor: \"#222222\",\n    color: \"\",\n    highlight: \"#435E70\",\n  },\n  header: {\n    color: \"white\",\n    backgroundColor: \"#222222\",\n    highlight: \"#435E70\",\n  },\n  tile: {\n    backgroundColor: \"#3E3E3E\",\n    backgroundColorLink: \"#435E70\",\n    headerColor: \"#2e2e2e\",\n    color: \"white\",\n    boxShadow: \"\",\n  },\n  nav: {\n    size: {\n      ...lightTheme.nav.size,\n    },\n  },\n};\n\nexport default Theme;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const LoadingSpinner = () => (\n  <Spinner>\n    <Icon icon={faDiceD20} />\n    <svg width=\"0\" height=\"0\">\n      <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n        <stop stopColor=\"#350069\" offset=\"0\" />\n        <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n      </radialGradient>\n    </svg>\n  </Spinner>\n);\n\nexport const CompleteLoadingSpinner = () => (\n  <CompleteWrapper>\n    <Spinner>\n      <Icon icon={faDiceD20} />\n      <svg width=\"0\" height=\"0\">\n        <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n          <stop stopColor=\"#350069\" offset=\"0\" />\n          <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n        </radialGradient>\n      </svg>\n    </Spinner>\n  </CompleteWrapper>\n);\n\nexport const LocalLoadingSpinner = () => (\n  <Wrapper>\n    <LocalSpinner>\n      <Icon icon={faDiceD20} />\n      <svg width=\"0\" height=\"0\">\n        <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n          <stop stopColor=\"#350069\" offset=\"0\" />\n          <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n        </radialGradient>\n      </svg>\n    </LocalSpinner>\n  </Wrapper>\n);\n\nconst Wrapper = styled.div`\n  height: 100px;\n  width: 100px;\n  margin: 1em auto;\n`;\n\nconst CompleteWrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst LocalSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  font-size: 40px;\n\n  svg * {\n    fill: url(#rg);\n  }\n`;\n\nconst Spinner = styled(LocalSpinner)`\n  position: fixed;\n  z-index: 940;\n  top: calc(50% - 20px);\n  right: calc(50% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  width: 100%;\n  height: 100%;\n  border-radius: 150px;\n  border: 5px solid ${({ theme }) => theme.main.backgroundColor};\n  animation: bounce 2s linear infinite;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n\n  @-webkit-keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      -webkit-transform: translateY(0);\n    }\n    50% {\n      -webkit-transform: translateY(-5px);\n    }\n  }\n\n  @keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-5px);\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, createContext, useContext, useState } from \"react\";\nimport Theme, { darkTheme, lightTheme } from \"./Theme\";\nimport { ThemeProvider } from \"styled-components\";\n\nexport function createCtx<ContextType>() {\n  const ctx = createContext<ContextType | undefined>(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (!c) throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n\ntype ThemeContextType = {\n  theme: Theme;\n  setTheme: (value: Theme) => void;\n};\n\nexport const [useTheme, CtxProvider] = createCtx<ThemeContextType>();\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const MyThemeProvider = ({ children }: Props) => {\n  const [theme, setTheme] = useState(darkTheme);\n\n  useEffect(() => {\n    let localTheme = localStorage.getItem(\"theme\");\n    if (localTheme !== undefined) {\n      if (localTheme === \"light\") {\n        setTheme(lightTheme);\n        localStorage.setItem(\"theme\", \"light\");\n      } else {\n        setTheme(darkTheme);\n        localStorage.setItem(\"theme\", \"dark\");\n      }\n    } else {\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  }, []);\n\n  return (\n    <CtxProvider value={{ theme, setTheme }}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CtxProvider>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/logo192.a0b12edf.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport packageJson from \"../../../package.json\";\nimport LogoImg from \"../../logo192.png\";\n\nconst Header = () => {\n  return (\n    <Bar>\n      <NameWrapper>\n        <Logo src={LogoImg} />\n        <Name>SkirmishTome</Name>\n      </NameWrapper>\n      <HomeCredits>v{packageJson.version}</HomeCredits>\n    </Bar>\n  );\n};\n\nexport default Header;\n\nconst Bar = styled.div`\n  width: calc(100% - 20px);\n  height: 30px;\n  line-height: 30px;\n  padding: 10px 10px 10px 10px;\n  background-color: ${({ theme }) => theme.header.backgroundColor};\n  color: ${({ theme }) => theme.header.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n  display: flex;\n  position: fixed;\n  justify-content: space-between;\n  z-index: 1000;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n\n  @media (max-width: 576px) {\n    width: calc(100% - 60px);\n    padding: 10px 10px 10px 50px;\n  }\n`;\n\nconst NameWrapper = styled.div`\n  width: 150px;\n  svg {\n    float: left;\n    font-size: 30px;\n    margin-right: 5px;\n  }\n`;\n\nconst Name = styled.div`\n  width: 95px;\n  height: 30px;\n  font-size: 20px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  float: left;\n`;\n\nconst HomeCredits = styled.div`\n  width: 60px;\n  height: 30px;\n  font-size: 10px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  text-align: center;\n`;\n\nconst Logo = styled.img`\n  height: 30px;\n  float: left;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst NavButton = ({ open, setOpen }: $Props) => {\n  return (\n    <Button open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </Button>\n  );\n};\n\nexport default NavButton;\n\ntype ButtonType = {\n  open?: boolean;\n};\n\nconst Button = styled.button<ButtonType>`\n  position: fixed;\n  top: 15px;\n  left: 20px;\n  display: none;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 20px;\n  height: 20px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1001;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 20px;\n    height: 2px;\n    background: ${({ theme }) => theme.buttons.color};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\n    }\n  }\n\n  @media (max-width: 576px) {\n    display: flex;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog, faChartPie, faHome, faTable, faMeteor } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { RightTooltip } from \"../SearchbarStyle\";\nimport { GiSwordsPower, GiWomanElfFace } from \"react-icons/gi\";\n\ninterface $Props {\n  open: boolean;\n}\n\nconst NavMenu = ({ open }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Menu open={open}>\n      <TopSide>\n        <Link\n          to=\"/home\"\n          className={\n            location.pathname === \"/home\" || location.pathname === \"/\" ? \"menuItemActiv\" : \"\"\n          }\n        >\n          <FontAwesomeIcon icon={faHome} />\n          <RightTooltip>Home</RightTooltip>\n        </Link>\n      </TopSide>\n      <MiddleSide>\n        <LeftSide>\n          <Link\n            to=\"/randomTable-overview\"\n            className={location.pathname === \"/randomTable-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faTable} />\n            <RightTooltip>Random Tables</RightTooltip>\n          </Link>\n        </LeftSide>\n        <RightSide>\n          <Link\n            to=\"/spell-overview\"\n            className={location.pathname === \"/spell-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faMeteor} />\n            <RightTooltip>Spells</RightTooltip>\n          </Link>\n          <Link\n            to=\"/talent-overview\"\n            className={location.pathname === \"/talent-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiSwordsPower />\n            <RightTooltip>Talents</RightTooltip>\n          </Link>\n          <Link\n            to=\"/race-overview\"\n            className={location.pathname === \"/race-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiWomanElfFace />\n            <RightTooltip>Races</RightTooltip>\n          </Link>\n        </RightSide>\n      </MiddleSide>\n      <BottomSide>\n        <Seperator />\n        <Link\n          to=\"/statistics\"\n          className={location.pathname === \"/statistics\" ? \"menuItemActiv\" : \"\"}\n        >\n          <FontAwesomeIcon icon={faChartPie} />\n          <RightTooltip>Statistics</RightTooltip>\n        </Link>\n        <Link to=\"/options\" className={location.pathname === \"/options\" ? \"menuItemActiv\" : \"\"}>\n          <FontAwesomeIcon icon={faCog} />\n          <RightTooltip>Options</RightTooltip>\n        </Link>\n      </BottomSide>\n    </Menu>\n  );\n};\n\nexport default NavMenu;\n\ntype MenuType = {\n  open?: boolean;\n};\n\nexport const Menu = styled.div<MenuType>`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  background: ${({ theme }) => theme.main.backgroundColor};\n  height: calc(100vh - 1.5em - 55px);\n  text-align: center;\n  padding: 1rem;\n\n  overflow: visible;\n\n  position: fixed;\n  z-index: 950;\n  top: 50px;\n  left: 0;\n\n  @media (max-width: 576px) {\n    transition: transform 0.3s ease-in-out;\n    transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(-100%)\")};\n  }\n`;\n\nconst Seperator = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.tile.backgroundColor};\n  flex: 1 1 auto;\n  min-width: 100%;\n  max-height: 0px;\n  margin-top: -1px;\n  margin-bottom: -1px;\n`;\n\nconst TopSide = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: calc(100% - 10px);\n\n  svg {\n    margin-right: 5px;\n  }\n\n  a {\n    flex: 1 1 auto;\n    max-height: 20px;\n    font-size: 20px;\n    text-align: center;\n    padding: 0.75rem 0;\n    color: ${({ theme }) => theme.tile.color};\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    position: relative;\n    display: inline-block;\n\n    svg {\n      padding: 0px;\n      margin: 0px;\n    }\n  }\n\n  a:hover {\n    color: ${({ theme }) => theme.tile.color};\n    ${RightTooltip} {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n\n  a.menuItemActiv {\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\nconst MiddleSide = styled.div``;\nconst BottomSide = styled(TopSide)``;\nconst LeftSide = styled(TopSide)`\n  width: 32px;\n  float: left;\n`;\nconst RightSide = styled(LeftSide)`\n  margin-left: 5px;\n  padding-left: 5px;\n  border-left: 2px solid ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport NavButton from \"./NavButton\";\nimport NavMenu from \"./NavMenu\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst Navigation = ({ open, setOpen }: $Props) => {\n  return (\n    <Nav>\n      <NavButton open={open} setOpen={setOpen} />\n      <NavMenu open={open} />\n    </Nav>\n  );\n};\n\nexport default Navigation;\n\nconst Nav = styled.div`\n  max-width: 100px;\n  height: auto;\n  background-color: ${({ theme }) => theme.main.backgroundColor}\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import React, { ReactNode, useState } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport styled from \"styled-components\";\nimport Header from \"./navigation/Header\";\nimport Navigation from \"./navigation/Navigation\";\n\ninterface $Props {\n  children: ReactNode;\n}\n\nconst AppWrapper = ({ children }: $Props) => {\n  const [open, setOpen] = useState(false);\n\n  const moveNav = (mode: string) => {\n    if (mode === \"open\") {\n      setOpen(true);\n    } else {\n      setOpen(false);\n    }\n  };\n\n  const handlers = useSwipeable({\n    onSwipedRight: () => moveNav(\"open\"),\n    onSwipedLeft: () => moveNav(\"close\"),\n  });\n\n  return (\n    <App {...handlers}>\n      <Header />\n      <Navigation open={open} setOpen={setOpen} />\n      <Content>{children}</Content>\n    </App>\n  );\n};\n\nexport default AppWrapper;\n\nconst App = styled.div`\n  padding-top: 4rem;\n  width: 100%;\n  height: 100%;\n  min-height: calc(100vh - 4rem);\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  display: flex;\n  flex-wrap: no-wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n  overflow-x: hidden;\n`;\n\nconst Content = styled.div`\n  margin-left: 105px;\n  width: 100%;\n\n  @media (max-width: 576px) {\n    margin-left: 0px;\n  }\n`;\n","import { faBookOpen } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport Spell, {\n  SpellDuration,\n  SpellRange,\n  SpellRite,\n  SpellSchool,\n  SpellSource,\n  SpellTarget,\n} from \"../../../../data/Spell\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport SelectField from \"../../../form_elements/SelectField\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\nconst SpellBuilderView = () => {\n  //Source, Rite, Casting Time, Duration, Range, School, Scaling Effect, Single Target, aoeRadius, damage, damage, damage, direct Effects, level, projectile type, projectile number, damage type, targeting type, los Range, drain type, Pure Spell Damage, size, hp\n  const [drain, setDrain] = useState<number[]>([\n    0, 3, 2, 1, 1, 1, 0, 1, 0, 0, 0, 0, -4, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  ]);\n  const [spell, onEdit] = useState<Spell>(new Spell());\n  const [scalingEffect, setSaclingEffect] = useState<string>(\"\");\n  const [spellTarget, setSpellTarget] = useState<string>(\"Single Target\");\n  const [aoeRadius, setAoeRadius] = useState<string>(\"\");\n  const [damage, setDamage] = useState<string[]>([\"\", \"\", \"\"]);\n  const [directEffects, setDirectEffects] = useState<string>(\"\");\n  const [level, setLevel] = useState<string>(\"1\");\n  const [projectileType, setProjectileType] = useState<string>(\"\");\n  const [projectileNumber, setProjectileNumber] = useState<string>(\"\");\n  const [damageType, setDamageType] = useState<string>(\"\");\n  const [targetingType, setTargetingType] = useState<string>(\"\");\n  const [losRange, setLosRange] = useState<string>(\"\");\n  const [drainType, setDrainType] = useState<string>(\"Stun\");\n  const [pureDamage, setPureDamage] = useState<string>(\"Acid\");\n  const [size, setSize] = useState<string>(\"\");\n  const [hp, setHp] = useState<string>(\"\");\n\n  const makeDrain = (): number => {\n    let sum = 0;\n    drain.forEach((d) => {\n      sum += d;\n    });\n    return sum;\n  };\n\n  useEffect(() => {\n    console.log(drain, makeDrain());\n  }, [drain]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={spell.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...spell, name: name })}\n        />\n        <NumberField value={makeDrain()} label=\"Drain\" onChange={(drain) => undefined} />\n        <SelectField\n          value={drainType}\n          options={[\"Stun\", \"Physical\", \"Fatigue / Agony\"]}\n          label={\"Drain Type\"}\n          onChange={(value: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              switch (value) {\n                case \"Stun\":\n                  newD[18] = 0;\n                  break;\n                case \"Physical\":\n                  newD[18] = -7;\n                  break;\n                case \"Fatigue / Agony\":\n                  newD[18] = 4;\n                  break;\n                default:\n                  newD[18] = 0;\n                  break;\n              }\n              return newD;\n            });\n            setDrainType(value);\n          }}\n        />\n        <SelectField\n          value={spell.source}\n          options={[\n            SpellSource.air,\n            SpellSource.arcane,\n            SpellSource.demonic,\n            SpellSource.divine,\n            SpellSource.druidic,\n            SpellSource.earth,\n            SpellSource.fire,\n            SpellSource.frost,\n            SpellSource.psychic,\n          ]}\n          label={\"Source\"}\n          onChange={(category: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              newD[0] = category === SpellSource.arcane ? 1 : 0;\n              return newD;\n            });\n            onEdit({ ...spell, source: category });\n          }}\n        />\n        <SelectField\n          value={spell.castTime}\n          options={[\n            \"4 - Mystb Rounds\",\n            \"9 + 3\",\n            \"9 + 3 (Channel)\",\n            \"7 + 3\",\n            \"5 + 3\",\n            \"5\",\n            \"Drain (Channel)\",\n            \"Drain + 3\",\n          ]}\n          label={\"Casting Time\"}\n          onChange={(value: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              switch (value) {\n                case \"4 - Mystb Rounds\":\n                  newD[2] = 2;\n                  break;\n                case \"9 + 3\":\n                  newD[2] = -4;\n                  break;\n                case \"9 + 3 (Channel)\":\n                case \"Drain (Channel)\":\n                  newD[2] = -3;\n                  break;\n                case \"7 + 3\":\n                  newD[2] = -1;\n                  break;\n                case \"5 + 3\":\n                  newD[2] = 1;\n                  break;\n                case \"5\":\n                  newD[2] = 4;\n                  break;\n                case \"Drain\":\n                  newD[2] = -2;\n                  break;\n                default:\n                  newD[2] = 0;\n                  break;\n              }\n              return newD;\n            });\n            onEdit({ ...spell, castTime: value });\n          }}\n        />\n        <SelectField\n          value={spell.rite}\n          options={[SpellRite.mental, SpellRite.ritual, SpellRite.somatic, SpellRite.verbal]}\n          label={\"Rite\"}\n          onChange={(category: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              switch (category) {\n                case SpellRite.mental:\n                case SpellRite.ritual:\n                  newD[1] = 3;\n                  break;\n                case SpellRite.somatic:\n                  newD[1] = 1;\n                  break;\n                case SpellRite.verbal:\n                  newD[1] = 2;\n                  break;\n                default:\n                  newD[1] = 0;\n                  break;\n              }\n              return newD;\n            });\n            onEdit({ ...spell, rite: category });\n          }}\n        />\n        <SelectField\n          value={spell.duration}\n          options={[\n            SpellDuration.concentration,\n            SpellDuration.fixedTicks,\n            SpellDuration.fixedRounds,\n            SpellDuration.fixedHours,\n            SpellDuration.channel,\n            SpellDuration.instantaneous,\n            SpellDuration.permanent,\n          ]}\n          label={\"Duration\"}\n          onChange={(value: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              switch (value) {\n                case SpellDuration.concentration:\n                  newD[3] = 0;\n                  break;\n                case SpellDuration.channel:\n                  newD[3] = -1;\n                  break;\n                case SpellDuration.fixedTicks:\n                case SpellDuration.instantaneous:\n                case SpellDuration.permanent:\n                  newD[3] = 1;\n                  break;\n                case SpellDuration.fixedHours:\n                case SpellDuration.fixedRounds:\n                  newD[3] = 2;\n                  break;\n                default:\n                  newD[3] = 0;\n                  break;\n              }\n              return newD;\n            });\n            onEdit({ ...spell, duration: value });\n          }}\n        />\n        {(spell.duration === SpellDuration.fixedTicks ||\n          spell.duration === SpellDuration.fixedRounds ||\n          spell.duration === SpellDuration.fixedHours) && (\n          <StringField\n            value={spell.durationText}\n            label=\"Duration\"\n            onChange={(value) => onEdit({ ...spell, durationText: value })}\n          />\n        )}\n        <SelectField\n          value={spell.range}\n          options={[\n            SpellRange.touch,\n            SpellRange.sonic,\n            SpellRange.radius,\n            SpellRange.radiusPlus,\n            SpellRange.losAura,\n            SpellRange.losManipulate,\n            SpellRange.losPoint,\n          ]}\n          label={\"Range\"}\n          onChange={(value: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              switch (value) {\n                case SpellRange.touch:\n                case SpellRange.sonic:\n                case SpellRange.radius:\n                case SpellRange.losAura:\n                  newD[4] = 1;\n                  break;\n                case SpellRange.radiusPlus:\n                  newD[4] = 2;\n                  break;\n                case SpellRange.losManipulate:\n                  newD[4] = 3;\n                  break;\n                case SpellRange.losPoint:\n                  newD[4] = 4;\n                  break;\n                default:\n                  newD[4] = 0;\n                  break;\n              }\n              return newD;\n            });\n            onEdit({ ...spell, range: value });\n          }}\n        />\n        <SelectField\n          value={spell.school}\n          options={[\n            SpellSchool.conjuration,\n            SpellSchool.evocation,\n            SpellSchool.fortification,\n            SpellSchool.hex,\n            SpellSchool.illusion,\n            SpellSchool.necromancy,\n            SpellSchool.transmutation,\n            SpellSchool.enchantment,\n          ]}\n          label={\"School\"}\n          onChange={(value: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              switch (value) {\n                case SpellSchool.fortification:\n                case SpellSchool.hex:\n                case SpellSchool.illusion:\n                case SpellSchool.necromancy:\n                case SpellSchool.transmutation:\n                case SpellSchool.conjuration:\n                  newD[4] = 1;\n                  break;\n                case SpellSchool.evocation:\n                  newD[4] = 0;\n                  break;\n                case SpellSchool.enchantment:\n                  newD[4] = 2;\n                  break;\n                default:\n                  newD[4] = 0;\n                  break;\n              }\n              return newD;\n            });\n            onEdit({ ...spell, school: value });\n          }}\n        />\n        <SelectField\n          value={scalingEffect}\n          options={[\n            \"plus MystB Meters Radius\",\n            \"plus MystB Projectiles\",\n            \"1 Projectile/Effect per Variable Factor\",\n            \"1 Projectile/Effect per 3 Magic/Faith Rating\",\n            \"1 Projectile/Effect per 2 Magic/Faith Rating\",\n            \"1 Projectile/Effect and 1 Meter Radius per 2 Magic/Faith Rating\",\n            \"1 Projectile/Effect and 1 Meter Radius per 3 Magic/Faith Rating\",\n            \"plus  1 Projectile/Effect per 2 Magic/Faith Rating\",\n            \"plus  1 Projectile/Effect per 3 Magic/Faith Rating\",\n            \"plus  1 Projectile/Effect per 4 Magic/Faith Rating\",\n            \"plus MystB Meters Radius & Effect\",\n          ]}\n          label={\"Scaling Effects\"}\n          onChange={(value: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              switch (value) {\n                case \"plus MystB Meters Radius\":\n                case \"plus MystB Projectiles\":\n                case \"1 Projectile/Effect per 3 Magic/Faith Rating\":\n                case \"plus  1 Projectile/Effect per 4 Magic/Faith Rating\":\n                  newD[5] = 2;\n                  break;\n                case \"1 Projectile/Effect per Variable Factor\":\n                case \"plus MystB Meters Radius & Effect\":\n                case \"plus  1 Projectile/Effect per 3 Magic/Faith Rating\":\n                  newD[5] = 3;\n                  break;\n                case \"1 Projectile/Effect per 2 Magic/Faith Rating\":\n                case \"plus  1 Projectile/Effect per 2 Magic/Faith Rating\":\n                case \"1 Projectile/Effect and 1 Meter Radius per 3 Magic/Faith Rating\":\n                  newD[5] = 4;\n                  break;\n                case \"1 Projectile/Effect and 1 Meter Radius per 2 Magic/Faith Rating\":\n                  newD[5] = 5;\n                  break;\n                default:\n                  newD[5] = 0;\n                  break;\n              }\n              return newD;\n            });\n            setSaclingEffect(value);\n          }}\n        />\n        <SelectField\n          value={spellTarget}\n          options={[\n            SpellTarget.single,\n            SpellTarget.multi,\n            SpellTarget.aoe,\n            SpellTarget.daoe,\n            SpellTarget.target,\n            SpellTarget.caster,\n            SpellTarget.line,\n          ]}\n          label={\"Spell Target\"}\n          onChange={(value: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              switch (value) {\n                case SpellTarget.single:\n                case SpellTarget.daoe:\n                  newD[6] = 1;\n                  break;\n                case SpellTarget.aoe:\n                case SpellTarget.line:\n                  newD[6] = 2;\n                  break;\n                case SpellTarget.caster:\n                case SpellTarget.target:\n                  newD[6] = 3;\n                  break;\n                case SpellTarget.multi:\n                  newD[6] = 4;\n                  break;\n                default:\n                  newD[6] = 0;\n                  break;\n              }\n              return newD;\n            });\n            setSpellTarget(value);\n          }}\n        />\n        {spell.range !== SpellRange.touch && spell.range !== SpellRange.losManipulate && (\n          <SelectField\n            value={aoeRadius}\n            options={[\n              \"1 Meter\",\n              \"2 Meter\",\n              \"3 Meter\",\n              \"4 Meter\",\n              \"5 Meter\",\n              \"6 Meter\",\n              \"7 Meter\",\n              \"8 Meter\",\n              \"9 Meter\",\n              \"10 Meter\",\n              \"1/2 Magic/Faith Meter\",\n              \"Magic/Faith Meters\",\n              \"Magic/Faith *2 Meters\",\n            ]}\n            label={\"Area of Effect Radius\"}\n            onChange={(value: string) => {\n              setDrain((d) => {\n                let newD = [...d];\n                switch (value) {\n                  case \"1 Meter\":\n                    newD[7] = -1;\n                    break;\n                  case \"2 Meter\":\n                    newD[7] = 0;\n                    break;\n                  case \"3 Meter\":\n                    newD[7] = 1;\n                    break;\n                  case \"4 Meter\":\n                  case \"5 Meter\":\n                  case \"1/2 Magic/Faith Meter\":\n                    newD[7] = 2;\n                    break;\n                  case \"6 Meter\":\n                  case \"7 Meter\":\n                  case \"Magic/Faith Meters\":\n                    newD[7] = 3;\n                    break;\n                  case \"8 Meter\":\n                  case \"9 Meter\":\n                  case \"Magic/Faith *2 Meters\":\n                    newD[7] = 4;\n                    break;\n                  case \"10 Meter\":\n                    newD[7] = 5;\n                    break;\n                  default:\n                    newD[7] = 0;\n                    break;\n                }\n                return newD;\n              });\n              setAoeRadius(value);\n            }}\n          />\n        )}\n        {spell.range !== SpellRange.sonic &&\n          spell.range !== SpellRange.touch &&\n          spell.range !== SpellRange.radius &&\n          spell.range !== SpellRange.radiusPlus && (\n            <SelectField\n              value={losRange}\n              options={[\n                \"1/2 Magic/Faith meters\",\n                \"Magic/Faith meters\",\n                \"Magic/Faith *2 meters\",\n                \"Magic/Faith *3 meters\",\n                \"Magic/Faith *4 meters\",\n                \"Magic/Faith *5 meters\",\n              ]}\n              label={\"Line of Sight Range\"}\n              onChange={(value: string) => {\n                setDrain((d) => {\n                  let newD = [...d];\n                  switch (value) {\n                    case \"1/2 Magic/Faith meters\":\n                    case \"Magic/Faith meters\":\n                      newD[17] = -1;\n                      break;\n                    case \"Magic/Faith *2 meters\":\n                      newD[17] = 0;\n                      break;\n                    case \"Magic/Faith *3 meters\":\n                      newD[17] = 1;\n                      break;\n                    case \"Magic/Faith *4 meters\":\n                      newD[17] = 2;\n                      break;\n                    case \"Magic/Faith *5 meters\":\n                      newD[17] = 3;\n                      break;\n                    default:\n                      newD[17] = 0;\n                      break;\n                  }\n                  return newD;\n                });\n                setLosRange(value);\n              }}\n            />\n          )}\n        <SelectField\n          value={damage[0]}\n          options={[\n            \"1 PR Magic/Faith\",\n            \"2 PR Magic/Faith\",\n            \"3 PR Magic/Faith\",\n            \"4 PR Magic/Faith\",\n            \"5 PR Magic/Faith\",\n            \"1\",\n            \"2\",\n            \"3\",\n            \"4\",\n            \"5\",\n            \"1d4\",\n            \"1d6\",\n            \"1d8\",\n            \"1d10\",\n            \"1d12\",\n            \"1d20\",\n            \"2d4\",\n            \"2d6\",\n            \"2d8\",\n            \"2d10\",\n            \"2d20\",\n            \"3d4\",\n            \"3d6\",\n            \"3d8\",\n            \"3d10\",\n            \"3d12\",\n            \"4d4\",\n            \"4d6\",\n            \"4d8\",\n            \"4d10\",\n            \"5d4\",\n            \"5d6\",\n            \"5d8\",\n            \"6d4\",\n            \"MystB\",\n            \"MystB *2\",\n            \"plus 1/4 Magic/Faith\",\n            \"plus 1/2 Magic/Faith\",\n            \"Collateral Damage based on environment\",\n          ]}\n          label={\"Damage/Healing 1\"}\n          onChange={(value: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              switch (value) {\n                case \"plus 1/4 Magic/Faith\":\n                  newD[8] = -1;\n                  break;\n                case \"plus 1/2 Magic/Faith\":\n                  newD[8] = -2;\n                  break;\n                case \"1\":\n                case \"1d4\":\n                case \"1d6\":\n                case \"MystB\":\n                case \"Collateral Damage based on environment\":\n                  newD[8] = 1;\n                  break;\n                case \"MystB *2\":\n                case \"2\":\n                case \"1d8\":\n                case \"2d4\":\n                  newD[8] = 2;\n                  break;\n                case \"3\":\n                case \"1 PR Magic/Faith\":\n                case \"1d10\":\n                case \"1d12\":\n                case \"2d6\":\n                case \"3d4\":\n                  newD[8] = 3;\n                  break;\n                case \"4\":\n                case \"2 PR Magic/Faith\":\n                case \"2d8\":\n                case \"4d4\":\n                  newD[8] = 4;\n                  break;\n                case \"5\":\n                case \"3d6\":\n                case \"1d20\":\n                case \"2d10\":\n                case \"5d4\":\n                case \"2d12\":\n                  newD[8] = 5;\n                  break;\n                case \"3 PR Magic/Faith\":\n                case \"3d8\":\n                case \"4d6\":\n                  newD[8] = 6;\n                  break;\n                case \"6d4\":\n                case \"3d10\":\n                  newD[8] = 7;\n                  break;\n                case \"4 PR Magic/Faith\":\n                case \"5d6\":\n                case \"4d8\":\n                  newD[8] = 8;\n                  break;\n                case \"3d12\":\n                  newD[8] = 9;\n                  break;\n                case \"2d20\":\n                  newD[8] = 10;\n                  break;\n                case \"4d10\":\n                  newD[8] = 11;\n                  break;\n                case \"5d8\":\n                case \"5 PR Magic/Faith\":\n                  newD[8] = 12;\n                  break;\n                default:\n                  newD[8] = 0;\n                  break;\n              }\n              return newD;\n            });\n            setDamage((d) => {\n              let newD = [...d];\n              newD[0] = value;\n              return newD;\n            });\n          }}\n        />\n        <SelectField\n          value={damage[1]}\n          options={[\n            \"1 PR Magic/Faith\",\n            \"2 PR Magic/Faith\",\n            \"3 PR Magic/Faith\",\n            \"4 PR Magic/Faith\",\n            \"5 PR Magic/Faith\",\n            \"1\",\n            \"2\",\n            \"3\",\n            \"4\",\n            \"5\",\n            \"1d4\",\n            \"1d6\",\n            \"1d8\",\n            \"1d10\",\n            \"1d12\",\n            \"1d20\",\n            \"2d4\",\n            \"2d6\",\n            \"2d8\",\n            \"2d10\",\n            \"2d20\",\n            \"3d4\",\n            \"3d6\",\n            \"3d8\",\n            \"3d10\",\n            \"3d12\",\n            \"4d4\",\n            \"4d6\",\n            \"4d8\",\n            \"4d10\",\n            \"5d4\",\n            \"5d6\",\n            \"5d8\",\n            \"6d4\",\n            \"MystB\",\n            \"MystB *2\",\n            \"plus 1/4 Magic/Faith\",\n            \"plus 1/2 Magic/Faith\",\n            \"Collateral Damage based on environment\",\n          ]}\n          label={\"Damage/Healing 2\"}\n          onChange={(value: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              switch (value) {\n                case \"plus 1/4 Magic/Faith\":\n                  newD[9] = -1;\n                  break;\n                case \"plus 1/2 Magic/Faith\":\n                  newD[9] = -2;\n                  break;\n                case \"1\":\n                case \"1d4\":\n                case \"1d6\":\n                case \"MystB\":\n                case \"Collateral Damage based on environment\":\n                  newD[9] = 1;\n                  break;\n                case \"MystB *2\":\n                case \"2\":\n                case \"1d8\":\n                case \"2d4\":\n                  newD[9] = 2;\n                  break;\n                case \"3\":\n                case \"1 PR Magic/Faith\":\n                case \"1d10\":\n                case \"1d12\":\n                case \"2d6\":\n                case \"3d4\":\n                  newD[9] = 3;\n                  break;\n                case \"4\":\n                case \"2 PR Magic/Faith\":\n                case \"2d8\":\n                case \"4d4\":\n                  newD[9] = 4;\n                  break;\n                case \"5\":\n                case \"3d6\":\n                case \"1d20\":\n                case \"2d10\":\n                case \"5d4\":\n                case \"2d12\":\n                  newD[9] = 5;\n                  break;\n                case \"3 PR Magic/Faith\":\n                case \"3d8\":\n                case \"4d6\":\n                  newD[9] = 6;\n                  break;\n                case \"6d4\":\n                case \"3d10\":\n                  newD[9] = 7;\n                  break;\n                case \"4 PR Magic/Faith\":\n                case \"5d6\":\n                case \"4d8\":\n                  newD[9] = 8;\n                  break;\n                case \"3d12\":\n                  newD[9] = 9;\n                  break;\n                case \"2d20\":\n                  newD[9] = 10;\n                  break;\n                case \"4d10\":\n                  newD[9] = 11;\n                  break;\n                case \"5d8\":\n                case \"5 PR Magic/Faith\":\n                  newD[9] = 12;\n                  break;\n                default:\n                  newD[9] = 0;\n                  break;\n              }\n              return newD;\n            });\n            setDamage((d) => {\n              let newD = [...d];\n              newD[1] = value;\n              return newD;\n            });\n          }}\n        />\n        <SelectField\n          value={damage[2]}\n          options={[\n            \"1 PR Magic/Faith\",\n            \"2 PR Magic/Faith\",\n            \"3 PR Magic/Faith\",\n            \"4 PR Magic/Faith\",\n            \"5 PR Magic/Faith\",\n            \"1\",\n            \"2\",\n            \"3\",\n            \"4\",\n            \"5\",\n            \"1d4\",\n            \"1d6\",\n            \"1d8\",\n            \"1d10\",\n            \"1d12\",\n            \"1d20\",\n            \"2d4\",\n            \"2d6\",\n            \"2d8\",\n            \"2d10\",\n            \"2d20\",\n            \"3d4\",\n            \"3d6\",\n            \"3d8\",\n            \"3d10\",\n            \"3d12\",\n            \"4d4\",\n            \"4d6\",\n            \"4d8\",\n            \"4d10\",\n            \"5d4\",\n            \"5d6\",\n            \"5d8\",\n            \"6d4\",\n            \"MystB\",\n            \"MystB *2\",\n            \"plus 1/4 Magic/Faith\",\n            \"plus 1/2 Magic/Faith\",\n            \"Collateral Damage based on environment\",\n          ]}\n          label={\"Damage/Healing 3\"}\n          onChange={(value: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              switch (value) {\n                case \"plus 1/4 Magic/Faith\":\n                  newD[10] = -1;\n                  break;\n                case \"plus 1/2 Magic/Faith\":\n                  newD[10] = -2;\n                  break;\n                case \"1\":\n                case \"1d4\":\n                case \"1d6\":\n                case \"MystB\":\n                case \"Collateral Damage based on environment\":\n                  newD[10] = 1;\n                  break;\n                case \"MystB *2\":\n                case \"2\":\n                case \"1d8\":\n                case \"2d4\":\n                  newD[10] = 2;\n                  break;\n                case \"3\":\n                case \"1 PR Magic/Faith\":\n                case \"1d10\":\n                case \"1d12\":\n                case \"2d6\":\n                case \"3d4\":\n                  newD[10] = 3;\n                  break;\n                case \"4\":\n                case \"2 PR Magic/Faith\":\n                case \"2d8\":\n                case \"4d4\":\n                  newD[10] = 4;\n                  break;\n                case \"5\":\n                case \"3d6\":\n                case \"1d20\":\n                case \"2d10\":\n                case \"5d4\":\n                case \"2d12\":\n                  newD[10] = 5;\n                  break;\n                case \"3 PR Magic/Faith\":\n                case \"3d8\":\n                case \"4d6\":\n                  newD[10] = 6;\n                  break;\n                case \"6d4\":\n                case \"3d10\":\n                  newD[10] = 7;\n                  break;\n                case \"4 PR Magic/Faith\":\n                case \"5d6\":\n                case \"4d8\":\n                  newD[10] = 8;\n                  break;\n                case \"3d12\":\n                  newD[10] = 9;\n                  break;\n                case \"2d20\":\n                  newD[10] = 10;\n                  break;\n                case \"4d10\":\n                  newD[10] = 11;\n                  break;\n                case \"5d8\":\n                case \"5 PR Magic/Faith\":\n                  newD[10] = 12;\n                  break;\n                default:\n                  newD[10] = 0;\n                  break;\n              }\n              return newD;\n            });\n            setDamage((d) => {\n              let newD = [...d];\n              newD[3] = value;\n              return newD;\n            });\n          }}\n        />\n        <SelectField\n          value={directEffects}\n          options={[\n            \"Difficult Terrain\",\n            \"Life Leech\",\n            \"Communicate\",\n            \"Confusion / Stun / Blind\",\n            \"Hex\",\n            \"Impair Movement / Vision\",\n            \"Move / Fear / Root\",\n            \"Damage Over Time\",\n            \"Incapacitate\",\n            \"Sphere\",\n            \"Knockdown\",\n            \"Wall / Barrier / Construct / Summon\",\n            \"Teleport\",\n            \"Heal\",\n            \"Buff / Illusion / Shield\",\n            \"Charm / Control / Influence\",\n            \"Transform\",\n          ]}\n          label={\"Direct Effects\"}\n          onChange={(value: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              switch (value) {\n                case \"Difficult Terrain\":\n                  newD[11] = 1;\n                  break;\n                case \"Life Leech\":\n                case \"Communicate\":\n                case \"Knockdown\":\n                  newD[11] = 2;\n                  break;\n                case \"Confusion / Stun / Blind\":\n                case \"Damage Over Time\":\n                  newD[11] = 3;\n                  break;\n                case \"Hex\":\n                case \"Impair Movement / Vision\":\n                case \"Move / Fear / Root\":\n                case \"Transform\":\n                  newD[11] = 4;\n                  break;\n                case \"Sphere\":\n                case \"Wall / Barrier / Construct / Summon\":\n                case \"Heal\":\n                case \"Buff / Illusion / Shield\":\n                  newD[11] = 5;\n                  break;\n                case \"Teleport\":\n                  newD[11] = 6;\n                  break;\n                default:\n                  newD[11] = 0;\n                  break;\n              }\n              return newD;\n            });\n            setDirectEffects(value);\n          }}\n        />\n        <SelectField\n          value={level}\n          options={[\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]}\n          label={\"Level\"}\n          onChange={(value: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              newD[12] = +value - 5;\n              return newD;\n            });\n            setLevel(value);\n          }}\n        />\n        <SelectField\n          value={projectileType}\n          options={[\"Ball\", \"Missile\", \"Bolt\", \"Ray\", \"Spray\", \"Lasso\"]}\n          label={\"Projectile Type\"}\n          onChange={(value: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              switch (value) {\n                case \"Ball\":\n                  newD[13] = -1;\n                  break;\n                case \"Missile\":\n                case \"Bolt\":\n                case \"Spray\":\n                  newD[13] = 0;\n                  break;\n                case \"Ray\":\n                case \"Lasso\":\n                  newD[13] = 1;\n                  break;\n                default:\n                  newD[13] = 0;\n                  break;\n              }\n              return newD;\n            });\n            setProjectileType(value);\n          }}\n        />\n        {projectileType === \"Spray\" && (\n          <SelectField\n            value={projectileNumber}\n            options={[\"1\", \"2\", \"3\", \"4\", \"5\", \"Scaling / Variable\"]}\n            label={\"Projectile Type\"}\n            onChange={(value: string) => {\n              setDrain((d) => {\n                let newD = [...d];\n                switch (value) {\n                  case \"1\":\n                  case \"Scaling / Variable\":\n                    newD[14] = 1;\n                    break;\n                  case \"2\":\n                    newD[14] = 2;\n                    break;\n                  case \"3\":\n                    newD[14] = 4;\n                    break;\n                  case \"4\":\n                    newD[14] = 6;\n                    break;\n                  case \"5\":\n                    newD[14] = 8;\n                    break;\n                  default:\n                    newD[14] = 0;\n                    break;\n                }\n                return newD;\n              });\n              setProjectileNumber(value);\n            }}\n          />\n        )}\n        {damage[0] !== \"\" && damage[1] !== \"\" && damage[2] !== \"\" && (\n          <SelectField\n            value={damageType}\n            options={[\"Combined\", \"Physical\", \"Stun\", \"Pure\"]}\n            label={\"Damage Type\"}\n            onChange={(value: string) => {\n              setDrain((d) => {\n                let newD = [...d];\n                switch (value) {\n                  case \"Combined\":\n                  case \"Physical\":\n                    newD[15] = 0;\n                    break;\n                  case \"Stun\":\n                    newD[15] = 1;\n                    break;\n                  case \"Pure\":\n                    newD[15] = 2;\n                    break;\n                  default:\n                    newD[15] = 0;\n                    break;\n                }\n                return newD;\n              });\n              setDamageType(value);\n            }}\n          />\n        )}\n        {damageType === \"Combined\" ||\n          (damageType === \"Pure\" && (\n            <SelectField\n              value={pureDamage}\n              options={[\n                \"Acid\",\n                \"Necrotic\",\n                \"Frost\",\n                \"Fire\",\n                \"Lightning\",\n                \"Radiant\",\n                \"Arcane\",\n                \"Poison\",\n              ]}\n              label={\"Pure Spell Damage\"}\n              onChange={(value: string) => {\n                setDrain((d) => {\n                  let newD = [...d];\n                  switch (value) {\n                    case \"Arcane\":\n                      newD[18] = 1;\n                      break;\n                    default:\n                      newD[18] = 0;\n                      break;\n                  }\n                  return newD;\n                });\n                setPureDamage(value);\n              }}\n            />\n          ))}\n        <SelectField\n          value={targetingType}\n          options={[\"Direct Target\", \"Aura Targeting\", \"Indirect Targeting\"]}\n          label={\"Targeting Type\"}\n          onChange={(value: string) => {\n            setDrain((d) => {\n              let newD = [...d];\n              switch (value) {\n                case \"Direct Target\":\n                  newD[16] = 0;\n                  break;\n                case \"Aura Targeting\":\n                  newD[16] = 2;\n                  break;\n                case \"Indirect Targeting\":\n                  newD[16] = 1;\n                  break;\n                default:\n                  newD[16] = 0;\n                  break;\n              }\n              return newD;\n            });\n            setTargetingType(value);\n          }}\n        />\n        {directEffects === \"Wall / Barrier / Construct / Summon\" && (\n          <SelectField\n            value={size}\n            options={[\n              \"1/2 Magic/Faith M²\",\n              \"Magic/Faith M²\",\n              \"Magic/Faith *2 M²\",\n              \"Magic/Faith *3 M²\",\n              \"1/2 Magic/Faith M³\",\n              \"Magic/Faith M³\",\n              \"Magic/Faith *2 M³\",\n              \"Magic/Faith *3 M³\",\n            ]}\n            label={\"Targeting Type\"}\n            onChange={(value: string) => {\n              setDrain((d) => {\n                let newD = [...d];\n                switch (value) {\n                  case \"1/2 Magic/Faith M²\":\n                  case \"1/2 Magic/Faith M³\":\n                    newD[19] = 0;\n                    break;\n                  case \"Magic/Faith M²\":\n                  case \"Magic/Faith M³\":\n                    newD[19] = 1;\n                    break;\n                  case \"Magic/Faith *2 M²\":\n                  case \"Magic/Faith *2 M³\":\n                    newD[19] = 2;\n                    break;\n                  case \"Magic/Faith *3 M²\":\n                  case \"Magic/Faith *3 M³\":\n                    newD[19] = 4;\n                    break;\n                  default:\n                    newD[19] = 0;\n                    break;\n                }\n                return newD;\n              });\n              setSize(value);\n            }}\n          />\n        )}\n        {directEffects === \"Wall / Barrier / Construct / Summon\" && (\n          <SelectField\n            value={hp}\n            options={[\n              \"1/2 Magic/Faith structure rating and Magic/Faith *1 hit points\",\n              \"1/2 Magic/Faith structure rating and Magic/Faith *2 hit points\",\n              \"1/2 Magic/Faith structure rating and Magic/Faith *3 hit points\",\n              \"Magic/Faith structure rating and Magic/Faith *1 hit points\",\n              \"Magic/Faith structure rating and Magic/Faith *2 hit points\",\n              \"Magic/Faith *2 structure rating and Magic/Faith hit points\",\n              \"Magic/Faith *1 hit points\",\n              \"Magic/Faith *2 hit points\",\n              \"Magic/Faith *3 hit points\",\n              \"Magic/Faith *4 hit points\",\n            ]}\n            label={\"Targeting Type\"}\n            onChange={(value: string) => {\n              setDrain((d) => {\n                let newD = [...d];\n                switch (value) {\n                  case \"1/2 Magic/Faith structure rating and Magic/Faith *1 hit points\":\n                    newD[20] = 0;\n                    break;\n                  case \"1/2 Magic/Faith structure rating and Magic/Faith *2 hit points\":\n                  case \"Magic/Faith structure rating and Magic/Faith *1 hit points\":\n                  case \"Magic/Faith *1 hit points\":\n                    newD[20] = 1;\n                    break;\n                  case \"1/2 Magic/Faith structure rating and Magic/Faith *3 hit points\":\n                  case \"Magic/Faith *2 hit points\":\n                    newD[20] = 2;\n                    break;\n                  case \"Magic/Faith structure rating and Magic/Faith *2 hit points\":\n                  case \"Magic/Faith *3 hit points\":\n                    newD[20] = 3;\n                    break;\n                  case \"Magic/Faith *2 structure rating and Magic/Faith hit points\":\n                  case \"Magic/Faith *4 hit points\":\n                    newD[20] = 4;\n                    break;\n                  default:\n                    newD[20] = 0;\n                    break;\n                }\n                return newD;\n              });\n              setHp(value);\n            }}\n          />\n        )}\n        <TextField\n          value={spell.effect}\n          label=\"Effect\"\n          icon={faBookOpen}\n          onChange={(value) => onEdit({ ...spell, effect: value })}\n        />\n        <TextField\n          value={spell.damage}\n          label=\"Damage\"\n          icon={faBookOpen}\n          onChange={(value) => onEdit({ ...spell, damage: value })}\n        />\n        <TextField\n          value={spell.mastery}\n          label=\"Mastery\"\n          icon={faBookOpen}\n          onChange={(value) => onEdit({ ...spell, mastery: value })}\n        />\n        <TextField\n          value={spell.resist}\n          label=\"Resist\"\n          icon={faBookOpen}\n          onChange={(value) => onEdit({ ...spell, resist: value })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellBuilderView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { lazy, Suspense } from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport { MyThemeProvider } from \"./components/theme/MyThemeProvider\";\nimport { CompleteLoadingSpinner } from \"./components/Loading\";\nimport AppWrapper from \"./components/AppWrapper\";\nimport { HashRouter } from \"react-router-dom\";\nimport SpellBuilderView from \"./components/entities/spells/details/SpellBuilder\";\n\nconst ToEntity = lazy(() => import(\"./components/general_elements/details/ToEntity\"));\nconst EntityOverview = lazy(() => import(\"./components/general_elements/EntityOverview\"));\n\nconst Help = lazy(() => import(\"./components/help/Help\"));\nconst Home = lazy(() => import(\"./components/home/Home\"));\nconst Options = lazy(() => import(\"./components/options/Options\"));\nconst Statistics = lazy(() => import(\"./components/statistics/Statistics\"));\n\nconst App = () => {\n  return (\n    <MyThemeProvider>\n      <HashRouter>\n        <AppWrapper>\n          <Suspense fallback={<CompleteLoadingSpinner />}>\n            <Switch>\n              <Route exact path=\"/\" component={Home}></Route>\n              <Route exact path=\"/home\" component={Home}></Route>\n              <Route path=\"/spell-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/spell-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/spell-builder/\" component={SpellBuilderView}></Route>\n              <Route path=\"/spell-overview\" component={EntityOverview}></Route>\n              <Route path=\"/race-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/race-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/race-overview\" component={EntityOverview}></Route>\n              <Route path=\"/talent-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/talent-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/talent-overview\" component={EntityOverview}></Route>\n              <Route path=\"/randomTable-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/randomTable-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/randomTable-overview\" component={EntityOverview}></Route>\n              <Route path=\"/statistics\" component={Statistics}></Route>\n              <Route path=\"/options\" component={Options}></Route>\n              <Route path=\"/help\" component={Help}></Route>\n            </Switch>\n          </Suspense>\n        </AppWrapper>\n      </HashRouter>\n    </MyThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}