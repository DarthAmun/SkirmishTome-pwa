{"version":3,"sources":["../node_modules/peerjs/dist sync","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","components/general_elements/Dialog.tsx","components/entities/random_tables/details/RandomTableEditView.tsx","components/entities/random_tables/details/RandomTableView.tsx","components/form_elements/CheckField.tsx","components/entities/talents/details/TalentEditView.tsx","components/entities/talents/details/TalentView.tsx","components/entities/races/details/RaceView.tsx","components/form_elements/AutoStringField.tsx","components/entities/races/details/RaceEditView.tsx","components/entities/spells/details/SpellView.tsx","components/entities/spells/details/SpellEditView.tsx","components/general_elements/details/EntityDetail.tsx","components/general_elements/ErrorTile.tsx","components/general_elements/details/ToEntity.tsx","database/MyDatabase.tsx","services/DatabaseService.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","hooks/webhookHook.tsx","services/DiscordService.tsx","data/Talent.tsx","components/general_elements/FormatedText.tsx","services/DiceService.tsx","components/general_elements/LinkCheck.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","data/RandomTable.tsx","data/Race.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","BackButton","icon","transform","action","Back","onClick","Icon","styled","FontAwesomeIcon","theme","main","highlight","buttons","color","div","height","ToggleLeft","hoverColor","ToggleRight","EditToggle","props","mode","backgroundColor","tile","Dialog","message","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","Message","ButtonBar","TextButton","text","RandomTableEditView","randomTable","onEdit","onRowChange","field","value","index","rows","CenterWrapper","StringField","name","label","onChange","header","placeholder","map","row","RowWrapper","key","RowCount","cells","IconButton","faTrash","splice","removeRow","faPlus","RandomTableView","useState","rand","setRand","Name","View","faDice","max","lastRowValues","length","includes","trim","split","Math","round","random","rollForRandom","Prop","faArrowRight","range","min","FormatedText","TableHeadProp","cell","TableProp","th","input","td","CheckField","Field","LabelText","Input","type","defaultChecked","target","checked","Checkmark","TalentEditView","talent","FieldGroup","isFlaw","NumberField","cost","SelectField","category","options","TalentCategory","magical","mental","physical","social","TextField","prerequisite","faBookOpen","effect","trigger","triggerFrequency","stress","TalentView","webhook","useWebhook","json","setJson","send","setSend","useEffect","undefined","newJson","username","embeds","author","fields","inline","formatDiscordText","JSON","stringify","Cost","PropWrapper","Text","style","faDiscord","sendEmbedMessage","faPaperPlane","P2PSender","data","RaceView","race","talents","setTalents","history","useHistory","reciveAll","results","hp","abilityModifier","stamina","size","link","filter","tal","TalentLink","push","flaws","flaw","span","backgroundColorLink","AutoStringField","optionTable","filters","optionsTable","setOptions","filteredOptions","setFilteredOptions","findAllItems","useCallback","a","itemList","forEach","table","reciveAllFilteredPromise","Promise","all","items","o","concat","reciveAllFiltered","Array","onSearch","searchTerm","newOptions","option","Options","opt","Option","RaceEditView","Container","fieldName","sort","newTalent","i","onChangeTalent","oldTalent","newTalentList","removeTalent","addNewTalent","newFlaw","onChangeFlaw","oldFlaw","newFlawList","removeFlaw","addNewFlaw","SpellView","spell","source","castTime","School","school","Drain","drain","rite","damage","mastery","resist","SpellEditView","EntityDetail","entity","tableName","isNew","view","editMode","setMode","entityObj","editEntity","showDeleteDialog","setDeleteDialog","showAlert","setAlert","setMessage","unsavedChanges","setUnsavedChanges","updateEntity","msg","updateWithCallback","result","setTimeout","editAndSaveEntity","views","faExclamationTriangle","remove","goBack","TopBar","faArrowLeft","toString","faSave","obj","newObj","createNewWithId","duplicateEntity","faClone","entityId","React","createElement","toLocaleLowerCase","ErrorTile","buttonText","onButton","Tile","PropTitle","faPlusCircle","boxShadow","headerColor","ToEntity","match","entityName","setEntityName","setEntity","loading","setLoading","error","setError","makeEntity","newEntity","params","recivePromiseByAttribute","recivePromise","newMatch","path","replaceAll","str","entities","Talent","Spell","Race","randomTables","RandomTable","Loading","createNewEntity","charAt","toUpperCase","slice","MyAppDatabase","races","spells","version","stores","Dexie","callback","db","open","then","update","finally","close","saveNew","filename","put","prom","saveNewFromList","refinedEntities","bulkPut","delete","toArray","array","reciveCount","count","reciveCountPromise","where","equalsIgnoreCase","get","recivePromiseByAttributeCount","equals","reciveAllPromise","applyFilters","test","hasTag","fieldPart","toLowerCase","arrayTest","filterPart","val","sortedFiled","reverse","sortBy","reciveAttributeSelectionPromise","attribute","orderBy","uniqueKeys","deleteAll","clear","exportFilteredFromTable","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","document","download","href","encodeURIComponent","body","appendChild","click","removeChild","floatLeft","disabled","SimpleButton","left","DisabledSimpleButton","button","localStorage","getItem","hook","sendMessage","content","avatar","request","XMLHttpRequest","setRequestHeader","avatar_url","console","log","this","isTalent","arg","nameCheck","costCheck","isFlawCheck","prerequisiteCheck","effectCheck","typeCheck","stressCheck","triggerCheck","triggerFrequencyCheck","formatedText","setFormatedText","newText","substring","cut","cutStart","cutEnd","substr","rollDiscord","command","rollCommand","rolls","newCommand","parseInt","krit","fail","rollString","formatLink","parts","formattedParts","part","codePart","linkParts","linkEntity","TextPart","DiscordPart","entityParts","Link","formatTable","textPart","newTable","tableEnd","tableRows","isHead","formatText","indexOf","FormatedTextContainer","float","padding","commands","newCommands","fullCommand","commandSplits","multiplier","startsWith","com","newRoll","rollDie","LinkCheck","entitiyFound","newType","catch","formatIcon","setName","peer","setPeer","brokerId","password","characters","floor","generateBrokerId","newPeer","Peer","host","secure","on","conn","errorData","disconnected","destroyed","reconnect","faExclamationCircle"],"mappings":"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","file":"static/js/9.b7955f81.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 108;","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nconst Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nexport default Dialog;\n\nconst DialogWrapper = styled.div`\n  width: 180px;\n  position: absolute;\n  z-index: 1010;\n  top: 10px;\n  left: calc(50% - 100px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../../data/RandomTable\";\n\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\n\ninterface $Props {\n  randomTable: RandomTable;\n  onEdit: (value: RandomTable) => void;\n}\n\nconst RandomTableEditView = ({ randomTable, onEdit }: $Props) => {\n  const onRowChange = (field: string, value: string, index: number) => {\n    let rows = randomTable.rows;\n    rows[index] = { ...rows[index], [field]: value };\n    onEdit({ ...randomTable, rows: rows });\n  };\n\n  const addNewRow = () => {\n    onEdit({\n      ...randomTable,\n      rows: [...randomTable.rows, { value: \"\", cells: \"\" }],\n    });\n  };\n\n  const removeRow = (index: number) => {\n    let rows = randomTable.rows;\n    if (index !== -1) {\n      rows.splice(index, 1);\n      onEdit({ ...randomTable, rows: rows });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RandomTableView>\n        <StringField\n          value={randomTable.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...randomTable, name: name })}\n        />\n        <StringField\n          value={randomTable.header}\n          label=\"Header\"\n          onChange={(name) => onEdit({ ...randomTable, header: name })}\n          placeholder={\"Items| Description|...\"}\n        />\n      </RandomTableView>\n      <RandomTableView>\n        {randomTable.rows.map(\n          (row: { value: string; cells: string }, index: number) => {\n            return (\n              <RowWrapper key={index}>\n                <RowCount>{index}</RowCount>\n                <StringField\n                  value={row.value}\n                  label={\"Row values \" + index}\n                  onChange={(text) => onRowChange(\"value\", text, index)}\n                  placeholder={`${index + 1} or 0-5`}\n                />\n                <StringField\n                  value={row.cells}\n                  label={\"Row \" + index}\n                  onChange={(text) => onRowChange(\"cells\", text, index)}\n                  placeholder={`Item ${index}| Description ${index}|...`}\n                />\n                <IconButton icon={faTrash} onClick={() => removeRow(index)} />\n              </RowWrapper>\n            );\n          }\n        )}\n        <RowWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewRow()} />\n        </RowWrapper>\n      </RandomTableView>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RandomTableView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst RowWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RowCount = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 20px;\n  max-width: 20px;\n  text-algin: center;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../../data/RandomTable\";\n\nimport { faArrowRight, faDice } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  randomTable: RandomTable;\n}\n\nconst RandomTableView = ({ randomTable }: $Props) => {\n  const [rand, setRand] = useState<number>(-1);\n\n  const rollForRandom = () => {\n    const min = 1;\n    let max = 10;\n    const lastRowValues = randomTable.rows[randomTable.rows.length - 1].value;\n    if (lastRowValues.includes(\"-\")) {\n      let range = lastRowValues.trim().split(\"-\");\n      max = +range[1];\n    } else if (lastRowValues.includes(\"–\")) {\n      let range = lastRowValues.trim().split(\"–\");\n      max = +range[1];\n    } else {\n      max = +lastRowValues;\n    }\n    const rand = Math.round(min + Math.random() * (max - min));\n    setRand(rand);\n  };\n\n  return (\n    <CenterWrapper>\n      <Name>\n        <b>{randomTable.name}</b>\n      </Name>\n      <View>\n        <TextButton\n          text={\"Roll\"}\n          icon={faDice}\n          onClick={() => rollForRandom()}\n        />\n        {rand >= 0 && (\n          <Prop>\n            {rand} <Icon icon={faArrowRight} />\n            {randomTable.rows.map((row: { value: string; cells: string }) => {\n              if (row.value.includes(\"-\")) { // normal -\n                let range = row.value.trim().split(\"-\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else if (row.value.includes(\"–\")) { // – used by DnDBeyond \n                let range = row.value.trim().split(\"–\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else {\n                const valueNumber = +row.value;\n                if (valueNumber === rand)\n                  return <FormatedText text={row.cells} />;\n              }\n              return <></>;\n            })}\n          </Prop>\n        )}\n      </View>\n      <View>\n        <table>\n          <tbody>\n            <tr>\n              <TableHeadProp>Number</TableHeadProp>\n              {randomTable.header &&\n                randomTable.header\n                  .split(\"|\")\n                  .map((cell: string, index: number) => {\n                    return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                  })}\n            </tr>\n            {randomTable.rows &&\n              randomTable.rows.map(\n                (row: { value: string; cells: string }, index: number) => {\n                  return (\n                    <tr key={index}>\n                      <TableProp key={index}>{row.value}</TableProp>\n                      {row.cells\n                        .split(\"|\")\n                        .map((cell: string, index: number) => {\n                          return (\n                            <TableProp key={index}>\n                              <FormatedText text={cell} />\n                            </TableProp>\n                          );\n                        })}\n                    </tr>\n                  );\n                }\n              )}\n          </tbody>\n        </table>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.color};\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 10px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: left;\n`;\n\nconst Prop = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  box-sizing: content-box;\n  text-align: center;\n\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};s\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  user-select: none;\n  position: relative;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Talent, { TalentCategory } from \"../../../../data/Talent\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport CheckField from \"../../../form_elements/CheckField\";\n\nimport { faBookOpen } from \"@fortawesome/free-solid-svg-icons\";\nimport SelectField from \"../../../form_elements/SelectField\";\n\ninterface $Props {\n  talent: Talent;\n  onEdit: (value: Talent) => void;\n}\n\nconst TalentEditView = ({ talent, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <FieldGroup>\n          <StringField\n            value={talent.name}\n            label=\"Name\"\n            onChange={(name) => onEdit({ ...talent, name: name })}\n          />\n          <CheckField\n            value={!!talent.isFlaw}\n            label=\"Is Flaw?\"\n            onChange={(isFlaw) => onEdit({ ...talent, isFlaw: isFlaw })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={talent.cost}\n            label=\"Cost\"\n            onChange={(cost) => onEdit({ ...talent, cost: cost })}\n          />\n          <CheckField\n            value={!!talent.type}\n            label=\"Is Active?\"\n            onChange={(type) => onEdit({ ...talent, type: type })}\n          />\n        </FieldGroup>\n        <SelectField\n          value={{ value: talent.category, label: talent.category }}\n          options={[\n            { value: TalentCategory.magical, label: TalentCategory.magical },\n            { value: TalentCategory.mental, label: TalentCategory.mental },\n            { value: TalentCategory.physical, label: TalentCategory.physical },\n            { value: TalentCategory.social, label: TalentCategory.social },\n          ]}\n          label={\"Category\"}\n          onChange={(category: string) => onEdit({ ...talent, category: category })}\n        />\n        <TextField\n          value={talent.prerequisite}\n          label=\"Prerequisite\"\n          icon={faBookOpen}\n          onChange={(prerequisite) => onEdit({ ...talent, prerequisite: prerequisite })}\n        />\n        <TextField\n          value={talent.effect}\n          label=\"Effect\"\n          icon={faBookOpen}\n          onChange={(effect) => onEdit({ ...talent, effect: effect })}\n        />\n        {talent.isFlaw && talent.type && (\n          <>\n            <TextField\n              value={talent.trigger}\n              label=\"Trigger\"\n              icon={faBookOpen}\n              onChange={(trigger) => onEdit({ ...talent, trigger: trigger })}\n            />\n            <StringField\n              value={talent.triggerFrequency}\n              label=\"Trigger Frequency\"\n              onChange={(triggerFrequency) =>\n                onEdit({ ...talent, triggerFrequency: triggerFrequency })\n              }\n            />\n          </>\n        )}\n        {!talent.isFlaw && talent.type && (\n          <StringField\n            value={talent.stress}\n            label=\"Stress\"\n            onChange={(stress) => onEdit({ ...talent, stress: stress })}\n          />\n        )}\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default TalentEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport Talent from \"../../../../data/Talent\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { formatDiscordText, sendEmbedMessage } from \"../../../../services/DiscordService\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\n\ninterface $Props {\n  talent: Talent;\n}\n\nconst TalentView = ({ talent }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (SkirmishTome)\",\n        embeds: [\n          {\n            author: {\n              name: talent.name,\n            },\n            fields: [\n              {\n                name: \"Cost\",\n                value: talent.cost ? talent.cost : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Stress\",\n                value: talent.type ? talent.stress : \"passive\",\n                inline: true,\n              },\n              {\n                name: \"Prerequisite\",\n                value: formatDiscordText(talent.prerequisite),\n              },\n              {\n                name: \"Effect\",\n                value: formatDiscordText(talent.effect),\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [talent, webhook]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Cost>\n          <b>{talent.cost}</b>\n        </Cost>\n\n        <Name>\n          <b>{talent.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>{talent.category}</Prop>\n          <Prop>{talent.type ? (talent.isFlaw ? \"trigger\" : \"active\") : \"Passive\"}</Prop>\n        </PropWrapper>\n        <Text>\n          <FormatedText text={talent.prerequisite} />\n        </Text>\n        <Text>\n          <FormatedText text={talent.effect} />\n        </Text>\n        {talent.isFlaw && talent.type && (\n          <>\n            <Text>\n              <FormatedText text={talent.trigger} />\n            </Text>\n            <PropWrapper>\n              <Prop>{talent.triggerFrequency}</Prop>\n            </PropWrapper>\n          </>\n        )}\n        {!talent.isFlaw && talent.type && (\n          <PropWrapper>\n            <Prop>{talent.stress}</Prop>\n          </PropWrapper>\n        )}\n        <PropWrapper>\n          {webhook !== undefined && (\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Cast ${talent.name}`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          )}\n          {!send && (\n            <TextButton\n              text={`Send ${talent.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={talent} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default TalentView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Cost = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport Race from \"../../../../data/Race\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { sendEmbedMessage } from \"../../../../services/DiscordService\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { useHistory } from \"react-router\";\nimport Talent from \"../../../../data/Talent\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\n\ninterface $Props {\n  race: Race;\n}\n\nconst RaceView = ({ race }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n  const [talents, setTalents] = useState<Talent[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAll(\"talents\", (results: any[]) => {\n      setTalents(results);\n    });\n  }, [race]);\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (SkirmishTome)\",\n        embeds: [\n          {\n            author: {\n              name: race.name,\n            },\n            fields: [\n              {\n                name: \"Hp\",\n                value: race.hp ? race.hp : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Ability Modifier\",\n                value: race.abilityModifier ? race.abilityModifier : \"-\",\n                inline: true,\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [race, webhook]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{race.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>Hp: {race.hp}</Prop>\n          <Prop>Stamina: {race.stamina}</Prop>\n          <Prop>Size: {race.size}</Prop>\n          <Prop>Ability Modifier:{race.abilityModifier}</Prop>\n        </PropWrapper>\n\n        <PropWrapper>\n          {race.talents.length > 0 &&\n            race.talents.map((talent, index: number) => {\n              const link: string =\n                \"/talent-detail/id/\" + talents.filter((tal) => tal.name === talent)[0]?.id;\n              return (\n                <TalentLink key={index} onClick={() => history.push(link)}>\n                  {talent}\n                </TalentLink>\n              );\n            })}\n        </PropWrapper>\n        <PropWrapper>\n          {race.flaws.length > 0 &&\n            race.flaws.map((flaw, index: number) => <Prop key={index}>{flaw}</Prop>)}\n        </PropWrapper>\n        <PropWrapper>\n          {webhook !== undefined && (\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Cast ${race.name}`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          )}\n          {!send && (\n            <TextButton\n              text={`Send ${race.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={race} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: white;\n  text-align: center;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TalentLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport IEntity from \"../../data/IEntity\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\nimport { reciveAllFiltered, reciveAllFilteredPromise } from \"../../services/DatabaseService\";\nimport Filter from \"../../data/Filter\";\n\ninterface $Props {\n  optionTable: string | string[];\n  filters?: Filter[];\n  value: string;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst AutoStringField = ({\n  optionTable,\n  filters,\n  value,\n  label,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  const [optionsTable] = useState<string | string[]>(optionTable);\n  const [options, setOptions] = useState<IEntity[]>([]);\n  const [filteredOptions, setFilteredOptions] = useState<IEntity[]>([]);\n\n  const findAllItems = useCallback(\n    async (optionsTable: string[]) => {\n      let itemList: Promise<IEntity[]>[] = [];\n      optionsTable.forEach((table) => {\n        itemList.push(reciveAllFilteredPromise(table, filters !== undefined ? filters : []));\n      });\n      const results = await Promise.all(itemList);\n      results.forEach((items: IEntity[]) => {\n        setOptions((o) => o.concat(items));\n      });\n    },\n    [filters]\n  );\n\n  useEffect(() => {\n    if (typeof optionsTable === \"string\") {\n      reciveAllFiltered(optionsTable, filters !== undefined ? filters : [], (data: any[]) => {\n        setOptions(data);\n      });\n    }\n    if (optionsTable instanceof Array && optionsTable.length > 0) {\n      findAllItems(optionsTable);\n    }\n  }, [optionsTable, findAllItems, filters]);\n\n  const onSearch = useCallback(\n    (searchTerm: string) => {\n      onChange(searchTerm);\n      let newOptions = options.filter((option) => {\n        return option.name.includes(searchTerm);\n      });\n      setFilteredOptions(newOptions);\n    },\n    [options, onChange]\n  );\n\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input type=\"text\" value={value} onChange={(e) => onSearch(e.target.value)}></Input>\n      <Options>\n        {filteredOptions.length > 0 &&\n          filteredOptions.map((opt, index: number) => {\n            return (\n              <Option key={index} onClick={(e) => onSearch(opt.name)}>\n                {opt.name}\n              </Option>\n            );\n          })}\n      </Options>\n    </Field>\n  );\n};\n\nexport default AutoStringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  position: relative;\n  overflow: visible;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Options = styled.div`\n  display: none;\n  position: absolute;\n  border-bottom: none;\n  border-top: none;\n  z-index: 99;\n  top: 100%;\n  left: 0;\n  right: 0;\n  overflow: hidden;\n\n  &:hover {\n    display: block;\n  }\n`;\n\nconst Option = styled.div`\n  padding: 5px;\n  cursor: pointer;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  margin-bottom: 1px;\n  border-radius: 5px;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:focus ~ ${Options} {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Race from \"../../../../data/Race\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport AutoStringField from \"../../../form_elements/AutoStringField\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport { faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../../../form_elements/TextButton\";\n\ninterface $Props {\n  race: Race;\n  onEdit: (value: Race) => void;\n}\n\nconst RaceEditView = ({ race, onEdit }: $Props) => {\n  const removeTalent = (oldTalent: string) => {\n    let newTalentList = race.talents.filter((talent) => talent !== oldTalent);\n    onEdit({ ...race, talents: newTalentList });\n  };\n  const addNewTalent = () => {\n    let newTalentList = [...race.talents];\n    newTalentList.push(\"\");\n    onEdit({ ...race, talents: newTalentList });\n  };\n  const onChangeTalent = (newTalent: string, i: number) => {\n    let talents = [...race.talents];\n    talents[i] = newTalent;\n    onEdit({ ...race, talents: talents });\n  };\n\n  const removeFlaw = (oldFlaw: string) => {\n    let newFlawList = race.flaws.filter((flaw) => flaw !== oldFlaw);\n    onEdit({ ...race, flaws: newFlawList });\n  };\n  const addNewFlaw = () => {\n    let newFlawList = [...race.flaws];\n    newFlawList.push(\"\");\n    onEdit({ ...race, flaws: newFlawList });\n  };\n  const onChangeFlaw = (newFlaw: string, i: number) => {\n    let flaws = [...race.flaws];\n    flaws[i] = newFlaw;\n    onEdit({ ...race, flaws: flaws });\n  };\n\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={race.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...race, name: name })}\n        />\n        <NumberField\n          value={race.hp}\n          label=\"Hp\"\n          onChange={(value) => onEdit({ ...race, hp: value })}\n        />\n        <NumberField\n          value={race.stamina}\n          label=\"Stamina\"\n          onChange={(value) => onEdit({ ...race, stamina: value })}\n        />\n        <StringField\n          value={race.size}\n          label=\"Size\"\n          onChange={(value) => onEdit({ ...race, size: value })}\n        />\n        <StringField\n          value={race.abilityModifier}\n          label=\"Ability Modifier\"\n          onChange={(abilityModifier) => onEdit({ ...race, abilityModifier: abilityModifier })}\n        />\n        {race.talents.map((talent: string, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={\"talents\"}\n                filters={[{ fieldName: \"isFlaw\", value: false, sort: 0 }]}\n                value={talent}\n                label=\"Talent\"\n                onChange={(newTalent) => onChangeTalent(newTalent, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeTalent(talent)} />\n            </Container>\n          );\n        })}\n        <TextButton text={\"Add new Talent\"} icon={faPlus} onClick={() => addNewTalent()} />\n\n        {race.flaws.map((flaw: string, index: number) => {\n          return (\n            <Container key={index}>\n              <AutoStringField\n                optionTable={\"talents\"}\n                filters={[{ fieldName: \"isFlaw\", value: true, sort: 0 }]}\n                value={flaw}\n                label=\"Flaw\"\n                onChange={(newFlaw) => onChangeFlaw(newFlaw, index)}\n              />\n              <IconButton icon={faTrash} onClick={() => removeFlaw(flaw)} />\n            </Container>\n          );\n        })}\n        <TextButton text={\"Add new Flaw\"} icon={faPlus} onClick={() => addNewFlaw()} />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default RaceEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  flex: 1 1 100%;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport Spell from \"../../../../data/Spell\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { sendEmbedMessage } from \"../../../../services/DiscordService\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellView = ({ spell }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (SkirmishTome)\",\n        embeds: [\n          {\n            author: {\n              name: spell.name,\n            },\n            fields: [\n              {\n                name: \"Source\",\n                value: spell.source ? spell.source : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Casting Time\",\n                value: spell.castTime ? spell.castTime : \"-\",\n                inline: true,\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [spell, webhook]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <School school={spell.school}>{spell.school}</School>\n\n        <Drain>\n          <b>{spell.drain}</b>\n        </Drain>\n\n        <Name>\n          <b>{spell.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>Source{spell.source}</Prop>\n          <Prop>Casting Time: {spell.castTime}</Prop>\n          <Prop>Rite: {spell.rite}</Prop>\n          <Prop>Range: {spell.range}</Prop>\n        </PropWrapper>\n        <Text>\n          <FormatedText text={spell.effect} />\n        </Text>\n        <Text>\n          <FormatedText text={spell.damage} />\n        </Text>\n        <Text>\n          <FormatedText text={spell.mastery} />\n        </Text>\n        <Text>\n          <FormatedText text={spell.resist} />\n        </Text>\n        <PropWrapper>\n          {webhook !== undefined && (\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Cast ${spell.name}`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          )}\n          {!send && (\n            <TextButton\n              text={`Send ${spell.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={spell} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  line-height: 30px;\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Drain = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import { faBookOpen } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Spell, {\n  SpellDuration,\n  SpellRange,\n  SpellRite,\n  SpellSchool,\n  SpellSource,\n} from \"../../../../data/Spell\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport SelectField from \"../../../form_elements/SelectField\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport TextField from \"../../../form_elements/TextField\";\n\ninterface $Props {\n  spell: Spell;\n  onEdit: (value: Spell) => void;\n}\n\nconst SpellEditView = ({ spell, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <StringField\n          value={spell.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...spell, name: name })}\n        />\n        <NumberField\n          value={spell.drain}\n          label=\"Drain\"\n          onChange={(drain) => onEdit({ ...spell, drain: drain })}\n        />\n        <TextField\n          value={spell.effect}\n          label=\"Effect\"\n          icon={faBookOpen}\n          onChange={(value) => onEdit({ ...spell, effect: value })}\n        />\n        <TextField\n          value={spell.damage}\n          label=\"Damage\"\n          icon={faBookOpen}\n          onChange={(value) => onEdit({ ...spell, damage: value })}\n        />\n        <TextField\n          value={spell.mastery}\n          label=\"Mastery\"\n          icon={faBookOpen}\n          onChange={(value) => onEdit({ ...spell, mastery: value })}\n        />\n        <TextField\n          value={spell.resist}\n          label=\"Resist\"\n          icon={faBookOpen}\n          onChange={(value) => onEdit({ ...spell, resist: value })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default SpellEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport IEntity from \"../../../data/IEntity\";\nimport { remove, updateWithCallback, createNewWithId } from \"../../../services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n  faClone,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BackButton from \"../../form_elements/BackButton\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../ToggleStyle\";\nimport Dialog from \"../Dialog\";\n\nimport RandomTableEditView from \"../../entities/random_tables/details/RandomTableEditView\";\nimport RandomTableView from \"../../entities/random_tables/details/RandomTableView\";\nimport TalentEditView from \"../../entities/talents/details/TalentEditView\";\nimport TalentView from \"../../entities/talents/details/TalentView\";\nimport RaceView from \"../../entities/races/details/RaceView\";\nimport RaceEditView from \"../../entities/races/details/RaceEditView\";\nimport SpellView from \"../../entities/spells/details/SpellView\";\nimport SpellEditView from \"../../entities/spells/details/SpellEditView\";\n\ninterface $Props {\n  entity: IEntity;\n  tableName: string;\n  isNew: boolean;\n  view: string;\n}\n\nconst EntityDetail = ({ entity, tableName, isNew, view }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n\n  const [entityObj, editEntity] = useState<IEntity>(entity);\n\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEntity = (entityId: number | undefined) => {\n    remove(tableName, entityId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (entityObj !== entity) {\n      setUnsavedChanges(true);\n    }\n  }, [entityObj, entity]);\n\n  const updateEntity = (entityObj: IEntity, msg: string) => {\n    updateWithCallback(tableName, entityObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(msg);\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const duplicateEntity = (obj: IEntity) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(tableName, newObj, (id) => {\n      editAndSaveEntity({ ...entity, name: entity.name + \" [Clone]\" }, \"Cloning successful!\");\n    });\n  };\n\n  const editAndSaveEntity = (entity: IEntity, msg: string) => {\n    editEntity(entity);\n    updateEntity(entity, msg);\n  };\n\n  type viewOptions = {\n    [key: string]: (props: any) => JSX.Element;\n  };\n  const views: viewOptions = {\n    TalentView: TalentView,\n    TalentEditView: TalentEditView,\n    SpellView: SpellView,\n    SpellEditView: SpellEditView,\n    RaceView: RaceView,\n    RaceEditView: RaceEditView,\n    RandomTableView: RandomTableView,\n    RandomTableEditView: RandomTableEditView,\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${entity.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(tableName, entity.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEntity(entityObj, \"Saved successful!\")}\n              icon={faSave}\n            />\n            <IconButton onClick={() => duplicateEntity(entityObj)} icon={faClone} />\n            <IconButton onClick={() => deleteEntity(entityObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode\n        ? React.createElement(views[view + \"EditView\"], {\n            [view.toLocaleLowerCase()]: entityObj,\n            onEdit: (value: any) => editEntity(value),\n          })\n        : React.createElement(views[view + \"View\"], {\n            [view.toLocaleLowerCase()]: entityObj,\n            onEdit: (value: any) => editAndSaveEntity(value, \"Saved successful!\"),\n          })}\n    </>\n  );\n};\n\nexport default EntityDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport Details from \"./EntityDetail\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ErrorTile from \"../ErrorTile\";\nimport {\n  createNewWithId,\n  recivePromise,\n  recivePromiseByAttribute,\n} from \"../../../services/DatabaseService\";\nimport IEntity from \"../../../data/IEntity\";\nimport { useCallback } from \"react\";\nimport Talent from \"../../../data/Talent\";\nimport RandomTable from \"../../../data/RandomTable\";\nimport Race from \"../../../data/Race\";\nimport Spell from \"../../../data/Spell\";\n\ntype TParams = { id?: string; name?: string };\n\nconst ToEntity = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const [entityName, setEntityName] = useState<string>(\"\");\n  const [entity, setEntity] = useState<IEntity>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (entity !== undefined || error) {\n      setLoading(true);\n      setError(false);\n      setEntityName(\"\");\n      setEntity(undefined);\n    }\n    // eslint-disable-next-line\n  }, [match]);\n\n  const makeEntity = useCallback(\n    async (name: string) => {\n      let newEntity: IEntity | undefined = undefined;\n      if (match.params.name !== undefined)\n        newEntity = await recivePromiseByAttribute(name + \"s\", \"name\", match.params.name);\n      if (match.params.id !== undefined)\n        newEntity = await recivePromise(name + \"s\", +match.params.id);\n      setLoading(false);\n      if (newEntity === undefined) {\n        setEntityName(name);\n        setError(true);\n      } else {\n        setEntityName(name);\n        setEntity(newEntity);\n      }\n    },\n    [match]\n  );\n\n  useEffect(() => {\n    if (match !== undefined && entity === undefined) {\n      let newMatch: string = match.path\n        .split(\"/\")\n        .filter((match: string) => match.includes(\"-detail\"))[0]\n        .replaceAll(\"-detail\", \"\");\n      if (newMatch !== undefined) {\n        makeEntity(newMatch);\n      }\n    }\n  }, [match, makeEntity, entity]);\n\n  type entityOptions = {\n    [key: string]: IEntity;\n  };\n\n  const entities: entityOptions = {\n    talent: new Talent(0, match.params.name),\n    spell: new Spell(0, match.params.name),\n    race: new Race(0, match.params.name),\n    randomTables: new RandomTable(0, match.params.name),\n  };\n\n  const createNewEntity = () => {\n    let newEntity: IEntity = entities[entityName];\n    delete newEntity.id;\n    createNewWithId(entityName + \"s\", newEntity, (id) => {\n      history.push(`/${entityName}-detail/id/${id}`);\n    });\n  };\n\n  const capitalize = (str: string) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && error && (\n        <ErrorTile\n          text={\"No such campaign exists. Want to creat such campaign?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewEntity()}\n        />\n      )}\n      {!error && !loading && entity !== undefined ? (\n        <Details\n          entity={entity}\n          tableName={entityName + \"s\"}\n          isNew={entity.name === \"\" ? true : false}\n          view={capitalize(entityName)}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default ToEntity;\n","import Dexie from \"dexie\";\nimport Race from \"../data/Race\";\nimport RandomTable from \"../data/RandomTable\";\nimport Spell from \"../data/Spell\";\nimport Talent from \"../data/Talent\";\n\nexport class MyAppDatabase extends Dexie {\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  talents: Dexie.Table<Talent, number>;\n  races: Dexie.Table<Race, number>;\n  spells: Dexie.Table<Spell, number>;\n\n  constructor() {\n    super(\"SkirmishTomeDB\");\n    this.version(1).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(2).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(3).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery,resist, drain\",\n    });\n    this.version(4).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery,resist, drain\",\n    });\n\n    this.talents = this.table(\"talents\");\n    this.spells = this.table(\"spells\");\n    this.races = this.table(\"races\");\n    this.randomTables = this.table(\"randomTables\");\n  }\n}\n","import { MyAppDatabase } from \"../database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  style?: any;\n  onClick?: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, style, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick} style={style}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton style={style}>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  style?: any;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, style, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled} style={style}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","export function useWebhook(): { hook: string; name: string } | undefined {\n  if (localStorage.getItem(\"webhook\") !== null && localStorage.getItem(\"webhook\") !== \"\") {\n    let name = \"SkirmishTome\";\n    if (localStorage.getItem(\"webhook_user\") !== null)\n      name = localStorage.getItem(\"webhook_user\") + \"\";\n    return { hook: localStorage.getItem(\"webhook\") + \"\", name: name };\n  } else return undefined;\n}\n","export const sendMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  content: string,\n  avatar?: string\n) => {\n  if (webhook !== undefined) {\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    let params = {\n      username: webhook.name !== \"\" ? webhook.name : \"SkirmishTome\",\n      avatar_url: avatar !== undefined ? avatar : \"\",\n      content: content,\n    };\n    request.send(JSON.stringify(params));\n  }\n};\n\nexport const sendEmbedMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  params: string\n) => {\n  if (webhook !== undefined) {\n    console.log(params);\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.send(params);\n  }\n};\n\nexport const formatDiscordText = (text: string): string => {\n  if (text.includes(\"[[\")) {\n    return text.replaceAll(\"[[\", \"*\").replaceAll(\"]]\", \"*\");\n  } else {\n    return text;\n  }\n};\n","import IEntity from \"./IEntity\";\n\nexport enum TalentCategory {\n  physical = \"physical\",\n  mental = \"mental\",\n  social = \"social\",\n  magical = \"magical\",\n}\n\nexport default class Talent implements IEntity {\n  id?: number;\n  name: string;\n  category: string;\n  isFlaw: boolean;\n  cost: number;\n  prerequisite: string;\n  effect: string;\n  type: boolean;\n  stress: string;\n  trigger: string;\n  triggerFrequency: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    category?: string,\n    isFlaw?: boolean,\n    cost?: number,\n    prerequisite?: string,\n    effect?: string,\n    type?: boolean,\n    stress?: string,\n    trigger?: string,\n    triggerFrequency?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.category = category || TalentCategory.magical;\n    this.isFlaw = isFlaw || false;\n    this.cost = cost || 0;\n    this.prerequisite = prerequisite || \"\";\n    this.effect = effect || \"\";\n    this.type = type || false;\n    this.stress = stress || \"\";\n    this.trigger = trigger || \"\";\n    this.triggerFrequency = triggerFrequency || \"\";\n  }\n}\n\nexport function isTalent(arg: any): arg is Talent {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"number\";\n  const isFlawCheck = arg.isFlaw !== undefined && typeof arg.isFlaw == \"boolean\";\n  const prerequisiteCheck = arg.prerequisite !== undefined && typeof arg.prerequisite == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"boolean\";\n  const stressCheck = arg.stress !== undefined && typeof arg.stress == \"string\";\n  const triggerCheck = arg.trigger !== undefined && typeof arg.trigger == \"string\";\n  const triggerFrequencyCheck =\n    arg.triggerFrequency !== undefined && typeof arg.triggerFrequency == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    costCheck &&\n    isFlawCheck &&\n    prerequisiteCheck &&\n    effectCheck &&\n    typeCheck &&\n    stressCheck &&\n    triggerCheck &&\n    triggerFrequencyCheck\n  );\n}\n","import { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { formatDiscordText, sendEmbedMessage, sendMessage } from \"../../services/DiscordService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [formatedText, setFormatedText] = useState<JSX.Element[]>();\n  let history = useHistory();\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newText = formatDiscordText(text);\n      if (newText.length >= 2000) {\n        newText = newText.substring(0, 1997) + \"...\";\n      }\n      let newJson = {\n        username: webhook.name + \" (DnDTome)\",\n        content: newText,\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [text, webhook]);\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text, rolls } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20\" + rolls + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text, rolls } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \" \" + rolls + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string, index: number): JSX.Element => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={\"TextPart\" + index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                if (linkParts[1].includes(\"|\")) {\n                  const entityParts = linkParts[1].split(\"|\");\n                  const link: string =\n                    \"/\" +\n                    linkEntity +\n                    \"-detail/name/\" +\n                    entityParts[0] +\n                    \"?source=\" +\n                    entityParts[1];\n                  formattedParts.push(\n                    <TextPart key={\"TextPart\" + index}>\n                      <Link onClick={() => history.push(link)}>\n                        <LinkCheck type={linkParts[0]} name={entityParts[0]} /> {entityParts[0]} (\n                        {entityParts[1]})\n                      </Link>\n                      <TextPart>{codePart[1]}</TextPart>\n                    </TextPart>\n                  );\n                } else {\n                  const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                  formattedParts.push(\n                    <TextPart key={\"TextPart\" + index}>\n                      <Link onClick={() => history.push(link)}>\n                        <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                      </Link>\n                      <TextPart>{codePart[1]}</TextPart>\n                    </TextPart>\n                  );\n                }\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else if (text.length > 0) {\n          return <TextPart key={\"TextPart\" + index}>{text}</TextPart>;\n        }\n      }\n      return <></>;\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string): JSX.Element[] => {\n      if (textPart.includes(\"||tableStart||\")) {\n        let newTable: JSX.Element[] = [];\n        const table: string[] = text.split(\"||tableStart||\");\n\n        table.forEach((textPart: string, index: number) => {\n          if (textPart.includes(\"||tableEnd||\")) {\n            const tableEnd = textPart.split(\"||tableEnd||\");\n            const tableRows: string[] = tableEnd[0].split(\"||\");\n            let isHead = true;\n            newTable.push(\n              <table key={\"table\" + index}>\n                <tbody key={\"tbody\" + index}>\n                  {tableRows.map((row: string, index: number) => {\n                    if (row.includes(\"|\")) {\n                      if (isHead) {\n                        isHead = false;\n                        const cells = row.split(\"|\");\n                        return (\n                          <tr key={index}>\n                            {cells.map((cell: string, index: number) => {\n                              return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                            })}\n                          </tr>\n                        );\n                      } else {\n                        const cells = row.split(\"|\");\n                        return (\n                          <tr key={index}>\n                            {cells.map((cell: string, index: number) => {\n                              return <TableProp key={index}>{formatLink(cell, index)}</TableProp>;\n                            })}\n                          </tr>\n                        );\n                      }\n                    } else {\n                      return <></>;\n                    }\n                  })}\n                </tbody>\n              </table>\n            );\n            newTable.push(formatLink(tableEnd[1], index));\n          } else {\n            newTable.push(formatLink(table[0], index));\n          }\n        });\n        return newTable;\n      }\n      return [formatLink(textPart, 0)];\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return (\n    <FormatedTextContainer>\n      {webhook !== undefined && text !== \"\" && (\n        <IconButton\n          style={{\n            backgroundColor: \"#7289da\",\n            float: \"right\",\n            padding: \"5px\",\n          }}\n          icon={faDiscord}\n          onClick={() => sendEmbedMessage(webhook, json)}\n        />\n      )}\n      {formatedText}\n    </FormatedTextContainer>\n  );\n};\n\nexport default FormatedText;\n\nconst FormatedTextContainer = styled.div`\n  line-height: 20px;\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  margin: 1px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","export const rollCommand = (\n  commands: string,\n  krit?: boolean\n): { result: number; text: string; rolls: string } => {\n  let result = 0;\n  let text = \"\";\n\n  let newCommands = \"\";\n  commands.split(\" \").forEach((command) => {\n    if (/\\d+/g.test(command)) {\n      newCommands += command;\n    } else {\n      text += \" \" + command;\n    }\n  });\n  newCommands = newCommands.trim();\n\n  let rolls: string = \"(`\";\n  newCommands.split(\" \").forEach((fullCommand: string) => {\n    let commandSplits: string[] = [];\n    fullCommand.split(\"+\").forEach((part) => {\n      let split = part.split(\"-\");\n      commandSplits = commandSplits.concat(split);\n    });\n\n    commandSplits.forEach((command: string) => {\n      let multiplier: number = 1;\n      if (command.includes(\"d\")) {\n        if (!command.startsWith(\"d\")) {\n          multiplier = parseInt(command.split(\"d\")[0]);\n          command = command.split(\"d\")[1];\n        }\n        command = command.replaceAll(\"d\", \"\");\n        if (krit) multiplier = multiplier * 2;\n\n        if (command.includes(\"+\")) {\n          const com = command.split(\"+\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result += parseInt(com[1]);\n        } else if (command.includes(\"-\")) {\n          const com = command.split(\"-\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result -= parseInt(com[1]);\n        } else {\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(command));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n        }\n      } else {\n        result += parseInt(command);\n        rolls += command + \",\";\n      }\n    });\n    rolls = rolls.slice(0, -1) + \"`)\";\n  });\n\n  return { result: result, text: text, rolls: rolls };\n};\n\nexport const rollDie = (size: number): number => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory } from \"react-icons/bi\";\nimport { GiDiceTwentyFacesTwenty, GiSwordsPower } from \"react-icons/gi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name)\n        .then((count: number) => {\n          setEntity(count > 0);\n          setLoading(false);\n        })\n        .catch(() => {\n          setEntity(false);\n          setLoading(false);\n        });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"talent\":\n        return <GiSwordsPower />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import IEntity from \"./IEntity\";\n\nexport default class RandomTable implements IEntity {\n  id?: number;\n  name: string;\n  header: string;\n  rows: { value: string; cells: string }[];\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    filename?: string,\n    header?: string,\n    rows?: { value: string; cells: string }[]\n  ) {\n    this.id = id;\n    this.filename = filename || \"\";\n    this.name = name || \"\";\n    this.header = header || \"\";\n    this.rows = rows || [];\n  }\n}\n\nexport function isRandomTable(arg: any): arg is RandomTable {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return arg && nameCheck && headerCheck && rowsCheck;\n}\n\nexport function findRandomTableFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  headerCheck: boolean;\n  rowsCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return {\n    nameCheck: nameCheck,\n    headerCheck: headerCheck,\n    rowsCheck: rowsCheck,\n  };\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  hp: number;\n  abilityModifier: string;\n  size: string;\n  stamina: number;\n  talents: string[];\n  flaws: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    hp?: number,\n    abilityModifier?: string,\n    size?: string,\n    stamina?: number,\n    talents?: string[],\n    flaws?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.abilityModifier = abilityModifier || \"\";\n    this.size = size || \"\";\n    this.stamina = stamina || 0;\n    this.talents = talents || [];\n    this.flaws = flaws || [];\n  }\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const abilityModifierCheck =\n    arg.abilityModifier !== undefined && typeof arg.abilityModifier == \"number\";\n  const talentsCheck = arg.talents !== undefined && Array.isArray(arg.talents);\n  const flawsCheck = arg.flaws !== undefined && Array.isArray(arg.flaws);\n\n  return arg && nameCheck && hpCheck && abilityModifierCheck && talentsCheck && flawsCheck;\n}\n"],"sourceRoot":""}