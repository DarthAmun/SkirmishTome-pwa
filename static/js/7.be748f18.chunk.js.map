{"version":3,"sources":["data/Education.tsx","services/OptionService.tsx","components/p2p/P2PReciver.tsx","components/options/GeneralOptions.tsx","components/options/TalentsOptions.tsx","components/form_elements/FileField.tsx","components/form_elements/ImportField.tsx","components/options/DiscordOptions.tsx","services/CsvService.tsx","components/options/SpellsOptions.tsx","components/options/RacesOptions.tsx","components/options/Options.tsx","components/general_elements/SmallFormatedText.tsx","components/entities/talents/TalentTile.tsx","data/Power.tsx"],"names":["Kaste","Education","id","name","caste","skills","group","talent","this","Slave","makeCsv","power","scanImportFileTest","json","fileName","callback","a","promList","Array","isArray","forEach","obj","isTalent","push","saveNew","Promise","all","exportAllFromTable","tableName","filename","reciveAll","entity","document","createElement","download","href","encodeURIComponent","JSON","stringify","target","body","appendChild","click","removeChild","exportAll","reciveAllPromise","spells","powers","talents","races","P2PReciver","changeData","reload","useState","peerId","setId","loading","isLoading","error","setError","state","setState","Peer","undefined","host","secure","peer","useEffect","conn","connect","on","data","console","log","Loading","StringField","value","label","onChange","Icon","icon","faExclamationCircle","TextButton","text","faCheck","onClick","styled","FontAwesomeIcon","theme","main","highlight","GeneralOptions","useTheme","setTheme","General","OptionSection","SelectionTitle","Button","darkTheme","lightTheme","localStorage","setItem","div","tile","color","backgroundColor","boxShadow","button","buttons","input","TalentsOptions","amount","triggerDeleteAll","send","setSend","OptionTab","SectionRow","SectionText","IconButton","faFileExport","faTrashAlt","faPaperPlane","P2PSender","mode","ImportModus","FileField","accept","isMulti","transform","Field","LabelText","Input","e","files","type","multiple","ImportField","modus","setFiles","Files","faFileImport","file","fileList","from","changeFile","map","index","key","FileTile","succCount","setSucc","maxCount","setMax","scanImportFile","listOfNew","newMax","length","NORMAL","newEntitiy","Object","entries","newTableName","bulkList","filter","saveNewFromList","fileReader","FileReader","onloadend","content","result","parse","toString","readAsText","FileWrapper","completed","Math","round","isLabelVisible","bgcolor","height","margin","DiscordOptions","getItem","webhook","setWebhook","webhookUser","setWebhookUser","saveInDB","tablename","listOfIEntity","SpellsOptions","RacesOptions","Options","activeTab","setTab","talentAmount","setTalentAmount","spellAmount","setSpellAmount","raceAmount","setRaceAmount","isReload","setData","readString","usePapaParse","useCSVDownloader","CSVDownloader","Type","csvBackup","setBackup","handleSpellCsvUpload","worker","complete","results","csv","listOfSpells","slice","row","newSpell","Spell","SpellSource","find","SpellCastTime","SpellRite","SpellDuration","SpellRange","SpellSchool","SpellScalingEffect","SpellTarget","SpellAoeRadius","SpellDamage","SpellDirectEffects","SpellLevel","SpellProjectileType","SpellProjectileNumber","SpellDamageType","SpellTargetingType","SpellLosRange","SpellDrainType","SpellPureDamage","SpellSize","SpellHp","toLowerCase","calcDrain","scanImportedSpellCsv","handlePowersCsvUpload","listOfPowers","newPower","Power","scanImportedPowerCsv","handleEducationsCsvUpload","listOfEducations","kowledgeskills","split","t","trim","newEducation","scanImportedEducationCsv","handleTalentsCsvUpload","listOfTalents","newTalent","Talent","scanImportedTalentCsv","handleRacesCsvUpload","listOfRaces","flaws","newRace","Race","scanImportedRaceCsv","reciveCount","backup","concat","keys","spell","race","deleteAll","returnTile","TalentTile","TabBar","children","tab","OptionSectionLarge","Date","getFullYear","getMonth","bom","config","delimiter","SmallFormatedText","useWebhook","formatedText","setFormatedText","history","useHistory","cut","str","cutStart","cutEnd","substr","rollDiscord","useCallback","command","includes","rollCommand","sendMessage","newCommand","parseInt","replaceAll","krit","fail","rollString","formatLink","parts","formattedParts","part","codePart","linkParts","linkEntity","TextPart","DiscordPart","link","Link","formatTable","textPart","table","tableRows","isHead","cells","cell","TableHeadProp","TableProp","formatText","indexOf","FormatedTextContainer","span","backgroundColorLink","th","td","Tile","to","$isflaw","isFlaw","Cost","cost","Name","PropWrapper","Prop","prerequisite","props","isAdept","path","effect","stress","ticks"],"mappings":"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","file":"static/js/7.be748f18.chunk.js","sourcesContent":["import IEntity from \"./IEntity\";\n\nexport enum Kaste {\n  Slave = \"Slave\",\n  Outlore = \"Outlore\",\n  Worker = \"Worker\",\n  Scolar = \"Scolar\",\n  Noble = \"Noble\",\n  Knight = \"Knight\",\n  Royal = \"Royal\",\n}\n\nexport default class Education implements IEntity {\n  id?: number;\n  name: string;\n  caste: string;\n  skills: string[];\n  group: string;\n  talent: string | undefined;\n\n  constructor(\n    id?: number,\n    name?: string,\n    caste?: string,\n    skills?: string[],\n    group?: string, // From Skill Group\n    talent?: string | undefined,\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.caste = caste || Kaste.Slave;\n    this.skills = skills || [];\n    this.group = group || \"\";\n    this.talent = talent;\n  }\n\n  static makeCsv = (power: Education): any[] => {\n    return [power.id];\n  };\n}\n\nexport function isEducation(arg: any): arg is Education {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"number\";\n  const isFlawCheck =\n    arg.isFlaw !== undefined && typeof arg.isFlaw == \"boolean\";\n  const prerequisiteCheck =\n    arg.prerequisite !== undefined && typeof arg.prerequisite == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"boolean\";\n  const stressCheck = arg.stress !== undefined && typeof arg.stress == \"string\";\n  const triggerCheck =\n    arg.trigger !== undefined && typeof arg.trigger == \"string\";\n  const triggerFrequencyCheck =\n    arg.triggerFrequency !== undefined &&\n    typeof arg.triggerFrequency == \"string\";\n  const ticksCheck = arg.ticks !== undefined && typeof arg.ticks == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    costCheck &&\n    isFlawCheck &&\n    prerequisiteCheck &&\n    effectCheck &&\n    typeCheck &&\n    stressCheck &&\n    triggerCheck &&\n    triggerFrequencyCheck &&\n    ticksCheck\n  );\n}\n","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Talent, { isTalent } from \"../data/Talent\";\n\nexport const scanImportFileTest = async (\n  json: any,\n  fileName: string,\n  callback: () => void\n) => {\n  let promList: Promise<any>[] = [];\n\n  if (!Array.isArray(json)) {\n    json = [json];\n  }\n\n  json.forEach((obj: any) => {\n    if (isTalent(obj)) {\n      promList.push(saveNew(\"talents\", obj as Talent, fileName));\n    }\n  });\n  await Promise.all(promList);\n  callback();\n};\n\n// const scanForFormatErrors = (obj: any) => {\n//   const itemFormatErrors = findItemFromattError(obj);\n//   let itemFailCount: number = 0;\n//   for (const value of Object.entries(itemFormatErrors)) {\n//     if (!value[1]) itemFailCount++;\n//   }\n//   const gearFormatErrors = findGearFormattError(obj);\n//   let gearFailCount: number = 0;\n//   for (const value of Object.entries(gearFormatErrors)) {\n//     if (!value[1]) gearFailCount++;\n//   }\n//   const spellFormatErrors = findSpellFormattError(obj);\n//   let spellFailCount: number = 0;\n//   for (const value of Object.entries(spellFormatErrors)) {\n//     if (!value[1]) spellFailCount++;\n//   }\n//   const monsterFormatErrors = findMonsterFormattError(obj);\n//   let monsterFailCount: number = 0;\n//   for (const value of Object.entries(monsterFormatErrors)) {\n//     if (!value[1]) monsterFailCount++;\n//   }\n//   const raceFormatErrors = findRaceFormattError(obj);\n//   let raceFailCount: number = 0;\n//   for (const value of Object.entries(raceFormatErrors)) {\n//     if (!value[1]) raceFailCount++;\n//   }\n//   const subraceFormatErrors = findSubraceFormattError(obj);\n//   let subraceFailCount: number = 0;\n//   for (const value of Object.entries(subraceFormatErrors)) {\n//     if (!value[1]) subraceFailCount++;\n//   }\n//   const classFormatErrors = findClassFormattError(obj);\n//   let classFailCount: number = 0;\n//   for (const value of Object.entries(classFormatErrors)) {\n//     if (!value[1]) classFailCount++;\n//   }\n//   const subclassFormatErrors = formattSubclassFromattError(obj);\n//   let subclassFailCount: number = 0;\n//   for (const value of Object.entries(subclassFormatErrors)) {\n//     if (!value[1]) subclassFailCount++;\n//   }\n//   const selectionFormatErrors = findSelectionFormattError(obj);\n//   let selectionFailCount: number = 0;\n//   for (const value of Object.entries(selectionFormatErrors)) {\n//     if (!value[1]) selectionFailCount++;\n//   }\n\n//   let errors: any[] = [];\n//   if (\n//     itemFailCount <= gearFailCount &&\n//     itemFailCount <= spellFailCount &&\n//     itemFailCount <= raceFailCount &&\n//     itemFailCount <= subraceFailCount &&\n//     itemFailCount <= classFailCount &&\n//     itemFailCount <= subclassFailCount &&\n//     itemFailCount <= selectionFailCount &&\n//     itemFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ item: itemFormatErrors });\n//   }\n//   if (\n//     gearFailCount <= itemFailCount &&\n//     gearFailCount <= spellFailCount &&\n//     gearFailCount <= raceFailCount &&\n//     gearFailCount <= subraceFailCount &&\n//     gearFailCount <= classFailCount &&\n//     gearFailCount <= subclassFailCount &&\n//     gearFailCount <= selectionFailCount &&\n//     gearFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ gear: gearFormatErrors });\n//   }\n//   if (\n//     spellFailCount <= itemFailCount &&\n//     spellFailCount <= gearFailCount &&\n//     spellFailCount <= raceFailCount &&\n//     spellFailCount <= subraceFailCount &&\n//     spellFailCount <= classFailCount &&\n//     spellFailCount <= subclassFailCount &&\n//     spellFailCount <= selectionFailCount &&\n//     spellFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ spell: spellFormatErrors });\n//   }\n//   if (\n//     monsterFailCount <= itemFailCount &&\n//     monsterFailCount <= gearFailCount &&\n//     monsterFailCount <= raceFailCount &&\n//     monsterFailCount <= subraceFailCount &&\n//     monsterFailCount <= classFailCount &&\n//     monsterFailCount <= subclassFailCount &&\n//     monsterFailCount <= selectionFailCount &&\n//     monsterFailCount <= spellFailCount\n//   ) {\n//     errors.push({ monster: monsterFormatErrors });\n//   }\n//   if (\n//     raceFailCount <= itemFailCount &&\n//     raceFailCount <= gearFailCount &&\n//     raceFailCount <= monsterFailCount &&\n//     raceFailCount <= subraceFailCount &&\n//     raceFailCount <= classFailCount &&\n//     raceFailCount <= subclassFailCount &&\n//     raceFailCount <= selectionFailCount &&\n//     raceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ race: raceFormatErrors });\n//   }\n//   if (\n//     subraceFailCount <= itemFailCount &&\n//     subraceFailCount <= gearFailCount &&\n//     subraceFailCount <= monsterFailCount &&\n//     subraceFailCount <= raceFailCount &&\n//     subraceFailCount <= classFailCount &&\n//     subraceFailCount <= subclassFailCount &&\n//     subraceFailCount <= selectionFailCount &&\n//     subraceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subrace: subraceFormatErrors });\n//   }\n//   if (\n//     classFailCount <= itemFailCount &&\n//     classFailCount <= gearFailCount &&\n//     classFailCount <= monsterFailCount &&\n//     classFailCount <= raceFailCount &&\n//     classFailCount <= subraceFailCount &&\n//     classFailCount <= subclassFailCount &&\n//     classFailCount <= selectionFailCount &&\n//     classFailCount <= spellFailCount\n//   ) {\n//     errors.push({ class: classFormatErrors });\n//   }\n//   if (\n//     subclassFailCount <= itemFailCount &&\n//     subclassFailCount <= gearFailCount &&\n//     subclassFailCount <= monsterFailCount &&\n//     subclassFailCount <= raceFailCount &&\n//     subclassFailCount <= subraceFailCount &&\n//     subclassFailCount <= classFailCount &&\n//     subclassFailCount <= selectionFailCount &&\n//     subclassFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subclass: subclassFormatErrors });\n//   }\n//   if (\n//     selectionFailCount <= itemFailCount &&\n//     selectionFailCount <= gearFailCount &&\n//     selectionFailCount <= monsterFailCount &&\n//     selectionFailCount <= raceFailCount &&\n//     selectionFailCount <= subraceFailCount &&\n//     selectionFailCount <= classFailCount &&\n//     selectionFailCount <= subclassFailCount &&\n//     selectionFailCount <= spellFailCount\n//   ) {\n//     errors.push({ selection: selectionFormatErrors });\n//   }\n//   return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n// };\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let entity = { [tableName]: all };\n    let contentType = \"application/json;charset=utf-8;\";\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href =\n      \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(entity));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  const spells = await reciveAllPromise(\"spells\");\n  const powers = await reciveAllPromise(\"powers\");\n  const talents = await reciveAllPromise(\"talents\");\n  const races = await reciveAllPromise(\"races\");\n\n  let all: any = {\n    spells: spells,\n    powers: powers,\n    talents: talents,\n    races: races,\n  };\n\n  let contentType = \"application/json;charset=utf-8;\";\n\n  var a = document.createElement(\"a\");\n  a.download = filename;\n  a.href =\n    \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n  a.target = \"_blank\";\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../services/OptionService\";\nimport IEntity from \"../../data/IEntity\";\n\nimport {\n  faCheck,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thedndtome.com\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField\n        value={peerId}\n        label={\"ID to recive from\"}\n        onChange={(id) => setId(id)}\n      />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton\n            text={\"Accept\"}\n            icon={faCheck}\n            onClick={() => acceptData()}\n          />\n          <TextButton\n            text={\"Decline\"}\n            icon={faCheck}\n            onClick={() => declineData()}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../theme/Theme\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst TalentsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Talents?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"talents\", \"SkirmishTome_talents.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Talents?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"talents\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all talents`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"talents\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default TalentsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, accept, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} accept={accept} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport FileField from \"./FileField\";\nimport IEntity from \"../../data/IEntity\";\nimport { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport { saveNewFromList } from \"../../services/DatabaseService\";\n\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nexport enum ImportModus {\n  NORMAL,\n}\n\ninterface $Props {\n  modus: ImportModus;\n}\n\nconst ImportField = ({ modus }: $Props) => {\n  const [files, setFiles] = useState<File[]>([]);\n\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      setFiles(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\".json\"}\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n      <Files>\n        {files &&\n          files.map((file: File, index: number) => (\n            <FileTile key={index} modus={modus} file={file} />\n          ))}\n      </Files>\n    </>\n  );\n};\n\nexport default ImportField;\n\ninterface $FileProps {\n  file: File;\n  modus: ImportModus;\n}\n\nconst FileTile = ({ file, modus }: $FileProps) => {\n  const [succCount, setSucc] = useState<number>(0);\n  const [maxCount, setMax] = useState<number>(0);\n\n  const scanImportFile = async (json: any, fileName: string) => {\n    console.log(\"Start 5eTools Json interpreting \" + fileName);\n\n    let listOfNew: { tableName: string; newEntitiy: IEntity }[] = [];\n\n    let newMax: number = 0;\n    for (const [key, value] of Object.entries(json)) {\n      if (Array.isArray(value)) {\n        newMax += value.length;\n        if (modus === ImportModus.NORMAL) {\n          // eslint-disable-next-line\n          value.forEach((obj: any) => listOfNew.push({ tableName: key, newEntitiy: obj }));\n        }\n      }\n    }\n    setMax(newMax);\n\n    while (listOfNew.length > 0) {\n      let newTableName = listOfNew[0].tableName;\n      let bulkList: IEntity[] = listOfNew\n        .filter((newEntitiy) => newEntitiy.tableName === newTableName)\n        .map((entity: { tableName: string; newEntitiy: IEntity }) => {\n          return entity.newEntitiy;\n        });\n      await saveNewFromList(newTableName, bulkList, fileName);\n      listOfNew = listOfNew.filter((entity) => entity.tableName !== newTableName);\n      setSucc(newMax - listOfNew.length);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Start Filereader \" + file.name);\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        let json = JSON.parse(content.toString());\n        console.log(\"Json loaded from \" + file.name);\n        scanImportFile(json, file.name);\n      }\n    };\n    fileReader.readAsText(file);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file]);\n\n  return (\n    <FileWrapper>\n      {file.name} {succCount}/{maxCount}\n      <ProgressBar\n        completed={Math.round((succCount / maxCount) * 100)}\n        isLabelVisible={false}\n        bgcolor={\"#F55C5C\"}\n        height={\"5px\"}\n        margin={\"5px\"}\n      />\n    </FileWrapper>\n  );\n};\n\nconst Files = styled.div`\n  flex: 1 1 100%;\n`;\n\nconst FileWrapper = styled.div`\n  width: clac(100% - 20px);\n  height: 50px;\n  padding: 10px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport StringField from \"../form_elements/StringField\";\n\nconst DiscordOptions = () => {\n  const [webhook, setWebhook] = useState<string>(localStorage.getItem(\"webhook\") + \"\");\n  const [webhookUser, setWebhookUser] = useState<string>(localStorage.getItem(\"webhook_user\") + \"\");\n\n  useEffect(() => {\n    if (webhook !== localStorage.getItem(\"webhook\")) localStorage.setItem(\"webhook\", webhook);\n  }, [webhook]);\n\n  useEffect(() => {\n    if (webhookUser !== localStorage.getItem(\"webhook_user\"))\n      localStorage.setItem(\"webhook_user\", webhookUser);\n  }, [webhookUser]);\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Discord Webhook</SelectionTitle>\n        <StringField value={webhookUser} label=\"PlayerName\" onChange={setWebhookUser} />\n        <StringField value={webhook} label=\"Webhook\" onChange={setWebhook} />\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default DiscordOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import Education from \"../data/Education\";\nimport IEntity from \"../data/IEntity\";\nimport Power from \"../data/Power\";\nimport Race from \"../data/Race\";\nimport Spell from \"../data/Spell\";\nimport {\n  SpellSource,\n  SpellRite,\n  SpellDuration,\n  SpellRange,\n  SpellSchool,\n  SpellTarget,\n  SpellDrainType,\n  SpellLevel,\n  SpellCastTime,\n  SpellDamage,\n  SpellScalingEffect,\n  SpellAoeRadius,\n  SpellDirectEffects,\n  SpellProjectileType,\n  SpellProjectileNumber,\n  SpellDamageType,\n  SpellTargetingType,\n  SpellLosRange,\n  SpellSize,\n  SpellPureDamage,\n  SpellHp,\n} from \"../data/SpellValues\";\nimport Talent from \"../data/Talent\";\nimport { saveNewFromList } from \"./DatabaseService\";\n\nexport const scanImportedSpellCsv = (csv: Array<any>, filename: string) => {\n  let listOfSpells: Array<Spell> = [];\n  console.log(\"Raw\", csv);\n  csv.slice(1).forEach((row: Array<string>) => {\n    if (row.length > 1) {\n      let newSpell = new Spell(\n        0,\n        row[0],\n        SpellSource.find(row[1]),\n        SpellCastTime.find(row[24]),\n        SpellRite.find(row[4]),\n        SpellDuration.find(row[23]),\n        \"\",\n        SpellRange.find(row[7]),\n        SpellSchool.find(row[25]),\n        row[27],\n        row[28],\n        row[31],\n        0,\n        +row[29],\n        SpellScalingEffect.find(row[12]),\n        SpellTarget.find(row[3]),\n        SpellAoeRadius.find(row[9]),\n        [\n          SpellDamage.find(row[13]),\n          SpellDamage.find(row[14]),\n          SpellDamage.find(row[15]),\n        ],\n        SpellDirectEffects.find(row[19]),\n        SpellLevel.find(row[2]),\n        SpellProjectileType.find(row[10]),\n        SpellProjectileNumber.find(row[11]),\n        SpellDamageType.find(row[17]),\n        SpellTargetingType.find(row[16]),\n        SpellLosRange.find(row[8]),\n        SpellDrainType.find(row[22]),\n        SpellPureDamage.find(row[18]),\n        SpellSize.find(row[21]),\n        SpellHp.find(row[20]),\n        row[30]?.toLowerCase() === \"yes\" ? true : false,\n        row[6]?.toLowerCase() === \"yes\" ? true : false,\n        row[5]?.toLowerCase() === \"yes\" ? true : false\n      );\n      listOfSpells.push(Spell.calcDrain(newSpell));\n    }\n  });\n  console.log(\"Processed Spells\", listOfSpells);\n  saveInDB(\"spells\", listOfSpells, filename);\n};\n\nexport const scanImportedRaceCsv = (csv: Array<any>, filename: string) => {\n  let listOfRaces: Array<Race> = [];\n  console.log(\"Raw\", csv);\n  csv.slice(1).forEach((row: Array<string>) => {\n    if (row.length > 1) {\n      const talents = row[6].split(\",\").map((t) => t.trim());\n      const flaws = row[7].split(\",\").map((t) => t.trim());\n      let newRace = new Race(\n        0,\n        row[0],\n        +row[1],\n        +row[9],\n        row[4],\n        row[3],\n        +row[2],\n        talents,\n        flaws,\n        row[5],\n        +row[8]\n      );\n      listOfRaces.push(newRace);\n    }\n  });\n  console.log(\"Processed Races\", listOfRaces);\n  saveInDB(\"races\", listOfRaces, filename);\n};\n\nexport const scanImportedTalentCsv = (csv: Array<any>, filename: string) => {\n  let listOfTalents: Array<Talent> = [];\n  console.log(\"Raw\", csv);\n  csv.slice(1).forEach((row: Array<string>) => {\n    if (row.length > 1) {\n      let newTalent = new Talent(\n        0,\n        row[0],\n        row[9],\n        row[2] === \"Flaw\",\n        row[2] === \"Flaw\" ? +row[4] : +row[3],\n        row[5],\n        row[6],\n        row[7],\n        row[8]\n      );\n      listOfTalents.push(newTalent);\n    }\n  });\n  console.log(\"Processed Talents\", listOfTalents);\n  saveInDB(\"talents\", listOfTalents, filename);\n};\n\nexport const scanImportedEducationCsv = (csv: Array<any>, filename: string) => {\n  let listOfEducations: Array<Education> = [];\n  console.log(\"Raw\", csv);\n  csv.slice(1).forEach((row: Array<string>) => {\n    if (row.length > 1) {\n      const kowledgeskills = row[2].split(\",\").map((t) => t.trim());\n      const skills = row[3].split(\",\").map((t) => t.trim());\n      let newEducation = new Education(\n        0,\n        row[0],\n        row[1],\n        [...skills, ...kowledgeskills],\n        row[5],\n        row[4]\n      );\n      listOfEducations.push(newEducation);\n    }\n  });\n  console.log(\"Processed Educations\", listOfEducations);\n  saveInDB(\"educations\", listOfEducations, filename);\n};\n\nexport const scanImportedPowerCsv = (csv: Array<any>, filename: string) => {\n  let listOfPowers: Array<Power> = [];\n  console.log(\"Raw\", csv);\n  csv.slice(1).forEach((row: Array<string>) => {\n    if (row.length > 1) {\n      let newPower = new Power(\n        0,\n        row[0],\n        row[8] === \"-\",\n        row[7],\n        +row[2],\n        row[3],\n        row[4],\n        row[5] === \"Active\",\n        row[9],\n        row[6]\n      );\n      listOfPowers.push(newPower);\n    }\n  });\n  console.log(\"Processed Powers\", listOfPowers);\n  saveInDB(\"powers\", listOfPowers, filename);\n};\n\nexport const saveInDB = async (\n  tablename: string,\n  listOfIEntity: Array<IEntity>,\n  filename: string\n) => {\n  let listOfNew = [...listOfIEntity];\n  await saveNewFromList(tablename, listOfNew, filename);\n  console.log(\"Done saving\");\n};\n\n// export const parseRowEntry = (entry: string): number => {\n//   return parseInt(\n//     entry.replaceAll(\"€\", \"\").trim().replaceAll(\".\", \"\").replaceAll(\",\", \"\")\n//   );\n// };\n\n// export const updateListsWith = (bookeeEntryJson: BookeeEntry[]) => {\n//   bookeeEntryJson.forEach((entry: BookeeEntry) => {\n//     reciveAllByAttributes(\n//       \"[dateDay+dateMonth+dateYear]\",\n//       [[entry.dateDay, entry.dateMonth, entry.dateYear]],\n//       (data: any[]) => {\n//         let isPresent = false;\n//         data.forEach((dat: any) => {\n//           const compDat = { ...dat };\n//           delete compDat[\"id\"];\n//           if (JSON.stringify(compDat) === JSON.stringify(entry))\n//             isPresent = true;\n//         });\n//         if (!isPresent) {\n//           console.log(\n//             `New Entry on ${\n//               (entry.dateDay, entry.dateMonth, entry.dateYear)\n//             } will be saved.`\n//           );\n//           saveNew(entry);\n//         }\n//       }\n//     );\n//   });\n// };\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst SpellsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Spells?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"spells\", \"SkirmishTome_Spells.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Spells?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"spells\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all Spells`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"Spells\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SpellsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-align: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst RacesOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Races?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"races\", \"SkirmishTome_Races.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Races?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"races\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all Races`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"Races\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default RacesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { exportAll } from \"../../services/OptionService\";\nimport {\n  deleteAll,\n  reciveAll,\n  reciveCount,\n} from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport P2PReciver from \"../p2p/P2PReciver\";\n\nimport Talent, { isTalent } from \"../../data/Talent\";\n\nimport { faFileExport, faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../general_elements/TabBar\";\nimport IconButton from \"../form_elements/IconButton\";\nimport TalentTile from \"../entities/talents/TalentTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport TalentsOptions from \"./TalentsOptions\";\nimport ImportField, { ImportModus } from \"../form_elements/ImportField\";\nimport DiscordOptions from \"./DiscordOptions\";\nimport { useCSVDownloader, usePapaParse } from \"react-papaparse\";\nimport FileField from \"../form_elements/FileField\";\nimport { scanImportedTalentCsv, scanImportedPowerCsv, scanImportedRaceCsv, scanImportedSpellCsv, scanImportedEducationCsv } from \"../../services/CsvService\";\nimport Spell from \"../../data/Spell\";\nimport Race from \"../../data/Race\";\nimport SpellsOptions from \"./SpellsOptions\";\nimport RacesOptions from \"./RacesOptions\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [talentAmount, setTalentAmount] = useState<number>(0);\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  const { readString } = usePapaParse();\n  const { CSVDownloader, Type } = useCSVDownloader();\n  const [csvBackup, setBackup] = useState<any>();\n\n  const handleSpellCsvUpload = (files: any) => {\n    const file: File = files[0];\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        readString(content.toString(), {\n          worker: true,\n          complete: (results) => {\n            console.log(\"Csv loaded from \" + file.name);\n            const csv: Array<any> = results.data;\n            console.log(csv);\n            scanImportedSpellCsv(csv, file.name);\n            console.log(\"---------\");\n          },\n        });\n      }\n    };\n    fileReader.readAsText(file);\n  };\n\n  const handlePowersCsvUpload = (files: any) => {\n    const file: File = files[0];\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        readString(content.toString(), {\n          worker: true,\n          complete: (results) => {\n            console.log(\"Csv loaded from \" + file.name);\n            const csv: Array<any> = results.data;\n            console.log(csv);\n            scanImportedPowerCsv(csv, file.name);\n            console.log(\"---------\");\n          },\n        });\n      }\n    };\n    fileReader.readAsText(file);\n  };\n\n  const handleEducationsCsvUpload = (files: any) => {\n    const file: File = files[0];\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        readString(content.toString(), {\n          worker: true,\n          complete: (results) => {\n            console.log(\"Csv loaded from \" + file.name);\n            const csv: Array<any> = results.data;\n            console.log(csv);\n            scanImportedEducationCsv(csv, file.name);\n            console.log(\"---------\");\n          },\n        });\n      }\n    };\n    fileReader.readAsText(file);\n  };\n\n  const handleTalentsCsvUpload = (files: any) => {\n    const file: File = files[0];\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        readString(content.toString(), {\n          worker: true,\n          complete: (results) => {\n            console.log(\"Csv loaded from \" + file.name);\n            const csv: Array<any> = results.data;\n            console.log(csv);\n            scanImportedTalentCsv(csv, file.name);\n            console.log(\"---------\");\n          },\n        });\n      }\n    };\n    fileReader.readAsText(file);\n  };\n\n  const handleRacesCsvUpload = (files: any) => {\n    const file: File = files[0];\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        readString(content.toString(), {\n          worker: true,\n          complete: (results) => {\n            console.log(\"Csv loaded from \" + file.name);\n            const csv: Array<any> = results.data;\n            console.log(csv);\n            scanImportedRaceCsv(csv, file.name);\n            console.log(\"---------\");\n          },\n        });\n      }\n    };\n    fileReader.readAsText(file);\n  };\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"talents\", (result: number) => {\n        setTalentAmount(result);\n      });\n      let backup: any[] = [];\n      reciveAll(\"spells\", (result: any[]) => {\n        setSpellAmount(result.length);\n        backup.push([\"Spell\"].concat(Object.keys(new Spell())));\n        result.forEach((spell: Spell) => {\n          backup.push([\"\"].concat(Spell.makeCsv(spell)));\n        });\n      });\n      reciveAll(\"talents\", (result: any[]) => {\n        setTalentAmount(result.length);\n        backup.push([\"Talent\"].concat(Object.keys(new Talent())));\n        result.forEach((talent: Talent) => {\n          backup.push([\"\"].concat(Talent.makeCsv(talent)));\n        });\n      });\n      reciveAll(\"races\", (result: any[]) => {\n        setRaceAmount(result.length);\n        backup.push([\"Race\"].concat(Object.keys(new Race())));\n        result.forEach((race: Race) => {\n          backup.push([\"\"].concat(Race.makeCsv(race)));\n        });\n      });\n      setBackup(backup);\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isTalent(entity)) {\n      return <TalentTile key={index} talent={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  return (\n    <>\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <ImportField modus={ImportModus.NORMAL} />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAll(\"SkirmishTome_all.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <TabBar\n        children={[\n          \"General\",\n          \"Spells\",\n          \"Races\",\n          \"Talents\",\n          \"Discord\",\n          \"Receive\",\n          \"CSV Imports\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Spells\" && (\n        <SpellsOptions\n          amount={spellAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Races\" && (\n        <RacesOptions amount={raceAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Talents\" && (\n        <TalentsOptions\n          amount={talentAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Discord\" && <DiscordOptions />}\n      {activeTab === \"Receive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {activeTab === \"CSV Imports\" && (\n        <OptionTab>\n          <OptionSection>\n            <CSVDownloader\n              type={Type.Button}\n              filename={\n                \"CsvBackup_\" +\n                new Date().getFullYear() +\n                \".\" +\n                (new Date().getMonth() + 1)\n              }\n              bom={true}\n              config={{\n                delimiter: \";\",\n              }}\n              data={csvBackup}\n            >\n              Download\n            </CSVDownloader>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import Spell CSV</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              accept={\".csv\"}\n              icon={faFileImport}\n              onChange={(file) => handleSpellCsvUpload(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import Races CSV</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              accept={\".csv\"}\n              icon={faFileImport}\n              onChange={(file) => handleRacesCsvUpload(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import Talents CSV</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              accept={\".csv\"}\n              icon={faFileImport}\n              onChange={(file) => handleTalentsCsvUpload(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import Powers CSV</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              accept={\".csv\"}\n              icon={faFileImport}\n              onChange={(file) => handlePowersCsvUpload(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import Education CSV</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              accept={\".csv\"}\n              icon={faFileImport}\n              onChange={(file) => handleEducationsCsvUpload(file)}\n            />\n          </OptionSection>\n        </OptionTab>\n      )}\n      {/* {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })} */}\n    </>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-align: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { sendMessage } from \"../../services/DiscordService\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst SmallFormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20(`\" + (result - value) + \"`)\" + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <Link onClick={() => history.push(link)}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </Link>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <FormatedTextContainer>{formatedText}</FormatedTextContainer>;\n};\n\nexport default SmallFormatedText;\n\nconst FormatedTextContainer = styled.div`\n  padding: 5px;\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Talent from \"../../../data/Talent\";\nimport SmallFormatedText from \"../../general_elements/SmallFormatedText\";\n\ninterface $Props {\n  talent: Talent;\n}\n\nconst TalentTile = ({ talent }: $Props) => {\n  return (\n    <Tile to={\"/talent-detail/id/\" + talent.id} $isflaw={talent.isFlaw}>\n      <Cost>\n        <b>{talent.cost}</b>\n      </Cost>\n\n      <Name>\n        <b>{talent.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <Prop>{talent.type}</Prop>\n        <SmallFormatedText text={talent.prerequisite} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default TalentTile;\n\ntype type = {\n  $isflaw: boolean;\n};\n\nconst Tile = styled(Link)<type>`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  ${(props) => {\n    if (props.$isflaw) {\n      return `background-color: ${props.theme.input.backgroundColor};`;\n    } else {\n      return `background-color: ${props.theme.tile.backgroundColor};`;\n    }\n  }}\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n`;\n\nconst Cost = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: white;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n  }\n`;\n","import IEntity from \"./IEntity\";\n\nexport default class Power implements IEntity {\n  id?: number;\n  name: string;\n  isAdept: boolean;\n  path: string;\n  cost: number;\n  prerequisite: string;\n  effect: string;\n  type: boolean;\n  stress: string;\n  ticks: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    isAdept?: boolean,\n    path?: string,\n    cost?: number,\n    prerequisite?: string,\n    effect?: string,\n    type?: boolean,\n    stress?: string,\n    ticks?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.isAdept = isAdept || false;\n    this.path = path || \"\";\n    this.cost = cost || 0;\n    this.prerequisite = prerequisite || \"\";\n    this.effect = effect || \"\";\n    this.type = type || false;\n    this.stress = stress || \"\";\n    this.ticks = ticks || \"\";\n  }\n\n  static makeCsv = (power: Power): any[] => {\n    return [\n      power.id,\n      power.name,\n      power.ticks,\n    ];\n  };\n}\n\nexport function isPower(arg: any): arg is Power {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"number\";\n  const isFlawCheck =\n    arg.isFlaw !== undefined && typeof arg.isFlaw == \"boolean\";\n  const prerequisiteCheck =\n    arg.prerequisite !== undefined && typeof arg.prerequisite == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"boolean\";\n  const stressCheck = arg.stress !== undefined && typeof arg.stress == \"string\";\n  const triggerCheck =\n    arg.trigger !== undefined && typeof arg.trigger == \"string\";\n  const triggerFrequencyCheck =\n    arg.triggerFrequency !== undefined &&\n    typeof arg.triggerFrequency == \"string\";\n  const ticksCheck = arg.ticks !== undefined && typeof arg.ticks == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    costCheck &&\n    isFlawCheck &&\n    prerequisiteCheck &&\n    effectCheck &&\n    typeCheck &&\n    stressCheck &&\n    triggerCheck &&\n    triggerFrequencyCheck &&\n    ticksCheck\n  );\n}\n"],"sourceRoot":""}