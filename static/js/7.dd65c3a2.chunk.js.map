{"version":3,"sources":["../node_modules/peerjs/dist sync","components/form_elements/BackButton.tsx","components/general_elements/ToggleStyle.tsx","components/general_elements/Dialog.tsx","components/entities/random_tables/details/RandomTableEditView.tsx","components/entities/random_tables/details/RandomTableView.tsx","components/form_elements/NumberField.tsx","components/form_elements/TextField.tsx","components/form_elements/CheckField.tsx","components/entities/talents/details/TalentEditView.tsx","components/entities/talents/details/TalentView.tsx","components/general_elements/details/EntityDetail.tsx","components/general_elements/ErrorTile.tsx","components/general_elements/details/ToEntity.tsx","database/MyDatabase.tsx","services/DatabaseService.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","data/Talent.tsx","hooks/webhookHook.tsx","services/DiscordService.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","services/DiceService.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/FormatedText.tsx","data/RandomTable.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","BackButton","icon","transform","action","Back","onClick","Icon","styled","FontAwesomeIcon","theme","main","highlight","buttons","color","div","height","ToggleLeft","hoverColor","ToggleRight","EditToggle","props","mode","backgroundColor","tile","Dialog","message","confirmeText","confirmeClick","abortText","abortClick","DialogWrapper","Message","ButtonBar","TextButton","text","RandomTableEditView","randomTable","onEdit","onRowChange","field","value","index","rows","CenterWrapper","StringField","name","label","onChange","header","placeholder","map","row","RowWrapper","key","RowCount","cells","IconButton","faTrash","splice","removeRow","faPlus","RandomTableView","useState","rand","setRand","Name","View","faDice","max","lastRowValues","length","includes","trim","split","Math","round","random","rollForRandom","Prop","faArrowRight","range","min","FormatedText","TableHeadProp","cell","TableProp","th","input","td","NumberField","step","Field","LabelText","Input","type","target","TextField","textarea","undefined","CheckField","defaultChecked","checked","Checkmark","TalentEditView","talent","FieldGroup","isFlaw","cost","stress","prerequisite","faBookOpen","effect","TalentView","webhook","useWebhook","json","setJson","send","setSend","useEffect","newJson","username","embeds","author","fields","inline","formatDiscordText","JSON","stringify","Cost","PropWrapper","Text","style","faDiscord","sendEmbedMessage","faPaperPlane","P2PSender","data","EntityDetail","entity","tableName","isNew","view","editMode","setMode","entityObj","editEntity","showDeleteDialog","setDeleteDialog","showAlert","setAlert","setMessage","unsavedChanges","setUnsavedChanges","history","useHistory","updateEntity","msg","updateWithCallback","result","setTimeout","editAndSaveEntity","views","faExclamationTriangle","remove","goBack","TopBar","faArrowLeft","toString","faSave","obj","newObj","createNewWithId","duplicateEntity","faClone","entityId","React","createElement","toLocaleLowerCase","ErrorTile","buttonText","onButton","Tile","PropTitle","faPlusCircle","boxShadow","headerColor","span","backgroundColorLink","ToEntity","match","entityName","setEntityName","setEntity","loading","setLoading","error","setError","makeEntity","useCallback","a","newEntity","params","recivePromiseByAttribute","recivePromise","newMatch","path","filter","replaceAll","str","entities","Talent","randomTables","RandomTable","Loading","push","createNewEntity","charAt","toUpperCase","slice","MyAppDatabase","talents","version","stores","table","Dexie","callback","db","open","then","update","finally","close","saveNew","filename","put","prom","saveNewFromList","refinedEntities","bulkPut","delete","reciveAll","toArray","array","reciveCount","count","reciveCountPromise","where","equalsIgnoreCase","get","recivePromiseByAttributeCount","equals","reciveAllPromise","applyFilters","filters","test","forEach","fieldName","Array","hasTag","fieldPart","toLowerCase","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAttributeSelectionPromise","attribute","orderBy","uniqueKeys","deleteAll","clear","exportFilteredFromTable","all","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","document","download","href","encodeURIComponent","body","appendChild","click","removeChild","floatLeft","disabled","SimpleButton","left","DisabledSimpleButton","button","this","isTalent","arg","nameCheck","costCheck","isFlawCheck","prerequisiteCheck","effectCheck","typeCheck","stressCheck","localStorage","getItem","hook","sendMessage","content","avatar","request","XMLHttpRequest","setRequestHeader","avatar_url","console","log","_toConsumableArray","arr","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","rollCommand","commands","krit","newCommands","command","multiplier","startsWith","parseInt","rollDie","size","LinkCheck","entitiyFound","newType","faMeteor","faIdCard","faDragon","faMapMarkedAlt","faTable","formatIcon","formatedText","setFormatedText","cut","cutStart","cutEnd","substr","rollDiscord","newCommand","fail","rollString","formatLink","parts","formattedParts","part","codePart","linkParts","linkEntity","TextPart","DiscordPart","link","Link","formatTable","textPart","tableRows","isHead","formatText","indexOf","FormatedTextContainer","float","padding","setName","peer","setPeer","brokerId","password","characters","i","floor","generateBrokerId","newPeer","Peer","host","secure","on","conn","errorData","disconnected","destroyed","reconnect","results","faExclamationCircle"],"mappings":"+FAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,uiBCKzB,IAQeC,EARI,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,UAAWC,EAAqB,EAArBA,OACrC,OACE,kBAACC,EAAD,CAAMC,QAASF,GACb,kBAACG,EAAD,CAAML,KAAMA,EAAMC,UAAWA,MAO7BI,EAAOC,YAAOC,IAAPD,CAAH,KAMC,qBAAGE,MAAkBC,KAAKC,aAExB,qBAAGF,MAAkBG,QAAQC,SAIpCT,EAAOG,IAAOO,IAAV,KAEU,qBAAGL,MAAkBG,QAAQG,U,ovBCnC1C,IAAMC,EAAaT,IAAOO,IAAV,KAIX,qBAAGL,MAAkBG,QAAQG,UACxB,qBAAGN,MAAkBG,QAAQG,UASjC,qBAAGN,MAAkBG,QAAQK,cAI7BC,EAAcX,YAAOS,EAAPT,CAAH,KAUXY,EAAaZ,IAAOO,IAAV,KAEX,qBAAGL,MAAkBG,QAAQG,UAE9B,qBAAGN,MAAkBG,QAAQC,QAEpCG,GACoB,SAACI,GACnB,MAAmB,SAAfA,EAAMC,KACD,qBAAGZ,MAAkBG,QAAQU,iBAE7B,qBAAGb,MAAkBc,KAAKD,mBAKrCJ,GACoB,SAACE,GACnB,MAAmB,SAAfA,EAAMC,KACD,qBAAGZ,MAAkBG,QAAQU,iBAE7B,qBAAGb,MAAkBc,KAAKD,oB,miBCnCzC,IAqBeE,EArBA,SAAC,GAOD,IANbC,EAMY,EANZA,QACAxB,EAKY,EALZA,KACAyB,EAIY,EAJZA,aACAC,EAGY,EAHZA,cACAC,EAEY,EAFZA,UACAC,EACY,EADZA,WAEA,OACE,kBAACC,EAAD,KACE,kBAACC,EAAD,KACG9B,EAAO,kBAAC,EAAD,CAAMA,KAAMA,IAAW,GADjC,IACsCwB,GAEtC,kBAACO,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,KAAMN,EAAWvB,QAASwB,IACtC,kBAACI,EAAA,EAAD,CAAYC,KAAMR,EAAcrB,QAASsB,OAQ3CG,EAAgBvB,IAAOO,IAAV,KAOG,qBAAGL,MAAkBc,KAAKD,mBACrC,qBAAGb,MAAkBc,KAAKV,SAG/BkB,EAAUxB,IAAOO,IAAV,KAKPkB,EAAYzB,IAAOO,IAAV,KAITR,EAAOC,YAAOC,IAAPD,CAAH,K,kjCC9CV,IAoEe4B,EApEa,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,OACpCC,EAAc,SAACC,EAAeC,EAAeC,GACjD,IAAIC,EAAON,EAAYM,KACvBA,EAAKD,GAAL,2BAAmBC,EAAKD,IAAxB,kBAAiCF,EAAQC,IACzCH,EAAO,2BAAKD,GAAN,IAAmBM,KAAMA,MAkBjC,OACE,kBAACC,EAAD,KACE,kBAAC,EAAD,KACE,kBAACC,EAAA,EAAD,CACEJ,MAAOJ,EAAYS,KACnBC,MAAM,OACNC,SAAU,SAACF,GAAD,OAAUR,EAAO,2BAAKD,GAAN,IAAmBS,KAAMA,QAErD,kBAACD,EAAA,EAAD,CACEJ,MAAOJ,EAAYY,OACnBF,MAAM,SACNC,SAAU,SAACF,GAAD,OAAUR,EAAO,2BAAKD,GAAN,IAAmBY,OAAQH,MACrDI,YAAa,4BAGjB,kBAAC,EAAD,KACGb,EAAYM,KAAKQ,KAChB,SAACC,EAAuCV,GACtC,OACE,kBAACW,EAAD,CAAYC,IAAKZ,GACf,kBAACa,EAAD,KAAWb,GACX,kBAACG,EAAA,EAAD,CACEJ,MAAOW,EAAIX,MACXM,MAAO,cAAgBL,EACvBM,SAAU,SAACb,GAAD,OAAUI,EAAY,QAASJ,EAAMO,IAC/CQ,YAAW,UAAKR,EAAQ,EAAb,aAEb,kBAACG,EAAA,EAAD,CACEJ,MAAOW,EAAII,MACXT,MAAO,OAASL,EAChBM,SAAU,SAACb,GAAD,OAAUI,EAAY,QAASJ,EAAMO,IAC/CQ,YAAW,eAAUR,EAAV,yBAAgCA,EAAhC,UAEb,kBAACe,EAAA,EAAD,CAAYvD,KAAMwD,IAASpD,QAAS,kBAzChC,SAACoC,GACjB,IAAIC,EAAON,EAAYM,MACR,IAAXD,IACFC,EAAKgB,OAAOjB,EAAO,GACnBJ,EAAO,2BAAKD,GAAN,IAAmBM,KAAMA,MAqCqBiB,CAAUlB,UAK5D,kBAACW,EAAD,KACE,kBAACI,EAAA,EAAD,CAAYvD,KAAM2D,IAAQvD,QAAS,WArDzCgC,EAAO,2BACFD,GADC,IAEJM,KAAK,GAAD,mBAAMN,EAAYM,MAAlB,CAAwB,CAAEF,MAAO,GAAIe,MAAO,gBA4DhDZ,EAAgBpC,IAAOO,IAAV,KASb+C,EAAkBtD,IAAOO,IAAV,KACV,qBAAGL,MAAkBc,KAAKV,SAc/BuC,EAAa7C,IAAOO,IAAV,KAYVwC,EAAW/C,IAAOO,IAAV,KACH,qBAAGL,MAAkBc,KAAKV,SACf,qBAAGJ,MAAkBc,KAAKD,mB,6hDC5GhD,IA+FeuC,GA/FS,SAAC,GAA6B,IAA3BzB,EAA0B,EAA1BA,YAA0B,EAC3B0B,oBAAkB,GADS,mBAC5CC,EAD4C,KACtCC,EADsC,KAoBnD,OACE,kBAAC,GAAD,KACE,kBAACC,GAAD,KACE,2BAAI7B,EAAYS,OAElB,kBAACqB,GAAD,KACE,kBAACjC,EAAA,EAAD,CACEC,KAAM,OACNjC,KAAMkE,IACN9D,QAAS,kBA1BK,WACpB,IACI+D,EAAM,GACJC,EAAgBjC,EAAYM,KAAKN,EAAYM,KAAK4B,OAAS,GAAG9B,MACpE,GAAI6B,EAAcE,SAAS,KAEzBH,GADYC,EAAcG,OAAOC,MAAM,KAC1B,QACR,GAAIJ,EAAcE,SAAS,UAAM,CAEtCH,GADYC,EAAcG,OAAOC,MAAM,UAC1B,QAEbL,GAAOC,EAET,IAAMN,EAAOW,KAAKC,MAZN,EAYkBD,KAAKE,UAAYR,EAZnC,IAaZJ,EAAQD,GAYac,MAEhBd,GAAQ,GACP,kBAACe,GAAD,KACGf,EADH,IACS,kBAAC,GAAD,CAAM9D,KAAM8E,MAClB3C,EAAYM,KAAKQ,KAAI,SAACC,GACrB,GAAIA,EAAIX,MAAM+B,SAAS,KAAM,CAC3B,IAAIS,EAAQ7B,EAAIX,MAAMgC,OAAOC,MAAM,KAC7BQ,GAAeD,EAAM,GACrBZ,GAAeY,EAAM,GAC3B,GAAIC,GAAOlB,GAAQA,GAAQK,EACzB,OAAO,kBAACc,EAAA,EAAD,CAAchD,KAAMiB,EAAII,aAC5B,GAAIJ,EAAIX,MAAM+B,SAAS,UAAM,CAClC,IAAIS,EAAQ7B,EAAIX,MAAMgC,OAAOC,MAAM,UAC7BQ,GAAeD,EAAM,GACrBZ,GAAeY,EAAM,GAC3B,GAAIC,GAAOlB,GAAQA,GAAQK,EACzB,OAAO,kBAACc,EAAA,EAAD,CAAchD,KAAMiB,EAAII,YAC5B,CAEL,IADqBJ,EAAIX,QACLuB,EAClB,OAAO,kBAACmB,EAAA,EAAD,CAAchD,KAAMiB,EAAII,QAEnC,OAAO,0CAKf,kBAACW,GAAD,KACE,+BACE,+BACE,4BACE,kBAACiB,GAAD,eACC/C,EAAYY,QACXZ,EAAYY,OACTyB,MAAM,KACNvB,KAAI,SAACkC,EAAc3C,GAClB,OAAO,kBAAC0C,GAAD,CAAe9B,IAAKZ,GAAQ2C,OAG1ChD,EAAYM,MACXN,EAAYM,KAAKQ,KACf,SAACC,EAAuCV,GACtC,OACE,wBAAIY,IAAKZ,GACP,kBAAC4C,GAAD,CAAWhC,IAAKZ,GAAQU,EAAIX,OAC3BW,EAAII,MACFkB,MAAM,KACNvB,KAAI,SAACkC,EAAc3C,GAClB,OACE,kBAAC4C,GAAD,CAAWhC,IAAKZ,GACd,kBAACyC,EAAA,EAAD,CAAchD,KAAMkD,iBAiB5CzC,GAAgBpC,IAAOO,IAAV,MASboD,GAAO3D,IAAOO,IAAV,MACC,qBAAGL,MAAkBc,KAAKV,SAe/BoD,GAAO1D,IAAOO,IAAV,MAMC,qBAAGL,MAAkBc,KAAKV,SAGf,qBAAGJ,MAAkBc,KAAKD,mBAG1C6D,GAAgB5E,IAAO+E,GAAV,MACG,qBAAG7E,MAAkB8E,MAAMjE,mBACtC,qBAAGb,MAAkB8E,MAAM1E,SAKhCwE,GAAY9E,IAAOiF,GAAV,KACO,qBAAG/E,MAAkB8E,MAAMjE,mBACtC,qBAAGb,MAAkB8E,MAAM1E,SAMhCiE,GAAOvE,IAAOO,IAAV,KACY,qBAAGL,MAAkB8E,MAAMjE,mBACtC,qBAAGb,MAAkB8E,MAAM1E,SAO1B,qBAAGJ,MAAkBG,QAAQG,UACxB,qBAAGN,MAAkBG,QAAQG,UAGxCT,GAAOC,YAAOC,IAAPD,CAAH,KAKC,qBAAGE,MAAkBC,KAAKC,a,i4BCnKrC,IA2Be8E,GA3BK,SAAC,GAAoE,IAAlEjD,EAAiE,EAAjEA,MAAO4B,EAA0D,EAA1DA,IAAKsB,EAAqD,EAArDA,KAAM5C,EAA+C,EAA/CA,MAAO7C,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAW6C,EAAuB,EAAvBA,SAC/D,OACE,kBAAC4C,GAAD,KACE,kBAACC,GAAD,KACG3F,EAAO,kBAAC,GAAD,CAAMA,KAAMA,EAAMC,UAAWA,IAAgB,GADvD,IAC4D4C,GAE3DsB,GACC,kBAACyB,GAAD,CACEC,KAAK,SACL1B,IAAKA,EACLsB,KAAMA,GAAc,EACpBlD,MAAOA,EACPO,SAAU,SAACvD,GAAD,OAAOuD,GAAUvD,EAAEuG,OAAOvD,WAGtC4B,GACA,kBAACyB,GAAD,CACEC,KAAK,SACLJ,KAAMA,GAAc,EACpBlD,MAAOA,EACPO,SAAU,SAACvD,GAAD,OAAOuD,GAAUvD,EAAEuG,OAAOvD,YASxCmD,GAAQpF,IAAOuC,MAAV,MACA,qBAAGrC,MAAkBc,KAAKV,SACf,qBAAGJ,MAAkBc,KAAKD,mBAe1ChB,GAAOC,YAAOC,IAAPD,CAAH,MAMC,qBAAGE,MAAkBC,KAAKC,aAG/BiF,GAAYrF,IAAOO,IAAV,MAIT+E,GAAQtF,IAAOgF,MAAV,MAOW,qBAAG9E,MAAkB8E,MAAMjE,mBACtC,qBAAGb,MAAkB8E,MAAM1E,S,g7BCpEtC,IAWemF,GAXG,SAAC,GAAiE,IAA/DxD,EAA8D,EAA9DA,MAAOM,EAAuD,EAAvDA,MAAO/B,EAAgD,EAAhDA,OAAQd,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAW6C,EAAuB,EAAvBA,SAC1D,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACG9C,EAAO,kBAAC,GAAD,CAAMA,KAAMA,EAAMC,UAAWA,IAAgB,GADvD,IAC4D4C,GAE5D,kBAAC,GAAD,CAAO/B,OAAQA,EAAQyB,MAAOA,EAAOO,SAAU,SAACvD,GAAD,OAAOuD,EAASvD,EAAEuG,OAAOvD,YAOxEmD,GAAQpF,IAAOuC,MAAV,MACA,qBAAGrC,MAAkBc,KAAKV,SACf,qBAAGJ,MAAkBc,KAAKD,mBAe1ChB,GAAOC,YAAOC,IAAPD,CAAH,MAMC,qBAAGE,MAAkBC,KAAKC,aAG/BiF,GAAYrF,IAAOO,IAAV,MAWT+E,GAAQtF,IAAO0F,SAAV,MAKC,gBAAGlF,EAAH,EAAGA,OAAH,YAA4BmF,IAAXnF,EAAuBA,EAAS,UAC7C,gBAAGA,EAAH,EAAGA,OAAH,YAA4BmF,IAAXnF,EAAuBA,EAAS,UAC3C,qBAAGN,MAAkB8E,MAAMjE,mBACtC,qBAAGb,MAAkB8E,MAAM1E,S,2jDC3DtC,IAgBesF,GAhBI,SAAC,GAAyD,IAAvD3D,EAAsD,EAAtDA,MAAOM,EAA+C,EAA/CA,MAAO7C,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,UAAW6C,EAAuB,EAAvBA,SACnD,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACG9C,EAAO,kBAAC,GAAD,CAAMA,KAAMA,EAAMC,UAAWA,IAAgB,GADvD,IAC4D4C,GAE5D,kBAAC,GAAD,CACEgD,KAAK,WACLM,eAAgB5D,EAChBO,SAAU,SAACvD,GAAD,OAAOuD,EAASvD,EAAEuG,OAAOM,YAErC,kBAACC,GAAD,QAOAX,GAAQpF,IAAOuC,MAAV,MACA,qBAAGrC,MAAkBc,KAAKV,SACf,qBAAGJ,MAAkBc,KAAKD,mBAiB1ChB,GAAOC,YAAOC,IAAPD,CAAH,MAMC,qBAAGE,MAAkBC,KAAKC,aAG/BiF,GAAYrF,IAAOO,IAAV,MAITwF,GAAY/F,IAAOO,IAAV,MAQO,qBAAGL,MAAkB8E,MAAMjE,mBACtC,qBAAGb,MAAkB8E,MAAM1E,SAsBhCgF,GAAQtF,IAAOgF,MAAV,KASKe,IACQ,qBAAG7F,MAAkBC,KAAKC,aACrC,qBAAGF,MAAkBG,QAAQC,QAG1ByF,I,8iBC9FhB,IAkDeC,GAlDQ,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQnE,EAAqB,EAArBA,OAChC,OACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACoE,GAAD,KACE,kBAAC7D,EAAA,EAAD,CACEJ,MAAOgE,EAAO3D,KACdC,MAAM,OACNC,SAAU,SAACF,GAAD,OAAUR,EAAO,2BAAKmE,GAAN,IAAc3D,KAAMA,QAEhD,kBAAC,GAAD,CACEL,QAASgE,EAAOE,OAChB5D,MAAM,WACNC,SAAU,SAAC2D,GAAD,OAAYrE,EAAO,2BAAKmE,GAAN,IAAcE,OAAQA,SAGtD,kBAACD,GAAD,KACE,kBAAC,GAAD,CACEjE,MAAOgE,EAAOG,KACd7D,MAAM,OACNC,SAAU,SAAC4D,GAAD,OAAUtE,EAAO,2BAAKmE,GAAN,IAAcG,KAAMA,QAEhD,kBAAC,GAAD,CACEnE,QAASgE,EAAOV,KAChBhD,MAAM,aACNC,SAAU,SAAC+C,GAAD,OAAUzD,EAAO,2BAAKmE,GAAN,IAAcV,KAAMA,SAGlD,kBAAClD,EAAA,EAAD,CACEJ,MAAOgE,EAAOI,OACd9D,MAAM,SACNC,SAAU,SAAC6D,GAAD,OAAYvE,EAAO,2BAAKmE,GAAN,IAAcI,OAAQA,QAEpD,kBAAC,GAAD,CACEpE,MAAOgE,EAAOK,aACd/D,MAAM,eACN7C,KAAM6G,IACN/D,SAAU,SAAC8D,GAAD,OAAkBxE,EAAO,2BAAKmE,GAAN,IAAcK,aAAcA,QAEhE,kBAAC,GAAD,CACErE,MAAOgE,EAAOO,OACdjE,MAAM,SACN7C,KAAM6G,IACN/D,SAAU,SAACgE,GAAD,OAAY1E,EAAO,2BAAKmE,GAAN,IAAcO,OAAQA,WAStDpE,GAAgBpC,IAAOO,IAAV,MAMb2F,GAAalG,IAAOO,IAAV,MAOVoD,GAAO3D,IAAOO,IAAV,MACC,qBAAGL,MAAkBc,KAAKV,S,4nDClErC,IAsFemG,GAtFI,SAAC,GAAwB,IAAtBR,EAAqB,EAArBA,OAChBS,EAAUC,eAD2B,EAEjBpD,mBAAiB,IAFA,mBAElCqD,EAFkC,KAE5BC,EAF4B,OAGjBtD,oBAAkB,GAHD,mBAGlCuD,EAHkC,KAG5BC,EAH4B,KAyCzC,OApCAC,qBAAU,WACR,QAAgBrB,IAAZe,EAAuB,CACzB,IAAIO,EAAU,CACZC,SAAUR,EAAQpE,KAAO,kBACzB6E,OAAQ,CACN,CACEC,OAAQ,CACN9E,KAAM2D,EAAO3D,MAEf+E,OAAQ,CACN,CACE/E,KAAM,OACNL,MAAOgE,EAAOG,KAAOH,EAAOG,KAAO,IACnCkB,QAAQ,GAEV,CACEhF,KAAM,SACNL,MAAOgE,EAAOV,KAAOU,EAAOI,OAAS,UACrCiB,QAAQ,GAEV,CACEhF,KAAM,eACNL,MAAOsF,aAAkBtB,EAAOK,eAElC,CACEhE,KAAM,SACNL,MAAOsF,aAAkBtB,EAAOO,aAM1CK,EAAQW,KAAKC,UAAUR,OAExB,CAAChB,EAAQS,IAGV,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAACgB,GAAD,KACE,2BAAIzB,EAAOG,OAGb,kBAAC,GAAD,KACE,2BAAIH,EAAO3D,OAGb,kBAACqF,GAAD,KACE,kBAAC,GAAD,KAAO1B,EAAOV,KAAOU,EAAOI,OAAS,YAEvC,kBAACuB,GAAD,KACE,kBAACjD,EAAA,EAAD,CAAchD,KAAMsE,EAAOK,gBAE7B,kBAACsB,GAAD,KACE,kBAACjD,EAAA,EAAD,CAAchD,KAAMsE,EAAOO,UAE7B,kBAACmB,GAAD,UACehC,IAAZe,GACC,kBAAChF,EAAA,EAAD,CACEmG,MAAO,CACL9G,gBAAiB,WAEnBY,KAAI,eAAUsE,EAAO3D,MACrB5C,KAAMoI,KACNhI,QAAS,kBAAMiI,aAAiBrB,EAASE,OAG3CE,GACA,kBAACpF,EAAA,EAAD,CACEC,KAAI,eAAUsE,EAAO3D,MACrB5C,KAAMsI,IACNlI,QAAS,kBAAMiH,GAAQ,QAGxBD,GAAQ,kBAACmB,GAAA,EAAD,CAAWC,KAAMjC,EAAQnF,KAAM,aAS9CsB,GAAgBpC,IAAOO,IAAV,MAMboD,GAAO3D,IAAOO,IAAV,MACC,qBAAGL,MAAkBc,KAAKV,SAQ/BoH,GAAO1H,IAAOO,IAAV,MAWY,qBAAGL,MAAkBc,KAAKD,mBAG1C2C,GAAO1D,IAAOO,IAAV,MASY,qBAAGL,MAAkBc,KAAKD,mBAG1C4G,GAAc3H,IAAOO,IAAV,MAUXgE,GAAOvE,IAAOO,IAAV,MAQY,qBAAGL,MAAkBc,KAAKD,mBAG1C6G,GAAO5H,IAAOO,IAAV,MAQY,qBAAGL,MAAkBc,KAAKD,mB,2pBC9IhD,IA8GeoH,GA9GM,SAAC,GAAgD,IAAD,IAA7CC,EAA6C,EAA7CA,OAAQC,EAAqC,EAArCA,UAAWC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,KAAmB,EACvChF,mBAAkB+E,GADqB,mBAC5DE,EAD4D,KAClDC,EADkD,OAGnClF,mBAAkB6E,GAHiB,mBAG5DM,EAH4D,KAGjDC,EAHiD,OAKvBpF,oBAAkB,GALK,mBAK5DqF,EAL4D,KAK1CC,EAL0C,OAMrCtF,oBAAkB,GANmB,mBAM5DuF,EAN4D,KAMjDC,EANiD,OAOrCxF,mBAAiB,IAPoB,mBAO5DrC,EAP4D,KAOnD8H,EAPmD,OAQvBzF,oBAAkB,GARK,mBAQ5D0F,EAR4D,KAQ5CC,EAR4C,KAS/DC,EAAUC,cAOdpC,qBAAU,WACJ0B,IAAcN,GAChBc,GAAkB,KAEnB,CAACR,EAAWN,IAEf,IAAMiB,EAAe,SAACX,EAAoBY,GACxCC,YAAmBlB,EAAWK,GAAW,SAACc,GACpCA,EAAS,GACXN,GAAkB,GAClBF,EAAWM,GACXP,GAAS,KAETC,EAAW,yBACXD,GAAS,IAEXU,YAAW,WACTV,GAAS,KACR,SAYDW,EAAoB,SAACtB,EAAiBkB,GAC1CX,EAAWP,GACXiB,EAAajB,EAAQkB,IAMjBK,EAAqB,CACzBlD,WAAYA,GACZT,eAAgBA,GAChB1C,gBAAiBA,GACjB1B,oBAAqBA,GAGvB,OACE,oCACGgH,GACC,kBAAC,EAAD,CACE1H,QAAO,iBAAYkH,EAAO9F,KAAnB,KACP5C,KAAMkK,IACNzI,aAAc,SACdC,cAAe,WACbyI,YAAOxB,EAAWD,EAAO5I,IACzB2J,EAAQW,UAEVzI,UAAW,OACXC,WAAY,WACVuH,GAAgB,MAItB,kBAACkB,GAAD,KACE,kBAAC,EAAD,CAAYrK,KAAMsK,IAAapK,OAAQ,kBAAMuJ,EAAQW,YACrD,kBAAClJ,EAAD,CAAYE,KAAM0H,EAASyB,YACzB,kBAACxJ,EAAD,CAAYX,QAAS,kBAAM2I,GAAQ,KAAnC,QACA,kBAAC9H,EAAD,CAAab,QAAS,kBAAM2I,GAAQ,KAApC,SAEDD,GAAYS,GAAkB,kBAAC,GAAD,CAAMvJ,KAAMkK,MAC1CpB,GACC,oCACE,kBAACvF,EAAA,EAAD,CACEnD,QAAS,kBAAMuJ,EAAaX,EAAW,sBACvChJ,KAAMwK,MAER,kBAACjH,EAAA,EAAD,CAAYnD,QAAS,kBArDP,SAACqK,GACvB,IAAIC,EAAM,eAAQD,UACXC,EAAO5K,GACd6K,YAAgBhC,EAAW+B,GAAQ,SAAC5K,GAClCkK,EAAkB,2BAAKtB,GAAN,IAAc9F,KAAM8F,EAAO9F,KAAO,aAAc,0BAiDhCgI,CAAgB5B,IAAYhJ,KAAM6K,MAC7D,kBAACtH,EAAA,EAAD,CAAYnD,QAAS,kBAjFT0K,EAiF4B9B,EAAUlJ,GAhF1DqK,YAAOxB,EAAWmC,QAClBrB,EAAQW,SAFW,IAACU,GAiF2C9K,KAAMwD,MAC5DhC,GAAW4H,GAAa,kBAAC,GAAD,KAAU5H,KAIxCsH,EACGiC,IAAMC,cAAcf,EAAMpB,EAAO,aAAjC,mBACGA,EAAKoC,oBAAsBjC,GAD9B,wBAEU,SAACzG,GAAD,OAAgB0G,EAAW1G,MAFrC,IAIAwI,IAAMC,cAAcf,EAAMpB,EAAO,SAAjC,mBACGA,EAAKoC,oBAAsBjC,GAD9B,wBAEU,SAACzG,GAAD,OAAgByH,EAAkBzH,EAAO,wBAFnD,MAUJ8H,GAAS/J,IAAOO,IAAV,MACD,qBAAGL,MAAkBc,KAAKV,SAc/BkB,GAAUxB,IAAOO,IAAV,MASPR,GAAOC,YAAOC,IAAPD,CAAH,MAMC,qBAAGE,MAAkBC,KAAKC,a,wsCClKrC,IAiBewK,GAjBG,SAAC,GAA4C,IAA1CjJ,EAAyC,EAAzCA,KAAMkJ,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,SACrC,OACE,kBAACC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kDAEF,kBAAC,GAAD,KACE,kBAACC,GAAD,eACCrJ,GAEH,kBAACD,EAAA,EAAD,CAAYC,KAAMkJ,EAAY/K,QAAS,kBAAMgL,KAAYpL,KAAMuL,SAQjEF,GAAO/K,IAAOO,IAAV,MAEC,qBAAGL,MAAkBc,KAAKV,SACf,qBAAGJ,MAAkBc,KAAKD,mBAGhC,qBAAGb,MAAkBc,KAAKkK,aAUpCxH,GAAO1D,IAAOO,IAAV,MAOC,qBAAGL,MAAkBc,KAAKmK,eAK/BxD,GAAc3H,IAAOO,IAAV,MASXyK,GAAYhL,IAAOoL,KAAV,MAEJ,qBAAGlL,MAAkBc,KAAKqK,uBAK/BzD,GAAO5H,IAAOO,IAAV,MAQY,qBAAGL,MAAkBc,KAAKD,mB,kBC4BjCuK,UA7FE,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MACdpC,EAAUC,cAD8C,EAExB7F,mBAAiB,IAFO,mBAErDiI,EAFqD,KAEzCC,EAFyC,OAGhClI,qBAHgC,mBAGrD6E,EAHqD,KAG7CsD,EAH6C,OAI9BnI,oBAAkB,GAJY,mBAIrDoI,EAJqD,KAI5CC,EAJ4C,OAKlCrI,oBAAkB,GALgB,mBAKrDsI,EALqD,KAK9CC,EAL8C,KAO5D9E,qBAAU,iBACOrB,IAAXyC,GAAwByD,KAC1BD,GAAW,GACXE,GAAS,GACTL,EAAc,IACdC,OAAU/F,MAGX,CAAC4F,IAEJ,IAAMQ,EAAaC,sBAAW,uCAC5B,WAAO1J,GAAP,eAAA2J,EAAA,yDACMC,OAAiCvG,OACXA,IAAtB4F,EAAMY,OAAO7J,KAFnB,gCAGsB8J,YAAyB9J,EAAO,IAAK,OAAQiJ,EAAMY,OAAO7J,MAHhF,OAGI4J,EAHJ,sBAI0BvG,IAApB4F,EAAMY,OAAO3M,GAJnB,gCAKsB6M,YAAc/J,EAAO,KAAMiJ,EAAMY,OAAO3M,IAL9D,OAKI0M,EALJ,cAMEN,GAAW,QACOjG,IAAduG,GACFT,EAAcnJ,GACdwJ,GAAS,KAETL,EAAcnJ,GACdoJ,EAAUQ,IAZd,4CAD4B,sDAgB5B,CAACX,IAGHvE,qBAAU,WACR,QAAcrB,IAAV4F,QAAkC5F,IAAXyC,EAAsB,CAC/C,IAAIkE,EAAmBf,EAAMgB,KAC1BrI,MAAM,KACNsI,QAAO,SAACjB,GAAD,OAAmBA,EAAMvH,SAAS,cAAY,GACrDyI,WAAW,UAAW,SACR9G,IAAb2G,GACFP,EAAWO,MAGd,CAACf,EAAOQ,EAAY3D,IAMvB,IAaoBsE,EAbdC,EAA0B,CAC9B1G,OAAQ,IAAI2G,KAAO,EAAGrB,EAAMY,OAAO7J,MACnCuK,aAAc,IAAIC,KAAY,EAAGvB,EAAMY,OAAO7J,OAehD,OACE,oCACGqJ,GAAW,kBAACoB,GAAA,EAAD,OACVpB,GAAWE,GACX,kBAAC,GAAD,CACElK,KAAM,wDACNkJ,WAAY,MACZC,SAAU,kBAnBM,WACtB,IAAIoB,EAAqBS,EAASnB,UAC3BU,EAAU1M,GACjB6K,YAAgBmB,EAAa,IAAKU,GAAW,SAAC1M,GAC5C2J,EAAQ6D,KAAR,WAAiBxB,EAAjB,sBAAyChM,OAerByN,MAGlBpB,GAAUF,QAAsBhG,IAAXyC,EAQrB,qCAPA,kBAAC,GAAD,CACEA,OAAQA,EACRC,UAAWmD,EAAa,IACxBlD,MAAuB,KAAhBF,EAAO9F,KACdiG,MAnBYmE,EAmBKlB,EAlBhBkB,EAAIQ,OAAO,GAAGC,cAAgBT,EAAIU,MAAM,S,6nBChFtCC,EAAb,kDAIE,aAAe,IAAD,8BACZ,cAAM,mBAJRR,kBAGc,IAFdS,aAEc,EAEZ,EAAKC,QAAQ,GAAGC,OAAO,CACrBF,QAAS,+DACTT,aAAc,uCAGhB,EAAKS,QAAU,EAAKG,MAAM,WAC1B,EAAKZ,aAAe,EAAKY,MAAM,gBARnB,EAJhB,U,MAAmCC,GCYtBnE,EAAqB,SAChClB,EACAH,EACAyF,GAEA,IAAMC,EAAK,IAAIP,EACfO,EAAGC,OACAC,MAAK,WACJF,EAAGH,MAAMpF,GACN0F,OAAO7F,EAAK1I,GAAI0I,GAChB4F,MAAK,SAACtE,GACLmE,EAASnE,SAGdwE,SAAQ,WACPJ,EAAGK,YAeIC,EAAU,SAAC7F,EAAmBD,EAAiB+F,GAC1D,IAAMP,EAAK,IAAIP,EACf,OAAOO,EACJC,OACAC,KAFI,sBAEC,4BAAA7B,EAAA,oEACG7D,EAAM,GADT,SAEewF,EAAGH,MAAMpF,GAAW+F,IAApB,2BAA6BhG,GAA7B,IAAqC+F,SAAUA,KAF9D,cAEEE,EAFF,yBAGGA,GAHH,4CAKLL,SAAQ,WACPJ,EAAGK,YAIIK,EAAkB,SAACjG,EAAmBsE,EAAqBwB,GACtE,IAAMP,EAAK,IAAIP,EACfO,EAAGC,OACAC,KADH,sBACQ,8BAAA7B,EAAA,6DACEsC,EAAmB5B,EAAuBhK,KAAI,SAACyF,GAEnD,cADOA,EAAM,GACN,2BAAKA,GAAZ,IAAoB+F,SAAUA,OAH5B,SAKeP,EAAGH,MAAMpF,GAAWmG,QAAQD,GAL3C,cAKEF,EALF,yBAMGA,GANH,4CAQLL,SAAQ,WACPJ,EAAGK,YAuBIpE,EAAS,SAACxB,EAAmB7I,GACxC,IAAMoO,EAAK,IAAIP,OACJ1H,IAAPnG,GACFoO,EAAGC,OACAC,MAAK,WACJF,EAAGH,MAAMpF,GAAWoG,OAAOjP,MAE5BwO,SAAQ,WACPJ,EAAGK,YAKES,EAAY,SAACrG,EAAmBsF,GAC3C,IAAMC,EAAK,IAAIP,EACfO,EAAGC,OACAC,MAAK,WACJF,EAAGH,MAAMpF,GACNsG,UACAb,MAAK,SAACc,GACLjB,EAASiB,SAGdZ,SAAQ,WACPJ,EAAGK,YAIIY,EAAc,SAACxG,EAAmBsF,GAC7C,IAAMC,EAAK,IAAIP,EACfO,EAAGC,OACAC,MAAK,WACJF,EAAGH,MAAMpF,GAAWyG,OAAM,SAACA,GACzBnB,EAASmB,SAGZd,SAAQ,WACPJ,EAAGK,YAIIc,EAAqB,SAAC1G,GACjC,IAAMuF,EAAK,IAAIP,EACf,OAAOO,EACJC,OACAC,MAAK,WACJ,OAAOF,EAAGH,MAAMpF,GAAWyG,WAE5Bd,SAAQ,WACPJ,EAAGK,YA0BI7B,EAA2B,SAAC/D,EAAmB/F,EAAcL,GACxE,IAAM2L,EAAK,IAAIP,EACf,OAAOO,EACJC,OACAC,KAFI,sBAEC,4BAAA7B,EAAA,sEACgB2B,EAAGH,MAAMpF,GAAW2G,MAAM1M,GAAM2M,iBAAiBhN,GAAO0M,UADxE,cACEC,EADF,yBAEGA,EAAM,IAFT,4CAILZ,SAAQ,WACPJ,EAAGK,YAII5B,EAAgB,SAAChE,EAAmBpG,GAC/C,IAAM2L,EAAK,IAAIP,EACf,OAAOO,EACJC,OACAC,KAFI,sBAEC,sBAAA7B,EAAA,sEACS2B,EAAGH,MAAMpF,GAAW6G,IAAIjN,GADjC,oFAGL+L,SAAQ,WACPJ,EAAGK,YAIIkB,EAAgC,SAC3C9G,EACA/F,EACAL,GAEA,IAAM2L,EAAK,IAAIP,EACf,MAAqB,kBAAVpL,EACF2L,EACJC,OACAC,KAFI,sBAEC,sBAAA7B,EAAA,sEACS2B,EAAGH,MAAMpF,GAAW2G,MAAM1M,GAAM2M,iBAAiBhN,GAAO6M,QADjE,oFAGLd,SAAQ,WACPJ,EAAGK,WAEmB,kBAAVhM,EACT2L,EACJC,OACAC,KAFI,sBAEC,sBAAA7B,EAAA,sEACS2B,EAAGH,MAAMpF,GAAW2G,MAAM1M,GAAM8M,OAAOnN,GAAO6M,QADvD,oFAGLd,SAAQ,WACPJ,EAAGK,WAGAL,EACJC,OACAC,KAFI,sBAEC,sBAAA7B,EAAA,sEACS2B,EACVH,MAAMpF,GACN2G,MAAM1M,GACN2M,iBAAiB,GAAKhN,GACtB6M,QALC,oFAOLd,SAAQ,WACPJ,EAAGK,YAKEoB,EAAmB,SAAChH,GAC/B,IAAMuF,EAAK,IAAIP,EACf,OAAOO,EACJC,OACAC,KAFI,sBAEC,sBAAA7B,EAAA,sEACS2B,EAAGH,MAAMpF,GAAWsG,UAD7B,oFAGLX,SAAQ,WACPJ,EAAGK,YAIIqB,EAAe,SAACnF,EAAUoF,GACrC,IAAIC,EAAkB,GACtBD,EAAQE,SAAQ,SAACjD,GACf,GAA4B,kBAAjBA,EAAOvK,MAChB,GAAIkI,EAAIqC,EAAOkD,qBAAsBC,MAAO,CAC1C,IAAIC,GAAS,EACbzF,EAAIqC,EAAOkD,WAAWD,SAAQ,SAACI,GAEzBA,EAAUC,cAAc9L,SAASwI,EAAOvK,MAAM6N,iBAChDF,GAAS,MAGTA,EACFJ,EAAKxC,MAAK,GAEVwC,EAAKxC,MAAK,QAGZwC,EAAKxC,KAEH7C,EAAIqC,EAAOkD,WAAWI,cAAc9L,SAASwI,EAAOvK,MAAM6N,qBAGzD,GAA4B,kBAAjBtD,EAAOvK,MAEvBuN,EAAKxC,KAAK7C,EAAIqC,EAAOkD,aAAelD,EAAOvK,YACtC,GAA4B,mBAAjBuK,EAAOvK,MAEvBuN,EAAKxC,KAAK7C,EAAIqC,EAAOkD,aAAelD,EAAOvK,YACtC,GAAIuK,EAAOvK,iBAAiB0N,MAAO,CACxC,IAAII,GAAqB,EACzBvD,EAAOvK,MAAMwN,SAAQ,SAACO,GACM,kBAAfA,EAGP7F,EAAIqC,EAAOkD,WAAWI,cAAc9L,SAASgM,EAAWF,iBAExDC,GAAY,GACiB,kBAAfC,EAEZ7F,EAAIqC,EAAOkD,aAAeM,IAAYD,GAAY,GACvB,mBAAfC,GAEZ7F,EAAIqC,EAAOkD,aAAeM,IAAYD,GAAY,MAG1DP,EAAKxC,KAAK+C,OAId,IAAIvG,GAAS,EAIb,OAHAgG,EAAKC,SAAQ,SAACQ,GACPA,IAAKzG,GAAS,MAEdA,GAGI0G,EAAoB,SAC/B7H,EACAkH,EACA5B,GAEA,IAAMC,EAAK,IAAIP,EACfO,EAAGC,OACAC,MAAK,WACJ,IAAIqC,EAAsB,OACtBC,GAAmB,EAEvBb,EAAQE,SAAQ,SAACjD,GACK,IAAhBA,EAAO6D,OACTF,EAAc3D,EAAOkD,UACD,IAAhBlD,EAAO6D,OAAYD,GAAU,OAIjCA,EACFxC,EAAGH,MAAMpF,GACNmE,QAAO,SAACrC,GAAD,OAASmF,EAAanF,EAAKoF,MAClCa,UACAE,OAAOH,GACPrC,MAAK,SAAC5F,GACLyF,EAASzF,MAGb0F,EAAGH,MAAMpF,GACNmE,QAAO,SAACrC,GAAD,OAASmF,EAAanF,EAAKoF,MAClCe,OAAOH,GACPrC,MAAK,SAAC5F,GACLyF,EAASzF,SAIhB8F,SAAQ,WACPJ,EAAGK,YAwDIsC,EAAkC,SAAClI,EAAmBmI,GACjE,IAAM5C,EAAK,IAAIP,EACf,OAAOO,EACJC,OACAC,MAAK,WACJ,OAAOF,EAAGH,MAAMpF,GAAWoI,QAAQD,GAAWE,gBAE/C1C,SAAQ,WACPJ,EAAGK,YAII5D,EAAkB,SAC7BhC,EACAD,EACAuF,GAEA,IAAMC,EAAK,IAAIP,EACfO,EAAGC,OACAC,MAAK,WACJF,EAAGH,MAAMpF,GACN+F,IAAIhG,GACJ0F,MAAK,SAACtO,GACLmO,EAASnO,SAGdwO,SAAQ,WACPJ,EAAGK,YAII0C,EAAY,SAACtI,GACxB,IAAMuF,EAAK,IAAIP,EACfO,EAAGC,OACAC,MAAK,WACJF,EAAGH,MAAMpF,GAAWuI,WAErB5C,SAAQ,WACPJ,EAAGK,YAII4C,EAA0B,SAACxI,EAAmBkH,EAAmBpB,GAC5E+B,EAAkB7H,EAAWkH,GAAS,SAACuB,GAErC,GAAIC,OAAOC,WAAaD,OAAOC,UAAUC,iBAAkB,CACzD,IAAIC,EAAO,IAAIC,KAAK,CAACC,mBAAmBC,UAAU7J,KAAKC,UAAUqJ,MAAS,CACxEvL,KAHc,oCAKhByL,UAAUC,iBAAiBC,EAAM/C,OAC5B,CACL,IAAIlC,EAAIqF,SAAS5G,cAAc,KAC/BuB,EAAEsF,SAAWpD,EACblC,EAAEuF,KAAO,wCAA8BC,mBAAmBjK,KAAKC,UAAUqJ,IACzE7E,EAAEzG,OAAS,SACX8L,SAASI,KAAKC,YAAY1F,GAC1BA,EAAE2F,QACFN,SAASI,KAAKG,YAAY5F,S,oyBCpajBhJ,IAjBI,SAAC,GAAsE,IAApEvD,EAAmE,EAAnEA,KAAMoS,EAA6D,EAA7DA,UAAWC,EAAkD,EAAlDA,SAAUpS,EAAwC,EAAxCA,UAAWkI,EAA6B,EAA7BA,MAAO/H,EAAsB,EAAtBA,QACjE,OACE,qCACIiS,GACA,kBAACC,EAAD,CAAcC,KAAMH,EAAWhS,QAASA,EAAS+H,MAAOA,GACtD,kBAAC9H,EAAD,CAAML,KAAMA,EAAMC,UAAWA,KAGhCoS,GACC,kBAACG,EAAD,CAAsBrK,MAAOA,GAC3B,kBAAC9H,EAAD,CAAML,KAAMA,EAAMC,UAAWA,OAavC,IAAMqS,EAAehS,IAAOO,IAAV,KACP,qBAAGL,MAAkBG,QAAQC,SAClB,qBAAGJ,MAAkBG,QAAQU,mBAKvC,qBAAGb,MAAkBG,QAAQG,UACxB,qBAAGN,MAAkBG,QAAQG,UACnC,qBAAGyR,KAAmB,OAAS,WAkBpCC,EAAuBlS,YAAOgS,EAAPhS,CAAH,KACf,qBAAGE,MAAkBG,QAAQU,mBAClB,qBAAGb,MAAkBG,QAAQC,SAI7CP,EAAOC,YAAOC,IAAPD,CAAH,M,gxBChDK0B,IARI,SAAC,GAAiE,IAA/DC,EAA8D,EAA9DA,KAAMjC,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,UAAWoS,EAAuC,EAAvCA,SAAUlK,EAA6B,EAA7BA,MAAO/H,EAAsB,EAAtBA,QAC5D,OACE,kBAACkS,EAAD,CAAclS,QAASA,EAASiS,SAAUA,EAAUlK,MAAOA,GACxDnI,EAAO,kBAACK,EAAD,CAAML,KAAMA,EAAMC,UAAWA,IAAgB,GADvD,IAC4DgC,IAOhE,IAAMqQ,EAAehS,IAAOmS,OAAV,KACP,qBAAGjS,MAAkBG,QAAQC,SAClB,qBAAGJ,MAAkBG,QAAQU,mBAGvC,qBAAGb,MAAkBG,QAAQG,UACxB,qBAAGN,MAAkBG,QAAQG,UAajC,qBAAGN,MAAkBG,QAAQK,cAIlB,qBAAGR,MAAkBG,QAAQ0R,YAS/ChS,EAAOC,YAAOC,IAAPD,CAAH,M,u9BC5BKqC,IAdK,SAAC,GAAD,IAAGJ,EAAH,EAAGA,MAAOM,EAAV,EAAUA,MAAOG,EAAjB,EAAiBA,YAAahD,EAA9B,EAA8BA,KAAMC,EAApC,EAAoCA,UAAW6C,EAA/C,EAA+CA,SAA/C,OAClB,kBAAC4C,EAAD,KACE,kBAACC,EAAD,KACG3F,EAAO,kBAACK,EAAD,CAAML,KAAMA,EAAMC,UAAWA,IAAgB,GADvD,IAC4D4C,GAE5D,kBAAC+C,EAAD,CACEC,KAAK,OACLtD,MAAOA,EACPO,SAAU,SAACvD,GAAD,OAAOuD,EAASvD,EAAEuG,OAAOvD,QACnCS,YAAaA,MAOnB,IAAM0C,EAAQpF,IAAOuC,MAAV,KACA,qBAAGrC,MAAkBc,KAAKV,SACf,qBAAGJ,MAAkBc,KAAKD,mBAe1ChB,EAAOC,YAAOC,IAAPD,CAAH,KAMC,qBAAGE,MAAkBC,KAAKC,aAG/BiF,EAAYrF,IAAOO,IAAV,KAIT+E,EAAQtF,IAAOgF,MAAV,KAMW,qBAAG9E,MAAkB8E,MAAMjE,mBACtC,qBAAGb,MAAkB8E,MAAM1E,U,gHCnEjBsM,EAUnB,WACEpN,EACA8C,EACA6D,EACAC,EACAE,EACAE,EACAjB,EACAc,GACC,yBAlBH7G,QAkBE,OAjBF8C,UAiBE,OAhBF6D,YAgBE,OAfFC,UAeE,OAdFE,kBAcE,OAbFE,YAaE,OAZFjB,UAYE,OAXFc,YAWE,EACA+L,KAAK5S,GAAKA,EACV4S,KAAK9P,KAAOA,GAAQ,GACpB8P,KAAKjM,OAASA,IAAU,EACxBiM,KAAKhM,KAAOA,GAAQ,EACpBgM,KAAK9L,aAAeA,GAAgB,GACpC8L,KAAK5L,OAASA,GAAU,GACxB4L,KAAK7M,KAAOA,IAAQ,EACpB6M,KAAK/L,OAASA,GAAU,IAIrB,SAASgM,EAASC,GACvB,IAAMC,OAAyB5M,IAAb2M,EAAIhQ,MAAyC,iBAAZgQ,EAAIhQ,KACjDkQ,OAAyB7M,IAAb2M,EAAIlM,MAAyC,iBAAZkM,EAAIlM,KACjDqM,OAA6B9M,IAAf2M,EAAInM,QAA6C,kBAAdmM,EAAInM,OACrDuM,OAAyC/M,IAArB2M,EAAIhM,cAAyD,iBAApBgM,EAAIhM,aACjEqM,OAA6BhN,IAAf2M,EAAI9L,QAA6C,iBAAd8L,EAAI9L,OACrDoM,OAAyBjN,IAAb2M,EAAI/M,MAAyC,kBAAZ+M,EAAI/M,KACjDsN,OAA6BlN,IAAf2M,EAAIjM,QAA6C,iBAAdiM,EAAIjM,OAE3D,OACEiM,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,I,gCClDG,SAASlM,IACd,GAAwC,OAApCmM,aAAaC,QAAQ,YAA2D,KAApCD,aAAaC,QAAQ,WAAmB,CACtF,IAAIzQ,EAAO,eAGX,OAF6C,OAAzCwQ,aAAaC,QAAQ,kBACvBzQ,EAAOwQ,aAAaC,QAAQ,gBAAkB,IACzC,CAAEC,KAAMF,aAAaC,QAAQ,WAAa,GAAIzQ,KAAMA,IAL/D,mC,gCCAA,sGAAO,IAAM2Q,EAAc,SACzBvM,EACAwM,EACAC,GAEA,QAAgBxN,IAAZe,EAAuB,CACzB,IAAI0M,EAAU,IAAIC,eAClBD,EAAQvF,KAAK,OAAQnH,EAAQsM,MAC7BI,EAAQE,iBAAiB,eAAgB,oBACzC,IAAInH,EAAS,CACXjF,SAA2B,KAAjBR,EAAQpE,KAAcoE,EAAQpE,KAAO,eAC/CiR,gBAAuB5N,IAAXwN,EAAuBA,EAAS,GAC5CD,QAASA,GAEXE,EAAQtM,KAAKU,KAAKC,UAAU0E,MAInBpE,EAAmB,SAC9BrB,EACAyF,GAEA,QAAgBxG,IAAZe,EAAuB,CACzB8M,QAAQC,IAAItH,GACZ,IAAIiH,EAAU,IAAIC,eAClBD,EAAQvF,KAAK,OAAQnH,EAAQsM,MAC7BI,EAAQE,iBAAiB,eAAgB,oBACzCF,EAAQtM,KAAKqF,KAIJ5E,EAAoB,SAAC5F,GAChC,OAAIA,EAAKqC,SAAS,MACTrC,EAAK8K,WAAW,KAAM,KAAKA,WAAW,KAAM,KAE5C9K,I,0FC/BI,SAAS+R,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIhE,MAAMiE,QAAQD,GAAM,OAAO,OAAAE,EAAA,GAAiBF,GDGzC,CAAkBA,IELZ,SAA0BG,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOnE,MAAMuE,KAAKJ,GFIvD,CAAgBH,IAAQ,OAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE,K,iGILjFC,EAAc,SAACC,EAAkBC,GAC5C,IAAI/K,EAAS,EACT7H,EAAO,GAEP6S,EAAc,GA6BlB,OA5BAF,EAASpQ,MAAM,KAAKuL,SAAQ,SAACgF,GACvB,OAAOjF,KAAKiF,GACdD,GAAeC,EAEf9S,GAAQ,IAAM8S,MAGlBD,EAAcA,EAAYvQ,QAEdC,MAAM,KAAKuL,SAAQ,SAACgF,GAC9B,IAAIC,EAAqB,EACpBD,EAAQE,WAAW,OACtBD,EAAaE,SAASH,EAAQvQ,MAAM,KAAK,IACzCuQ,EAAUA,EAAQvQ,MAAM,KAAK,IAE/BuQ,EAAUA,EAAQhI,WAAW,IAAK,IAC9B8H,IAAMG,GAA0B,GAEhCD,EAAQzQ,SAAS,KACnBwF,GACEkL,EAAaG,EAAQD,SAASH,EAAQvQ,MAAM,KAAK,KAAO0Q,SAASH,EAAQvQ,MAAM,KAAK,IAC7EuQ,EAAQzQ,SAAS,KAC1BwF,GACEkL,EAAaG,EAAQD,SAASH,EAAQvQ,MAAM,KAAK,KAAO0Q,SAASH,EAAQvQ,MAAM,KAAK,IAEtFsF,GAAUkL,EAAaG,EAAQD,SAASH,OAGrC,CAAEjL,OAAQA,EAAQ7H,KAAMA,IAGpBkT,EAAU,SAACC,GACtB,IACMjR,EAAMiR,EAEZ,OADW3Q,KAAKC,MAFJ,EAEgBD,KAAKE,UAAYR,EAFjC,K,wECqECkR,EA1EG,SAAC,GAA4B,IAA1BxP,EAAyB,EAAzBA,KAAMjD,EAAmB,EAAnBA,KAAmB,EACdiB,oBAAkB,GADJ,mBACrCoI,EADqC,KAC5BC,EAD4B,OAEVrI,oBAAkB,GAFR,mBAErCyR,EAFqC,KAEvBtJ,EAFuB,KAI5C1E,qBAAU,WACR,GAAa,SAATzB,EACFmG,GAAU,GACVE,GAAW,OACN,CACL,IAAIqJ,EAAU1P,EAAO,IACR,UAATA,GAA6B,aAATA,IAAqB0P,EAAU1P,EAAO,MAC9D4J,YAA8B8F,EAAS,OAAQ3S,GAAMwL,MAAK,SAACgB,GACzDpD,EAAUoD,EAAQ,GAClBlD,GAAW,SAGd,CAACrG,EAAMjD,IAiDV,OACE,oCACGqJ,GAAW,kBAAC,IAAD,OACVA,IAAYqJ,GAAgB,kBAAC,IAAD,OAC5BrJ,GAAWqJ,GAAgB,oCAnDd,SAACzP,GAClB,OAAQA,GACN,IAAK,QACH,OAAO,kBAAC,IAAD,CAAiB7F,KAAMwV,MAChC,IAAK,OACH,OAAO,kBAAC,IAAD,MACT,IAAK,OACH,OAAO,kBAAC,IAAD,MACT,IAAK,OACL,IAAK,UACH,OAAO,kBAAC,IAAD,MACT,IAAK,QACL,IAAK,WACH,OAAO,kBAAC,IAAD,MACT,IAAK,YACH,OAAO,kBAAC,IAAD,MACT,IAAK,OACH,OAAO,kBAAC,IAAD,CAAiBxV,KAAMyV,MAChC,IAAK,UACH,OAAO,kBAAC,IAAD,CAAiBzV,KAAM0V,MAChC,IAAK,YACH,OAAO,kBAAC,IAAD,MACT,IAAK,WACH,OAAO,kBAAC,IAAD,MACT,IAAK,QACH,OAAO,kBAAC,IAAD,MACT,IAAK,QACH,OAAO,kBAAC,IAAD,MACT,IAAK,QACH,OAAO,kBAAC,IAAD,MACT,IAAK,WACH,OAAO,kBAAC,IAAD,CAAiB1V,KAAM2V,MAChC,IAAK,MACH,OAAO,kBAAC,IAAD,MACT,IAAK,cACH,OAAO,kBAAC,IAAD,CAAiB3V,KAAM4V,MAChC,IAAK,OACH,OAAO,kBAAC,IAAD,MACT,IAAK,QACH,OAAO,kBAAC,IAAD,MACT,IAAK,OACH,OAAO,kBAAC,IAAD,MACT,QACE,MAAO,IAQuBC,CAAWhQ,M,o4BC6GlCZ,IApMM,SAAC,GAAsB,IAApBhD,EAAmB,EAAnBA,KAClB+E,EAAUC,cAD2B,EAEjBpD,mBAAiB,IAFA,mBAElCqD,EAFkC,KAE5BC,EAF4B,OAGDtD,qBAHC,mBAGlCiS,EAHkC,KAGpBC,EAHoB,KAIrCtM,EAAUC,cAEdpC,qBAAU,WACR,QAAgBrB,IAAZe,EAAuB,CACzB,IAAIO,EAAU,CACZC,SAAUR,EAAQpE,KAAO,kBACzB6E,OAAQ,CACN,CACEE,OAAQ,CACN,CACE/E,KAAM,OACNL,MAAOsF,YAAkB5F,QAMnCkF,EAAQW,KAAKC,UAAUR,OAExB,CAACtF,EAAM+E,IAEV,IAAMgP,EAAM,SAAChJ,EAAaiJ,EAAkBC,GAC1C,OAAOlJ,EAAImJ,OAAO,EAAGF,GAAYjJ,EAAImJ,OAAOD,EAAS,IAGjDE,EAAc9J,uBAClB,SAACyI,GACC,GAAKA,EAAQzQ,SAAS,KAwBf,CAAC,IAAD,EACoBqQ,EAAYI,GAA7BjL,EADH,EACGA,OAAQ7H,EADX,EACWA,UACDgE,IAAX6D,QAAoC7D,IAAZe,GAC1BuM,YAAYvM,EAAS8C,EAAS,IAAM7H,EAAO,MAAQ8S,EAAU,UA3BrC,CAC1B,IAAIsB,EAAa,MAAQtB,EACrBxS,EAAQ2S,SAASH,EAAQhI,WAAW,IAAK,KAFnB,EAGD4H,EAAY0B,GAA7BvM,EAHkB,EAGlBA,OAAQ7H,EAHU,EAGVA,KAEZ4S,GAAO,EACP/K,EAASvH,IAAU,KAAIsS,GAAO,GAClC,IAAIyB,GAAO,EACPxM,EAASvH,IAAU,IAAG+T,GAAO,GAEjC,IAAIC,EAAa,SAAWzM,EAASvH,GAAS,KAAOwS,OACtC9O,IAAX6D,QAAoC7D,IAAZe,GAC1BuM,YACEvM,EACA8C,EACE,IACA7H,GACCqU,EAAO,gBAAkB,KACzBzB,EAAO,kBAAoB,IAC5B,MACA0B,EACA,SAUV,CAACvP,IAGGwP,EAAalK,uBACjB,SAACrK,GACC,QAAagE,IAAThE,EAAoB,CACtB,GAAIA,EAAKqC,SAAS,OAASrC,EAAKqC,SAAS,MAAO,CAC9C,IAAMmS,EAAQxU,EAAKuC,MAAM,MACrBkS,EAAwB,GA+B5B,OA9BAD,EAAM1G,SAAQ,SAAC4G,EAAcnU,GAC3B,GAAImU,EAAKrS,SAAS,MAAO,CACvB,IAAMsS,EAAqBD,EAAKnS,MAAM,MAChCqS,EAAsBD,EAAS,GAAGpS,MAAM,KAC1CsS,EAAaD,EAAU,GAC3B,GAAmB,SAAfC,EACFJ,EAAepJ,KACb,kBAACyJ,EAAD,CAAU3T,IAAKZ,GACb,kBAACwU,EAAD,CAAa5W,QAAS,kBAAMgW,EAAYS,EAAU,MAChD,kBAAC,EAAD,CAAWhR,KAAMgR,EAAU,GAAIjU,KAAMiU,EAAU,KADjD,IACyDA,EAAU,IAEnE,kBAACE,EAAD,KAAWH,EAAS,UAGnB,CACc,UAAfE,GAAyC,aAAfA,IAA2BA,GAAc,KACvE,IAAMG,EAAe,IAAMH,EAAa,gBAAkBD,EAAU,GACpEH,EAAepJ,KACb,kBAACyJ,EAAD,CAAU3T,IAAKZ,GACb,kBAAC0U,EAAD,CAAM9W,QAAS,kBAAMqJ,EAAQ6D,KAAK2J,KAChC,kBAAC,EAAD,CAAWpR,KAAMgR,EAAU,GAAIjU,KAAMiU,EAAU,KADjD,IACyDA,EAAU,IAEnE,kBAACE,EAAD,KAAWH,EAAS,WAKb,KAATD,GAAaD,EAAepJ,KAAK,kBAACyJ,EAAD,CAAU3T,IAAKZ,GAAQmU,OAGzD,oCAAGD,GAEV,OAAO,kBAACK,EAAD,KAAW9U,MAIxB,CAACwH,IAGG0N,EAAc7K,uBAClB,SAAC8K,GACC,GAAIA,EAAS9S,SAAS,aAAc,CAClC,IAAMyJ,EAAkB9L,EAAKuC,MAAM,aAC7B6S,EAAsBtJ,EAAM,GAAGvJ,MAAM,MACvC8S,GAAS,EACb,OACE,oCACGd,EAAWzI,EAAM,IAClB,+BACE,+BACGsJ,EAAUpU,KAAI,SAACC,EAAaV,GAC3B,GAAIU,EAAIoB,SAAS,KAAM,CACrB,GAAIgT,EAAQ,CACVA,GAAS,EACT,IAAMhU,EAAQJ,EAAIsB,MAAM,KACxB,OACE,wBAAIpB,IAAKZ,GACNc,EAAML,KAAI,SAACkC,EAAc3C,GACxB,OAAO,kBAAC0C,EAAD,CAAe9B,IAAKZ,GAAQ2C,OAKzC,IAAM7B,EAAQJ,EAAIsB,MAAM,KACxB,OACE,wBAAIpB,IAAKZ,GACNc,EAAML,KAAI,SAACkC,EAAc3C,GACxB,OAAO,kBAAC4C,EAAD,CAAWhC,IAAKZ,GAAQgU,EAAWrR,QAMlD,OAAO,0CAKdqR,EAAWzI,EAAM,KAItB,OAAOyI,EAAWY,KAGtB,CAACnV,EAAMuU,IAGHe,EAAajL,uBACjB,SAAC8K,GACC,KAAOA,EAAS9S,SAAS,OAAO,CAC9B,IAAM2R,EAAWmB,EAASI,QAAQ,MAC5BtB,EAASkB,EAASI,QAAQ,MAAQ,EACxCJ,EAAWpB,EAAIoB,EAAUnB,EAAUC,GAErC,OAAOiB,EAAYC,KAErB,CAACD,IAUH,OAPA7P,qBAAU,WACR,QAAarB,IAAThE,EAAoB,CACtB,IAAI6T,EAAeyB,EAAWtV,GAC9B8T,EAAgBD,MAEjB,CAAC7T,EAAMwH,EAAS8N,IAGjB,kBAACE,EAAD,UACexR,IAAZe,GAAkC,KAAT/E,GACxB,kBAACsB,EAAA,EAAD,CACE4E,MAAO,CACL9G,gBAAiB,UACjBqW,MAAO,QACPC,QAAS,OAEX3X,KAAMoI,IACNhI,QAAS,kBAAMiI,YAAiBrB,EAASE,MAG5C4O,IA/LP,IAsMM2B,EAAwBnX,IAAOO,IAAV,KAErBqW,EAAO5W,IAAOoL,KAAV,KAEY,qBAAGlL,MAAkBc,KAAKqK,uBAGrC,qBAAGnL,MAAkBc,KAAKD,mBAO/B2V,EAAc1W,YAAO4W,EAAP5W,CAAH,KAKXyW,EAAWzW,IAAOoL,KAAV,KAIRxG,EAAgB5E,IAAO+E,GAAV,KACG,qBAAG7E,MAAkB8E,MAAMjE,mBACtC,qBAAGb,MAAkB8E,MAAM1E,SAKhCwE,EAAY9E,IAAOiF,GAAV,KACO,qBAAG/E,MAAkB8E,MAAMjE,mBACtC,qBAAGb,MAAkB8E,MAAM1E,U,8EClPjBwM,EAOnB,WACEtN,EACA8C,EACA6L,EACA1L,EACAN,GACC,yBAZH3C,QAYE,OAXF8C,UAWE,OAVFG,YAUE,OATFN,UASE,OARFgM,cAQE,EACAiE,KAAK5S,GAAKA,EACV4S,KAAKjE,SAAWA,GAAY,GAC5BiE,KAAK9P,KAAOA,GAAQ,GACpB8P,KAAK3P,OAASA,GAAU,GACxB2P,KAAKjQ,KAAOA,GAAQ,K,iSCiET8F,IArEG,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,KAAMpH,EAAmB,EAAnBA,KAAmB,EACpByC,mBAAiB,IADG,mBACrCjB,EADqC,KAC/BgV,EAD+B,OAEpB/T,qBAFoB,mBAErCgU,EAFqC,KAE/BC,EAF+B,OAGlBjU,qBAHkB,mBAGrCsI,EAHqC,KAG9BC,EAH8B,KAyD5C,OApDA9E,qBAAU,WACR,QAAarB,IAAT4R,EAAoB,CACtB,IAAME,ECpBoB,WAI9B,IAHA,IAJwB/S,EAAab,EAIjC6T,EAAW,GACTC,EACJ,iEACOC,EAAI,EAAGA,EAAI,GAAIA,IACtBF,GAAYC,GARUjT,EAQkB,EARLb,EAQQ8T,EAAW5T,OAAS,EAP1DI,KAAK0T,MAAM1T,KAAKE,UAAYR,EAAMa,EAAM,IAAMA,IASrD,OAAOgT,EDacI,GACXC,EAAU,IAAIC,IAAKP,EAAU,CACjCQ,KAAM,wBACNC,QAAQ,IAEV1E,QAAQC,IAAIsE,GACZA,EAAQI,GAAG,cAAc,SAAUC,GACjCA,EAAKD,GAAG,SAAS,SAAUE,GACzBvM,EAASuM,MAEXD,EAAKD,GAAG,QAAQ,WACdC,EAAKtR,KAAKoB,SAGdsP,EAAQO,MAET,CAAC7P,EAAMqP,IAEVvQ,qBAAU,gBACKrB,IAAT4R,IACEA,EAAKe,eAAiBf,EAAKgB,WAC7BhB,EAAKiB,YAEM,QAAT1X,GAAkC,kBAAToH,EAC3BmH,YAAiBnH,GAAM4F,MAAK,SAAC2K,GAC3BjF,QAAQC,IAAIgF,GACZnB,EAAQpP,GACRqP,EAAKY,GAAG,cAAc,SAAUC,GAC9BA,EAAKD,GAAG,SAAS,SAAUE,GACzBvM,EAASuM,MAEXD,EAAKD,GAAG,QAAQ,WACdC,EAAKtR,KAAK2R,YAIE,SAAT3X,GAAmC,kBAAToH,IACnCoP,EAAQpP,EAAK5F,MACbiV,EAAKY,GAAG,cAAc,SAAUC,GAC9BA,EAAKD,GAAG,SAAS,SAAUE,GACzBvM,EAASuM,MAEXD,EAAKD,GAAG,QAAQ,WACdC,EAAKtR,KAAKoB,aAKjB,CAACA,EAAMpH,EAAMyW,IAGd,yCACY5R,IAAT4R,GAAkC,OAAZA,EAAK/X,IAC1B,oCACE,kBAAC6C,EAAA,EAAD,CAAaJ,MAAOsV,EAAK/X,GAAI+C,MAAK,eAAUD,EAAV,QAAsBE,SAAU,gBAGrEqJ,GAAS,kBAAC9L,EAAD,CAAML,KAAMgZ,QAhE5B,IAuEM3Y,EAAOC,YAAOC,IAAPD,CAAH,KAKC,qBAAGE,MAAkBC,KAAKC","file":"static/js/7.dd65c3a2.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 100;","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  transform?: string | Transform;\n  action: () => void;\n}\n\nconst BackButton = ({ icon, transform, action }: $Props) => {\n  return (\n    <Back onClick={action}>\n      <Icon icon={icon} transform={transform} />\n    </Back>\n  );\n};\n\nexport default BackButton;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n  &:hover {\n    color: ${({ theme }) => theme.buttons.color};\n  }\n`;\n\nconst Back = styled.div`\n  float: left;\n  font-size: calc(${({ theme }) => theme.buttons.height} + 10px);\n  margin: 10px 0px 0px 10px;\n  cursor: pointer;\n`;\n","import styled from \"styled-components\";\n\nexport const ToggleLeft = styled.div`\n  width: auto;\n  padding: 10px;\n  margin: 5px 0px 5px 5px;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: left;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  border-radius: 5px 0px 0px 5px;\n\n  transition: color 0.2s, background-color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n`;\n\nexport const ToggleRight = styled(ToggleLeft)`\n  margin: 5px 5px 5px 0px;\n\n  border-radius: 0px 5px 5px 0px;\n`;\n\ntype EditMode = {\n  mode: string;\n};\n\nexport const EditToggle = styled.div<EditMode>`\n  width: auto;\n  height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  color: ${({ theme }) => theme.buttons.color};\n\n  ${ToggleLeft} {\n    background-color: ${(props) => {\n      if (props.mode !== \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n\n  ${ToggleRight} {\n    background-color: ${(props) => {\n      if (props.mode === \"true\") {\n        return ({ theme }) => theme.buttons.backgroundColor;\n      } else {\n        return ({ theme }) => theme.tile.backgroundColor;\n      }\n    }};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  message: string;\n  icon?: IconDefinition;\n  confirmeText: string;\n  confirmeClick: () => void;\n  abortText: string;\n  abortClick: () => void;\n}\n\nconst Dialog = ({\n  message,\n  icon,\n  confirmeText,\n  confirmeClick,\n  abortText,\n  abortClick,\n}: $Props) => {\n  return (\n    <DialogWrapper>\n      <Message>\n        {icon ? <Icon icon={icon} /> : \"\"} {message}\n      </Message>\n      <ButtonBar>\n        <TextButton text={abortText} onClick={abortClick} />\n        <TextButton text={confirmeText} onClick={confirmeClick} />\n      </ButtonBar>\n    </DialogWrapper>\n  );\n};\n\nexport default Dialog;\n\nconst DialogWrapper = styled.div`\n  width: 180px;\n  position: absolute;\n  z-index: 1010;\n  top: 10px;\n  left: calc(50% - 100px);\n  padding: 10px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${({ theme }) => theme.tile.color};\n`;\n\nconst Message = styled.div`\n  width: 100%;\n  text-align: center;\n`;\n\nconst ButtonBar = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../../data/RandomTable\";\n\nimport { faPlus, faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\n\ninterface $Props {\n  randomTable: RandomTable;\n  onEdit: (value: RandomTable) => void;\n}\n\nconst RandomTableEditView = ({ randomTable, onEdit }: $Props) => {\n  const onRowChange = (field: string, value: string, index: number) => {\n    let rows = randomTable.rows;\n    rows[index] = { ...rows[index], [field]: value };\n    onEdit({ ...randomTable, rows: rows });\n  };\n\n  const addNewRow = () => {\n    onEdit({\n      ...randomTable,\n      rows: [...randomTable.rows, { value: \"\", cells: \"\" }],\n    });\n  };\n\n  const removeRow = (index: number) => {\n    let rows = randomTable.rows;\n    if (index !== -1) {\n      rows.splice(index, 1);\n      onEdit({ ...randomTable, rows: rows });\n    }\n  };\n\n  return (\n    <CenterWrapper>\n      <RandomTableView>\n        <StringField\n          value={randomTable.name}\n          label=\"Name\"\n          onChange={(name) => onEdit({ ...randomTable, name: name })}\n        />\n        <StringField\n          value={randomTable.header}\n          label=\"Header\"\n          onChange={(name) => onEdit({ ...randomTable, header: name })}\n          placeholder={\"Items| Description|...\"}\n        />\n      </RandomTableView>\n      <RandomTableView>\n        {randomTable.rows.map(\n          (row: { value: string; cells: string }, index: number) => {\n            return (\n              <RowWrapper key={index}>\n                <RowCount>{index}</RowCount>\n                <StringField\n                  value={row.value}\n                  label={\"Row values \" + index}\n                  onChange={(text) => onRowChange(\"value\", text, index)}\n                  placeholder={`${index + 1} or 0-5`}\n                />\n                <StringField\n                  value={row.cells}\n                  label={\"Row \" + index}\n                  onChange={(text) => onRowChange(\"cells\", text, index)}\n                  placeholder={`Item ${index}| Description ${index}|...`}\n                />\n                <IconButton icon={faTrash} onClick={() => removeRow(index)} />\n              </RowWrapper>\n            );\n          }\n        )}\n        <RowWrapper>\n          <IconButton icon={faPlus} onClick={() => addNewRow()} />\n        </RowWrapper>\n      </RandomTableView>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RandomTableView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst RowWrapper = styled.div`\n  flex: 1 1 600px;\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst RowCount = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 20px;\n  max-width: 20px;\n  text-algin: center;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport RandomTable from \"../../../../data/RandomTable\";\n\nimport { faArrowRight, faDice } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  randomTable: RandomTable;\n}\n\nconst RandomTableView = ({ randomTable }: $Props) => {\n  const [rand, setRand] = useState<number>(-1);\n\n  const rollForRandom = () => {\n    const min = 1;\n    let max = 10;\n    const lastRowValues = randomTable.rows[randomTable.rows.length - 1].value;\n    if (lastRowValues.includes(\"-\")) {\n      let range = lastRowValues.trim().split(\"-\");\n      max = +range[1];\n    } else if (lastRowValues.includes(\"–\")) {\n      let range = lastRowValues.trim().split(\"–\");\n      max = +range[1];\n    } else {\n      max = +lastRowValues;\n    }\n    const rand = Math.round(min + Math.random() * (max - min));\n    setRand(rand);\n  };\n\n  return (\n    <CenterWrapper>\n      <Name>\n        <b>{randomTable.name}</b>\n      </Name>\n      <View>\n        <TextButton\n          text={\"Roll\"}\n          icon={faDice}\n          onClick={() => rollForRandom()}\n        />\n        {rand >= 0 && (\n          <Prop>\n            {rand} <Icon icon={faArrowRight} />\n            {randomTable.rows.map((row: { value: string; cells: string }) => {\n              if (row.value.includes(\"-\")) { // normal -\n                let range = row.value.trim().split(\"-\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else if (row.value.includes(\"–\")) { // – used by DnDBeyond \n                let range = row.value.trim().split(\"–\");\n                const min: number = +range[0];\n                const max: number = +range[1];\n                if (min <= rand && rand <= max)\n                  return <FormatedText text={row.cells} />;\n              } else {\n                const valueNumber = +row.value;\n                if (valueNumber === rand)\n                  return <FormatedText text={row.cells} />;\n              }\n              return <></>;\n            })}\n          </Prop>\n        )}\n      </View>\n      <View>\n        <table>\n          <tbody>\n            <tr>\n              <TableHeadProp>Number</TableHeadProp>\n              {randomTable.header &&\n                randomTable.header\n                  .split(\"|\")\n                  .map((cell: string, index: number) => {\n                    return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                  })}\n            </tr>\n            {randomTable.rows &&\n              randomTable.rows.map(\n                (row: { value: string; cells: string }, index: number) => {\n                  return (\n                    <tr key={index}>\n                      <TableProp key={index}>{row.value}</TableProp>\n                      {row.cells\n                        .split(\"|\")\n                        .map((cell: string, index: number) => {\n                          return (\n                            <TableProp key={index}>\n                              <FormatedText text={cell} />\n                            </TableProp>\n                          );\n                        })}\n                    </tr>\n                  );\n                }\n              )}\n          </tbody>\n        </table>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default RandomTableView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  max-width: calc(100% - 20px);\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.color};\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 10px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: left;\n`;\n\nconst Prop = styled.div`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 5px;\n  box-sizing: content-box;\n  text-align: center;\n\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};s\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: number;\n  label: string;\n  max?: number;\n  step?: number;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: number) => void;\n}\n\nconst NumberField = ({ value, max, step, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {max && (\n        <Input\n          type=\"number\"\n          max={max}\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n      {!max && (\n        <Input\n          type=\"number\"\n          step={step ? step : 1}\n          value={value}\n          onChange={(e) => onChange(+e.target.value)}\n        />\n      )}\n    </Field>\n  );\n};\n\nexport default NumberField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Input = styled.input`\n  flex: 1 1 auto;\n  max-width: 6em;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  height?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst TextField = ({ value, label, height, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input height={height} value={value} onChange={(e) => onChange(e.target.value)}></Input>\n    </Field>\n  );\n};\n\nexport default TextField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 3 3 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n  min-width: 100%;\n  height: 30px;\n  line-height: 30px;\n`;\n\ntype TextProps = {\n  height?: string;\n};\n\nconst Input = styled.textarea<TextProps>`\n  flex: 1 1;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  height: ${({ height }) => (height !== undefined ? height : \"auto\")};\n  min-height: ${({ height }) => (height !== undefined ? height : \"22vh\")};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: boolean;\n  label: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: boolean) => void;\n}\n\nconst CheckField = ({ value, label, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      <Input\n        type=\"checkbox\"\n        defaultChecked={value}\n        onChange={(e) => onChange(e.target.checked)}\n      ></Input>\n      <Checkmark></Checkmark>\n    </Field>\n  );\n};\n\nexport default CheckField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n  user-select: none;\n  position: relative;\n\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1;\n`;\n\nconst Checkmark = styled.div`\n  flex: 1 1;\n  height: 30px;\n  min-width: 30px;\n  max-width: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n\n  &:after {\n    content: \"\";\n    display: none;\n  }\n\n  &:after {\n    width: 5px;\n    height: 10px;\n    border: solid white;\n    border-width: 0 3px 3px 0;\n    -webkit-transform: rotate(45deg);\n    -ms-transform: rotate(45deg);\n    transform: rotate(45deg);\n    margin-left: 6px;\n    margin-top: 2px;\n  }\n`;\n\nconst Input = styled.input`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n  height: 0;\n  width: 0;\n  left: 0;\n  bottom 0;\n\n  &:checked ~ ${Checkmark} {\n    background-color: ${({ theme }) => theme.main.highlight};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  &:checked ~ ${Checkmark}:after {\n    display: block;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Talent from \"../../../../data/Talent\";\n\nimport StringField from \"../../../form_elements/StringField\";\nimport NumberField from \"../../../form_elements/NumberField\";\nimport TextField from \"../../../form_elements/TextField\";\nimport CheckField from \"../../../form_elements/CheckField\";\n\nimport { faBookOpen } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  talent: Talent;\n  onEdit: (value: Talent) => void;\n}\n\nconst TalentEditView = ({ talent, onEdit }: $Props) => {\n  return (\n    <CenterWrapper>\n      <View>\n        <FieldGroup>\n          <StringField\n            value={talent.name}\n            label=\"Name\"\n            onChange={(name) => onEdit({ ...talent, name: name })}\n          />\n          <CheckField\n            value={!!talent.isFlaw}\n            label=\"Is Flaw?\"\n            onChange={(isFlaw) => onEdit({ ...talent, isFlaw: isFlaw })}\n          />\n        </FieldGroup>\n        <FieldGroup>\n          <NumberField\n            value={talent.cost}\n            label=\"Cost\"\n            onChange={(cost) => onEdit({ ...talent, cost: cost })}\n          />\n          <CheckField\n            value={!!talent.type}\n            label=\"Is Active?\"\n            onChange={(type) => onEdit({ ...talent, type: type })}\n          />\n        </FieldGroup>\n        <StringField\n          value={talent.stress}\n          label=\"Stress\"\n          onChange={(stress) => onEdit({ ...talent, stress: stress })}\n        />\n        <TextField\n          value={talent.prerequisite}\n          label=\"Prerequisite\"\n          icon={faBookOpen}\n          onChange={(prerequisite) => onEdit({ ...talent, prerequisite: prerequisite })}\n        />\n        <TextField\n          value={talent.effect}\n          label=\"Effect\"\n          icon={faBookOpen}\n          onChange={(effect) => onEdit({ ...talent, effect: effect })}\n        />\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default TalentEditView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  padding: 5px;\n  max-width: 800px;\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport Talent from \"../../../../data/Talent\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { formatDiscordText, sendEmbedMessage } from \"../../../../services/DiscordService\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\n\ninterface $Props {\n  talent: Talent;\n}\n\nconst TalentView = ({ talent }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (SkirmishTome)\",\n        embeds: [\n          {\n            author: {\n              name: talent.name,\n            },\n            fields: [\n              {\n                name: \"Cost\",\n                value: talent.cost ? talent.cost : \"-\",\n                inline: true,\n              },\n              {\n                name: \"Stress\",\n                value: talent.type ? talent.stress : \"passive\",\n                inline: true,\n              },\n              {\n                name: \"Prerequisite\",\n                value: formatDiscordText(talent.prerequisite),\n              },\n              {\n                name: \"Effect\",\n                value: formatDiscordText(talent.effect),\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [talent, webhook]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Cost>\n          <b>{talent.cost}</b>\n        </Cost>\n\n        <Name>\n          <b>{talent.name}</b>\n        </Name>\n\n        <PropWrapper>\n          <Prop>{talent.type ? talent.stress : \"Passive\"}</Prop>\n        </PropWrapper>\n        <Text>\n          <FormatedText text={talent.prerequisite} />\n        </Text>\n        <Text>\n          <FormatedText text={talent.effect} />\n        </Text>\n        <PropWrapper>\n          {webhook !== undefined && (\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Cast ${talent.name}`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          )}\n          {!send && (\n            <TextButton\n              text={`Send ${talent.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={talent} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default TalentView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Cost = styled.div`\n  height: auto;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: left;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  margin: 0px 5px 5px 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: var(--card-title-color);\n  text-align: center;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nimport IEntity from \"../../../data/IEntity\";\nimport { remove, updateWithCallback, createNewWithId } from \"../../../services/DatabaseService\";\n\nimport {\n  faArrowLeft,\n  faSave,\n  faTrash,\n  faExclamationTriangle,\n  faClone,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport BackButton from \"../../form_elements/BackButton\";\nimport IconButton from \"../../form_elements/IconButton\";\nimport { EditToggle, ToggleLeft, ToggleRight } from \"../ToggleStyle\";\nimport Dialog from \"../Dialog\";\n\nimport RandomTableEditView from \"../../entities/random_tables/details/RandomTableEditView\";\nimport RandomTableView from \"../../entities/random_tables/details/RandomTableView\";\nimport TalentEditView from \"../../entities/talents/details/TalentEditView\";\nimport TalentView from \"../../entities/talents/details/TalentView\";\n\ninterface $Props {\n  entity: IEntity;\n  tableName: string;\n  isNew: boolean;\n  view: string;\n}\n\nconst EntityDetail = ({ entity, tableName, isNew, view }: $Props) => {\n  const [editMode, setMode] = useState<boolean>(isNew);\n\n  const [entityObj, editEntity] = useState<IEntity>(entity);\n\n  const [showDeleteDialog, setDeleteDialog] = useState<boolean>(false);\n  const [showAlert, setAlert] = useState<boolean>(false);\n  const [message, setMessage] = useState<string>(\"\");\n  const [unsavedChanges, setUnsavedChanges] = useState<boolean>(false);\n  let history = useHistory();\n\n  const deleteEntity = (entityId: number | undefined) => {\n    remove(tableName, entityId);\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (entityObj !== entity) {\n      setUnsavedChanges(true);\n    }\n  }, [entityObj, entity]);\n\n  const updateEntity = (entityObj: IEntity, msg: string) => {\n    updateWithCallback(tableName, entityObj, (result) => {\n      if (result > 0) {\n        setUnsavedChanges(false);\n        setMessage(msg);\n        setAlert(true);\n      } else {\n        setMessage(\"Something went wrong!\");\n        setAlert(true);\n      }\n      setTimeout(() => {\n        setAlert(false);\n      }, 3000);\n    });\n  };\n\n  const duplicateEntity = (obj: IEntity) => {\n    let newObj = { ...obj };\n    delete newObj.id;\n    createNewWithId(tableName, newObj, (id) => {\n      editAndSaveEntity({ ...entity, name: entity.name + \" [Clone]\" }, \"Cloning successful!\");\n    });\n  };\n\n  const editAndSaveEntity = (entity: IEntity, msg: string) => {\n    editEntity(entity);\n    updateEntity(entity, msg);\n  };\n\n  type viewOptions = {\n    [key: string]: (props:any) => JSX.Element;\n  };\n  const views: viewOptions = {\n    TalentView: TalentView,\n    TalentEditView: TalentEditView,\n    RandomTableView: RandomTableView,\n    RandomTableEditView: RandomTableEditView,\n  };\n\n  return (\n    <>\n      {showDeleteDialog && (\n        <Dialog\n          message={`Delete ${entity.name}?`}\n          icon={faExclamationTriangle}\n          confirmeText={\"Delete\"}\n          confirmeClick={() => {\n            remove(tableName, entity.id);\n            history.goBack();\n          }}\n          abortText={\"Back\"}\n          abortClick={() => {\n            setDeleteDialog(false);\n          }}\n        />\n      )}\n      <TopBar>\n        <BackButton icon={faArrowLeft} action={() => history.goBack()} />\n        <EditToggle mode={editMode.toString()}>\n          <ToggleLeft onClick={() => setMode(false)}>View</ToggleLeft>\n          <ToggleRight onClick={() => setMode(true)}>Edit</ToggleRight>\n        </EditToggle>\n        {editMode && unsavedChanges && <Icon icon={faExclamationTriangle} />}\n        {editMode && (\n          <>\n            <IconButton\n              onClick={() => updateEntity(entityObj, \"Saved successful!\")}\n              icon={faSave}\n            />\n            <IconButton onClick={() => duplicateEntity(entityObj)} icon={faClone} />\n            <IconButton onClick={() => deleteEntity(entityObj.id)} icon={faTrash} />\n            {message && showAlert && <Message>{message}</Message>}\n          </>\n        )}\n      </TopBar>\n      {editMode\n        ? React.createElement(views[view + \"EditView\"], {\n            [view.toLocaleLowerCase()]: entityObj,\n            onEdit: (value: any) => editEntity(value),\n          })\n        : React.createElement(views[view + \"View\"], {\n            [view.toLocaleLowerCase()]: entityObj,\n            onEdit: (value: any) => editAndSaveEntity(value, \"Saved successful!\"),\n          })}\n    </>\n  );\n};\n\nexport default EntityDetail;\n\nconst TopBar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  overflow: hidden;\n  flex: 1 1;\n  width: 100%;\n  max-width: calc(100% - 20px);\n  height: 45px;\n  padding: 10px;\n\n  @media (max-width: 576px) {\n    max-width: calc(100% - 20px);\n  }\n`;\n\nconst Message = styled.div`\n  padding: 5px;\n  width: 150px;\n  height: 30px;\n  line-height: 30px;\n  border-radius: 5px;\n  float: right;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  float: right;\n  line-height: 30px;\n  display: block;\n  height: 30px;\n  padding: 10px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  text: string;\n  buttonText: string;\n  onButton: () => void;\n}\n\nconst ErrorTile = ({ text, buttonText, onButton }: $Props) => {\n  return (\n    <Tile>\n      <PropWrapper>\n        <Name>\n          <b>A problem occured!</b>\n        </Name>\n        <Text>\n          <PropTitle>Text: </PropTitle>\n          {text}\n        </Text>\n        <TextButton text={buttonText} onClick={() => onButton()} icon={faPlusCircle} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default ErrorTile;\n\nconst Tile = styled.div`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  align-content: center;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { RouteComponentProps, useHistory } from \"react-router\";\nimport Details from \"./EntityDetail\";\n\nimport { LoadingSpinner } from \"../../Loading\";\nimport ErrorTile from \"../ErrorTile\";\nimport {\n  createNewWithId,\n  recivePromise,\n  recivePromiseByAttribute,\n} from \"../../../services/DatabaseService\";\nimport IEntity from \"../../../data/IEntity\";\nimport { useCallback } from \"react\";\nimport Talent from \"../../../data/Talent\";\nimport RandomTable from \"../../../data/RandomTable\";\n\ntype TParams = { id?: string; name?: string };\n\nconst ToEntity = ({ match }: RouteComponentProps<TParams>) => {\n  let history = useHistory();\n  const [entityName, setEntityName] = useState<string>(\"\");\n  const [entity, setEntity] = useState<IEntity>();\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (entity !== undefined || error) {\n      setLoading(true);\n      setError(false);\n      setEntityName(\"\");\n      setEntity(undefined);\n    }\n    // eslint-disable-next-line\n  }, [match]);\n\n  const makeEntity = useCallback(\n    async (name: string) => {\n      let newEntity: IEntity | undefined = undefined;\n      if (match.params.name !== undefined)\n        newEntity = await recivePromiseByAttribute(name + \"s\", \"name\", match.params.name);\n      if (match.params.id !== undefined)\n        newEntity = await recivePromise(name + \"s\", +match.params.id);\n      setLoading(false);\n      if (newEntity === undefined) {\n        setEntityName(name);\n        setError(true);\n      } else {\n        setEntityName(name);\n        setEntity(newEntity);\n      }\n    },\n    [match]\n  );\n\n  useEffect(() => {\n    if (match !== undefined && entity === undefined) {\n      let newMatch: string = match.path\n        .split(\"/\")\n        .filter((match: string) => match.includes(\"-detail\"))[0]\n        .replaceAll(\"-detail\", \"\");\n      if (newMatch !== undefined) {\n        makeEntity(newMatch);\n      }\n    }\n  }, [match, makeEntity, entity]);\n\n  type entityOptions = {\n    [key: string]: IEntity;\n  };\n\n  const entities: entityOptions = {\n    talent: new Talent(0, match.params.name),\n    randomTables: new RandomTable(0, match.params.name),\n  };\n\n  const createNewEntity = () => {\n    let newEntity: IEntity = entities[entityName];\n    delete newEntity.id;\n    createNewWithId(entityName + \"s\", newEntity, (id) => {\n      history.push(`/${entityName}-detail/id/${id}`);\n    });\n  };\n\n  const capitalize = (str: string) => {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  };\n\n  return (\n    <>\n      {loading && <LoadingSpinner />}\n      {!loading && error && (\n        <ErrorTile\n          text={\"No such campaign exists. Want to creat such campaign?\"}\n          buttonText={\"Add\"}\n          onButton={() => createNewEntity()}\n        />\n      )}\n      {!error && !loading && entity !== undefined ? (\n        <Details\n          entity={entity}\n          tableName={entityName + \"s\"}\n          isNew={entity.name === \"\" ? true : false}\n          view={capitalize(entityName)}\n        />\n      ) : (\n        <></>\n      )}\n    </>\n  );\n};\n\nexport default ToEntity;\n","import Dexie from \"dexie\";\nimport RandomTable from \"../data/RandomTable\";\nimport Talent from \"../data/Talent\";\n\nexport class MyAppDatabase extends Dexie {\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  talents: Dexie.Table<Talent, number>;\n\n  constructor() {\n    super(\"SkirmishTomeDB\");\n    this.version(1).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n   \n    this.talents = this.table(\"talents\");\n    this.randomTables = this.table(\"randomTables\");\n  }\n}\n","import { MyAppDatabase } from \"../database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  style?: any;\n  onClick?: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, style, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick} style={style}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton style={style}>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  style?: any;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, style, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled} style={style}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import IEntity from \"./IEntity\";\n\nexport default class Talent implements IEntity {\n  id?: number;\n  name: string;\n  isFlaw: boolean;\n  cost: number;\n  prerequisite: string;\n  effect: string;\n  type: boolean;\n  stress: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    isFlaw?: boolean,\n    cost?: number,\n    prerequisite?: string,\n    effect?: string,\n    type?: boolean,\n    stress?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.isFlaw = isFlaw || false;\n    this.cost = cost || 0;\n    this.prerequisite = prerequisite || \"\";\n    this.effect = effect || \"\";\n    this.type = type || false;\n    this.stress = stress || \"\";\n  }\n}\n\nexport function isTalent(arg: any): arg is Talent {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"number\";\n  const isFlawCheck = arg.isFlaw !== undefined && typeof arg.isFlaw == \"boolean\";\n  const prerequisiteCheck = arg.prerequisite !== undefined && typeof arg.prerequisite == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"boolean\";\n  const stressCheck = arg.stress !== undefined && typeof arg.stress == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    costCheck &&\n    isFlawCheck &&\n    prerequisiteCheck &&\n    effectCheck &&\n    typeCheck &&\n    stressCheck\n  );\n}\n","export function useWebhook(): { hook: string; name: string } | undefined {\n  if (localStorage.getItem(\"webhook\") !== null && localStorage.getItem(\"webhook\") !== \"\") {\n    let name = \"SkirmishTome\";\n    if (localStorage.getItem(\"webhook_user\") !== null)\n      name = localStorage.getItem(\"webhook_user\") + \"\";\n    return { hook: localStorage.getItem(\"webhook\") + \"\", name: name };\n  } else return undefined;\n}\n","export const sendMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  content: string,\n  avatar?: string\n) => {\n  if (webhook !== undefined) {\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    let params = {\n      username: webhook.name !== \"\" ? webhook.name : \"SkirmishTome\",\n      avatar_url: avatar !== undefined ? avatar : \"\",\n      content: content,\n    };\n    request.send(JSON.stringify(params));\n  }\n};\n\nexport const sendEmbedMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  params: string\n) => {\n  if (webhook !== undefined) {\n    console.log(params);\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.send(params);\n  }\n};\n\nexport const formatDiscordText = (text: string): string => {\n  if (text.includes(\"[[\")) {\n    return text.replaceAll(\"[[\", \"*\").replaceAll(\"]]\", \"*\");\n  } else {\n    return text;\n  }\n};\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const rollCommand = (commands: string, krit?: boolean): { result: number; text: string } => {\n  let result = 0;\n  let text = \"\";\n\n  let newCommands = \"\";\n  commands.split(\" \").forEach((command) => {\n    if (/\\d+/g.test(command)) {\n      newCommands += command;\n    } else {\n      text += \" \" + command;\n    }\n  });\n  newCommands = newCommands.trim();\n\n  newCommands.split(\" \").forEach((command: string) => {\n    let multiplier: number = 1;\n    if (!command.startsWith(\"d\")) {\n      multiplier = parseInt(command.split(\"d\")[0]);\n      command = command.split(\"d\")[1];\n    }\n    command = command.replaceAll(\"d\", \"\");\n    if (krit) multiplier = multiplier * 2;\n\n    if (command.includes(\"+\")) {\n      result +=\n        multiplier * rollDie(parseInt(command.split(\"+\")[0])) + parseInt(command.split(\"+\")[1]);\n    } else if (command.includes(\"-\")) {\n      result +=\n        multiplier * rollDie(parseInt(command.split(\"-\")[0])) - parseInt(command.split(\"-\")[1]);\n    } else {\n      result += multiplier * rollDie(parseInt(command));\n    }\n  });\n  return { result: result, text: text };\n};\n\nexport const rollDie = (size: number): number => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory, BiSelectMultiple } from \"react-icons/bi\";\nimport {\n  GiCrystalWand,\n  GiBackpack,\n  GiWomanElfFace,\n  GiPlagueDoctorProfile,\n  GiSwordClash,\n  GiBookmarklet,\n  GiScrollUnfurled,\n  GiSolarSystem,\n  GiDjinn,\n  GiBookshelf,\n  GiDiceTwentyFacesTwenty,\n} from \"react-icons/gi\";\nimport {\n  faMeteor,\n  faIdCard,\n  faDragon,\n  faMapMarkedAlt,\n  faTable,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { MdEvent } from \"react-icons/md\";\nimport { HiUserGroup } from \"react-icons/hi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name).then((count: number) => {\n        setEntity(count > 0);\n        setLoading(false);\n      });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"spell\":\n        return <FontAwesomeIcon icon={faMeteor} />;\n      case \"item\":\n        return <GiCrystalWand />;\n      case \"gear\":\n        return <GiBackpack />;\n      case \"race\":\n      case \"subrace\":\n        return <GiWomanElfFace />;\n      case \"class\":\n      case \"subclass\":\n        return <GiPlagueDoctorProfile />;\n      case \"selection\":\n        return <BiSelectMultiple />;\n      case \"char\":\n        return <FontAwesomeIcon icon={faIdCard} />;\n      case \"monster\":\n        return <FontAwesomeIcon icon={faDragon} />;\n      case \"encounter\":\n        return <GiSwordClash />;\n      case \"campaign\":\n        return <GiBookmarklet />;\n      case \"quest\":\n        return <GiScrollUnfurled />;\n      case \"event\":\n        return <MdEvent />;\n      case \"world\":\n        return <GiSolarSystem />;\n      case \"location\":\n        return <FontAwesomeIcon icon={faMapMarkedAlt} />;\n      case \"npc\":\n        return <GiDjinn />;\n      case \"randomTable\":\n        return <FontAwesomeIcon icon={faTable} />;\n      case \"book\":\n        return <GiBookshelf />;\n      case \"group\":\n        return <HiUserGroup />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { formatDiscordText, sendEmbedMessage, sendMessage } from \"../../services/DiscordService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (SkirmishTome)\",\n        embeds: [\n          {\n            fields: [\n              {\n                name: \"Text\",\n                value: formatDiscordText(text),\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [text, webhook]);\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20(`\" + (result - value) + \"`)\" + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <Link onClick={() => history.push(link)}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </Link>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return (\n    <FormatedTextContainer>\n      {webhook !== undefined && text !== \"\" && (\n        <IconButton\n          style={{\n            backgroundColor: \"#7289da\",\n            float: \"right\",\n            padding: \"5px\",\n          }}\n          icon={faDiscord}\n          onClick={() => sendEmbedMessage(webhook, json)}\n        />\n      )}\n      {formatedText}\n    </FormatedTextContainer>\n  );\n};\n\nexport default FormatedText;\n\nconst FormatedTextContainer = styled.div``;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import IEntity from \"./IEntity\";\n\nexport default class RandomTable implements IEntity {\n  id?: number;\n  name: string;\n  header: string;\n  rows: { value: string; cells: string }[];\n  filename?: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    filename?: string,\n    header?: string,\n    rows?: { value: string; cells: string }[]\n  ) {\n    this.id = id;\n    this.filename = filename || \"\";\n    this.name = name || \"\";\n    this.header = header || \"\";\n    this.rows = rows || [];\n  }\n}\n\nexport function isRandomTable(arg: any): arg is RandomTable {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return arg && nameCheck && headerCheck && rowsCheck;\n}\n\nexport function findRandomTableFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  headerCheck: boolean;\n  rowsCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const headerCheck = arg.header !== undefined && typeof arg.header == \"string\";\n  const rowsCheck = arg.rows !== undefined && Array.isArray(arg.rows);\n\n  return {\n    nameCheck: nameCheck,\n    headerCheck: headerCheck,\n    rowsCheck: rowsCheck,\n  };\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n"],"sourceRoot":""}