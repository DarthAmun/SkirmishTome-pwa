{"version":3,"sources":["../node_modules/peerjs/dist sync","services/OptionService.tsx","components/p2p/P2PReciver.tsx","components/options/GeneralOptions.tsx","components/options/TalentsOptions.tsx","components/form_elements/FileField.tsx","components/form_elements/ImportField.tsx","components/options/DiscordOptions.tsx","services/CsvService.tsx","components/options/SpellsOptions.tsx","components/options/RacesOptions.tsx","components/options/Options.tsx","database/SkirmishDB.tsx","services/DatabaseService.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","hooks/webhookHook.tsx","services/DiscordService.tsx","components/form_elements/StringField.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","data/Talent.tsx","data/SpellValues.tsx","services/DiceService.tsx","components/general_elements/LinkCheck.tsx","data/Spell.tsx","data/Race.tsx","components/general_elements/TabBar.tsx","components/general_elements/SmallFormatedText.tsx","components/entities/talents/TalentTile.tsx","data/Power.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","scanImportFileTest","json","fileName","callback","a","promList","Array","isArray","forEach","obj","isTalent","push","saveNew","Promise","all","exportAllFromTable","tableName","filename","reciveAll","entity","document","createElement","download","href","encodeURIComponent","JSON","stringify","target","body","appendChild","click","removeChild","exportAll","reciveAllPromise","spells","powers","talents","races","P2PReciver","changeData","reload","useState","peerId","setId","loading","isLoading","error","setError","state","setState","Peer","undefined","host","secure","peer","useEffect","conn","connect","on","data","console","log","Loading","StringField","value","label","onChange","Icon","icon","faExclamationCircle","TextButton","text","faCheck","onClick","styled","FontAwesomeIcon","theme","main","highlight","GeneralOptions","useTheme","setTheme","General","OptionSection","SelectionTitle","Button","darkTheme","lightTheme","localStorage","setItem","div","tile","color","backgroundColor","boxShadow","button","buttons","input","TalentsOptions","amount","triggerDeleteAll","send","setSend","OptionTab","SectionRow","SectionText","IconButton","faFileExport","faTrashAlt","faPaperPlane","P2PSender","mode","ImportModus","FileField","accept","isMulti","transform","Field","LabelText","Input","files","type","multiple","ImportField","modus","setFiles","Files","faFileImport","file","fileList","from","changeFile","map","index","key","FileTile","succCount","setSucc","maxCount","setMax","scanImportFile","listOfNew","newMax","length","NORMAL","newEntitiy","Object","entries","newTableName","bulkList","filter","saveNewFromList","name","fileReader","FileReader","onloadend","content","result","parse","toString","readAsText","FileWrapper","completed","Math","round","isLabelVisible","bgcolor","height","margin","DiscordOptions","getItem","webhook","setWebhook","webhookUser","setWebhookUser","saveInDB","tablename","listOfIEntity","SpellsOptions","RacesOptions","Options","activeTab","setTab","talentAmount","setTalentAmount","spellAmount","setSpellAmount","raceAmount","setRaceAmount","isReload","setData","readString","usePapaParse","useCSVDownloader","CSVDownloader","Type","csvBackup","setBackup","handleSpellCsvUpload","worker","complete","results","csv","listOfSpells","slice","row","newSpell","Spell","SpellSource","find","SpellCastTime","SpellRite","SpellDuration","SpellRange","SpellSchool","SpellScalingEffect","SpellTarget","SpellAoeRadius","SpellDamage","SpellDirectEffects","SpellLevel","SpellProjectileType","SpellProjectileNumber","SpellDamageType","SpellTargetingType","SpellLosRange","SpellDrainType","SpellPureDamage","SpellSize","SpellHp","toLowerCase","calcDrain","scanImportedSpellCsv","handlePowersCsvUpload","listOfPowers","newPower","Power","scanImportedPowerCsv","handleTalentsCsvUpload","listOfTalents","newTalent","Talent","scanImportedTalentCsv","handleRacesCsvUpload","listOfRaces","split","t","trim","newRace","Race","scanImportedRaceCsv","reciveCount","backup","concat","spell","makeCsv","talent","race","deleteAll","returnTile","TalentTile","TabBar","children","tab","OptionSectionLarge","Date","getFullYear","getMonth","bom","config","delimiter","SkirmishDB","randomTables","skills","version","stores","table","Dexie","updateWithCallback","db","open","then","update","finally","close","put","prom","entities","refinedEntities","bulkPut","remove","delete","toArray","array","count","reciveCountPromise","recivePromiseByAttribute","where","equalsIgnoreCase","recivePromise","get","recivePromiseByAttributeCount","equals","applyFilters","filters","test","fieldName","hasTag","fieldPart","includes","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAllFilteredPromise","reciveAttributeSelectionPromise","attribute","orderBy","uniqueKeys","createNewWithId","clear","exportFilteredFromTable","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","floatLeft","disabled","style","SimpleButton","left","DisabledSimpleButton","hoverColor","useWebhook","hook","sendMessage","avatar","request","XMLHttpRequest","setRequestHeader","params","username","avatar_url","sendEmbedMessage","formatDiscordText","replaceAll","placeholder","setName","setPeer","brokerId","min","max","password","characters","i","floor","random","generateBrokerId","newPeer","errorData","disconnected","destroyed","reconnect","TalentCategory","category","isFlaw","cost","prerequisite","effect","stress","trigger","triggerFrequency","ticks","this","magical","arg","nameCheck","costCheck","isFlawCheck","prerequisiteCheck","effectCheck","typeCheck","stressCheck","triggerCheck","triggerFrequencyCheck","ticksCheck","drain","NONE","ACID","NECROTIC","FROST","FIRE","LIGHTNING","RADIANT","ARCANE","POISON","getAll","HALFMAGICSTRUCTUREHP","HALFMAGICSTRUCTUREDOUBLEHP","HALFMAGICSTRUCTURETRIPPLEHP","MAGICSTRUCTUREHP","MAGICSTRUCTUREDOUBLEHP","DOUBLEMAGICESTRUCTUREHP","MAGICHP","MAGICDOUBLEHP","MAGICTRIPPLEHP","MAGICQUADRUPLEHP","HALFMAGICSQUARED","MAGICSQUARED","DOUBLEMAGICSQUARED","TRIPPLEMAGICSQUARED","HALFMAGICQUBED","MAGICQUBED","DOUBLEMAGICQUBED","TRIPPLEMAGICQUBED","DIFFICULTTERRAIN","LIFELEECH","COMMUNICATE","CONFUSIONSTUNBLIND","HEX","IMPAIRMOVEMENTVISION","MOVEFEARROOT","DOT","INCAPACITATE","SPHERE","KNOCKDOWN","WALLBARRIERCONSTRUCTSUMMON","TELEPORT","HEAL","BUFFILLUSIONSHIELD","CHARMCONTROLINFLUENCE","TRANSFORM","MYSTBRADIUS","MYSTBPROJECTILES","PROJECTILERADIUSPERVARIABLE","PROJECTILEPERVARIABLE","PROJECTILEPERTHREEMAGIC","PROJECTILEPERTWOMAGIC","PROJECTILERADIUSPERTWOMAGIC","PROJECTILERADIUSPERTHREEMAGIC","PLUSPROJECTILEPERTWOMAGIC","PLUSPROJECTILEPERFOURMAGIC","PLUSPROJECTILEPERTHREEMAGIC","MYSTBRADIUSEFFECT","PLUSHALFMYSTBRADIUSEFFECT","PLUSHALFMYSTBRADIUS","PLUSMYSTBRADIUS","PLUSMYSTBRADIUSEFFECT","COMBINED","PHYSICAL","STUN","PURE","FATIGUE","AGONY","ONEPRMAGIC","TWOPRMAGIC","THREEPRMAGIC","FOURPRMAGIC","FIVEPRMAGIC","ONE","TWO","THREE","FOUR","FIVE","ONEDFOUR","ONEDSIX","ONEDEIGHT","ONEDTEN","ONEDTWELVE","ONEDTWENTY","TWODFOUR","TWODSIX","TWODEIGHT","TWODTEN","TWODTWELVE","TWODTWENTY","THREEDFOUR","THREEDSIX","THREEDEIGHT","THREEDTEN","THREEDTWELVE","FOURDFOUR","FOURDSIX","FOURDEIGHT","FOURDTEN","FIVEDFOUR","FIVEDSIX","FIVEDEIGHT","SIXDFOUR","MYSTB","MYSTBDOUBLE","QUARTERMAGIC","HALFMAGIC","MAGIC","COLLETERAL","ONEMETER","TWOMETERS","THREEMETERS","HALFMAGMETERS","MAGMETERS","MAGTIMESTWOMETERS","VARIABLE","ONEMAGIC","TWOMAGIC","THREEMAGIC","FOURMAGIC","FIVEMAGIC","SCALING","BALL","MISSILE","BOLT","RAY","SPRAY","LASSO","getAllSingle","DIRECTTARGET","AURATARGETING","INDIRECTTARGETING","SIXMINUSMYSTBROUNDS","NINETHREE","NINETHREECHANNEL","SEVENTHREE","FIVETHREE","DRAINCHENNEL","DRAINTHREE","MAGIFAITHHOURS","getAllPhysical","getAllStun","SIX","SEVEN","EIGHT","NINE","EARTH","AIR","DIVINE","DEMONIC","DRUIDIC","PSYCHIC","TOUCH","SONIC","RADIUS90","RADIUS360","LOSAURA","LOSMANIPULATE","LOSPOINT","VERBAL","SOMATIC","MENTAL","RITUAL","SINGLE","DAOE","MULTI","AOE","CASTER","TARGET","LINE","CONCENTRATION","INSTANTANEOUS","PERMANENT","FIXEDTICKS","FIXEDROUNDS","FIXEDHOURS","CHANNEL","TRANSMUTATION","EVOCATION","FORTIFICATION","ILLUSION","CONJURATION","NECROMANCY","ENCHANTMENT","rollCommand","commands","krit","newCommands","command","rolls","fullCommand","commandSplits","part","multiplier","startsWith","parseInt","com","newRoll","rollDie","size","LinkCheck","setLoading","entitiyFound","setEntity","newType","catch","formatIcon","source","castTime","rite","duration","durationText","range","school","mastery","resist","masteryDrain","scalingEffect","spellTarget","aoeRadius","damage","directEffects","level","projectileType","projectileNumber","damageType","targetingType","losRange","drainType","pureDamage","hp","chargeable","needsMaterial","glyph","abilityModifier","stamina","flaws","Bar","child","Tab","isActive","props","SmallFormatedText","formatedText","setFormatedText","history","useHistory","cut","str","cutStart","cutEnd","substr","rollDiscord","useCallback","newCommand","fail","rollString","formatLink","parts","formattedParts","codePart","linkParts","linkEntity","TextPart","DiscordPart","link","Link","formatTable","textPart","tableRows","isHead","cells","cell","TableHeadProp","TableProp","formatText","indexOf","FormatedTextContainer","span","backgroundColorLink","th","td","Tile","to","$isflaw","Cost","Name","PropWrapper","Prop","isAdept","path","power"],"mappings":"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","file":"static/js/9.9fdf9fa0.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 108;","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Talent, { isTalent } from \"../data/Talent\";\n\nexport const scanImportFileTest = async (\n  json: any,\n  fileName: string,\n  callback: () => void\n) => {\n  let promList: Promise<any>[] = [];\n\n  if (!Array.isArray(json)) {\n    json = [json];\n  }\n\n  json.forEach((obj: any) => {\n    if (isTalent(obj)) {\n      promList.push(saveNew(\"talents\", obj as Talent, fileName));\n    }\n  });\n  await Promise.all(promList);\n  callback();\n};\n\n// const scanForFormatErrors = (obj: any) => {\n//   const itemFormatErrors = findItemFromattError(obj);\n//   let itemFailCount: number = 0;\n//   for (const value of Object.entries(itemFormatErrors)) {\n//     if (!value[1]) itemFailCount++;\n//   }\n//   const gearFormatErrors = findGearFormattError(obj);\n//   let gearFailCount: number = 0;\n//   for (const value of Object.entries(gearFormatErrors)) {\n//     if (!value[1]) gearFailCount++;\n//   }\n//   const spellFormatErrors = findSpellFormattError(obj);\n//   let spellFailCount: number = 0;\n//   for (const value of Object.entries(spellFormatErrors)) {\n//     if (!value[1]) spellFailCount++;\n//   }\n//   const monsterFormatErrors = findMonsterFormattError(obj);\n//   let monsterFailCount: number = 0;\n//   for (const value of Object.entries(monsterFormatErrors)) {\n//     if (!value[1]) monsterFailCount++;\n//   }\n//   const raceFormatErrors = findRaceFormattError(obj);\n//   let raceFailCount: number = 0;\n//   for (const value of Object.entries(raceFormatErrors)) {\n//     if (!value[1]) raceFailCount++;\n//   }\n//   const subraceFormatErrors = findSubraceFormattError(obj);\n//   let subraceFailCount: number = 0;\n//   for (const value of Object.entries(subraceFormatErrors)) {\n//     if (!value[1]) subraceFailCount++;\n//   }\n//   const classFormatErrors = findClassFormattError(obj);\n//   let classFailCount: number = 0;\n//   for (const value of Object.entries(classFormatErrors)) {\n//     if (!value[1]) classFailCount++;\n//   }\n//   const subclassFormatErrors = formattSubclassFromattError(obj);\n//   let subclassFailCount: number = 0;\n//   for (const value of Object.entries(subclassFormatErrors)) {\n//     if (!value[1]) subclassFailCount++;\n//   }\n//   const selectionFormatErrors = findSelectionFormattError(obj);\n//   let selectionFailCount: number = 0;\n//   for (const value of Object.entries(selectionFormatErrors)) {\n//     if (!value[1]) selectionFailCount++;\n//   }\n\n//   let errors: any[] = [];\n//   if (\n//     itemFailCount <= gearFailCount &&\n//     itemFailCount <= spellFailCount &&\n//     itemFailCount <= raceFailCount &&\n//     itemFailCount <= subraceFailCount &&\n//     itemFailCount <= classFailCount &&\n//     itemFailCount <= subclassFailCount &&\n//     itemFailCount <= selectionFailCount &&\n//     itemFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ item: itemFormatErrors });\n//   }\n//   if (\n//     gearFailCount <= itemFailCount &&\n//     gearFailCount <= spellFailCount &&\n//     gearFailCount <= raceFailCount &&\n//     gearFailCount <= subraceFailCount &&\n//     gearFailCount <= classFailCount &&\n//     gearFailCount <= subclassFailCount &&\n//     gearFailCount <= selectionFailCount &&\n//     gearFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ gear: gearFormatErrors });\n//   }\n//   if (\n//     spellFailCount <= itemFailCount &&\n//     spellFailCount <= gearFailCount &&\n//     spellFailCount <= raceFailCount &&\n//     spellFailCount <= subraceFailCount &&\n//     spellFailCount <= classFailCount &&\n//     spellFailCount <= subclassFailCount &&\n//     spellFailCount <= selectionFailCount &&\n//     spellFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ spell: spellFormatErrors });\n//   }\n//   if (\n//     monsterFailCount <= itemFailCount &&\n//     monsterFailCount <= gearFailCount &&\n//     monsterFailCount <= raceFailCount &&\n//     monsterFailCount <= subraceFailCount &&\n//     monsterFailCount <= classFailCount &&\n//     monsterFailCount <= subclassFailCount &&\n//     monsterFailCount <= selectionFailCount &&\n//     monsterFailCount <= spellFailCount\n//   ) {\n//     errors.push({ monster: monsterFormatErrors });\n//   }\n//   if (\n//     raceFailCount <= itemFailCount &&\n//     raceFailCount <= gearFailCount &&\n//     raceFailCount <= monsterFailCount &&\n//     raceFailCount <= subraceFailCount &&\n//     raceFailCount <= classFailCount &&\n//     raceFailCount <= subclassFailCount &&\n//     raceFailCount <= selectionFailCount &&\n//     raceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ race: raceFormatErrors });\n//   }\n//   if (\n//     subraceFailCount <= itemFailCount &&\n//     subraceFailCount <= gearFailCount &&\n//     subraceFailCount <= monsterFailCount &&\n//     subraceFailCount <= raceFailCount &&\n//     subraceFailCount <= classFailCount &&\n//     subraceFailCount <= subclassFailCount &&\n//     subraceFailCount <= selectionFailCount &&\n//     subraceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subrace: subraceFormatErrors });\n//   }\n//   if (\n//     classFailCount <= itemFailCount &&\n//     classFailCount <= gearFailCount &&\n//     classFailCount <= monsterFailCount &&\n//     classFailCount <= raceFailCount &&\n//     classFailCount <= subraceFailCount &&\n//     classFailCount <= subclassFailCount &&\n//     classFailCount <= selectionFailCount &&\n//     classFailCount <= spellFailCount\n//   ) {\n//     errors.push({ class: classFormatErrors });\n//   }\n//   if (\n//     subclassFailCount <= itemFailCount &&\n//     subclassFailCount <= gearFailCount &&\n//     subclassFailCount <= monsterFailCount &&\n//     subclassFailCount <= raceFailCount &&\n//     subclassFailCount <= subraceFailCount &&\n//     subclassFailCount <= classFailCount &&\n//     subclassFailCount <= selectionFailCount &&\n//     subclassFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subclass: subclassFormatErrors });\n//   }\n//   if (\n//     selectionFailCount <= itemFailCount &&\n//     selectionFailCount <= gearFailCount &&\n//     selectionFailCount <= monsterFailCount &&\n//     selectionFailCount <= raceFailCount &&\n//     selectionFailCount <= subraceFailCount &&\n//     selectionFailCount <= classFailCount &&\n//     selectionFailCount <= subclassFailCount &&\n//     selectionFailCount <= spellFailCount\n//   ) {\n//     errors.push({ selection: selectionFormatErrors });\n//   }\n//   return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n// };\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let entity = { [tableName]: all };\n    let contentType = \"application/json;charset=utf-8;\";\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href =\n      \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(entity));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  const spells = await reciveAllPromise(\"spells\");\n  const powers = await reciveAllPromise(\"powers\");\n  const talents = await reciveAllPromise(\"talents\");\n  const races = await reciveAllPromise(\"races\");\n\n  let all: any = {\n    spells: spells,\n    powers: powers,\n    talents: talents,\n    races: races,\n  };\n\n  let contentType = \"application/json;charset=utf-8;\";\n\n  var a = document.createElement(\"a\");\n  a.download = filename;\n  a.href =\n    \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n  a.target = \"_blank\";\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../services/OptionService\";\nimport IEntity from \"../../data/IEntity\";\n\nimport {\n  faCheck,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thedndtome.com\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField\n        value={peerId}\n        label={\"ID to recive from\"}\n        onChange={(id) => setId(id)}\n      />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton\n            text={\"Accept\"}\n            icon={faCheck}\n            onClick={() => acceptData()}\n          />\n          <TextButton\n            text={\"Decline\"}\n            icon={faCheck}\n            onClick={() => declineData()}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../theme/Theme\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst TalentsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Talents?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"talents\", \"SkirmishTome_talents.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Talents?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"talents\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all talents`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"talents\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default TalentsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, accept, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} accept={accept} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport FileField from \"./FileField\";\nimport IEntity from \"../../data/IEntity\";\nimport { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport { saveNewFromList } from \"../../services/DatabaseService\";\n\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nexport enum ImportModus {\n  NORMAL,\n}\n\ninterface $Props {\n  modus: ImportModus;\n}\n\nconst ImportField = ({ modus }: $Props) => {\n  const [files, setFiles] = useState<File[]>([]);\n\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      setFiles(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\".json\"}\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n      <Files>\n        {files &&\n          files.map((file: File, index: number) => (\n            <FileTile key={index} modus={modus} file={file} />\n          ))}\n      </Files>\n    </>\n  );\n};\n\nexport default ImportField;\n\ninterface $FileProps {\n  file: File;\n  modus: ImportModus;\n}\n\nconst FileTile = ({ file, modus }: $FileProps) => {\n  const [succCount, setSucc] = useState<number>(0);\n  const [maxCount, setMax] = useState<number>(0);\n\n  const scanImportFile = async (json: any, fileName: string) => {\n    console.log(\"Start 5eTools Json interpreting \" + fileName);\n\n    let listOfNew: { tableName: string; newEntitiy: IEntity }[] = [];\n\n    let newMax: number = 0;\n    for (const [key, value] of Object.entries(json)) {\n      if (Array.isArray(value)) {\n        newMax += value.length;\n        if (modus === ImportModus.NORMAL) {\n          // eslint-disable-next-line\n          value.forEach((obj: any) => listOfNew.push({ tableName: key, newEntitiy: obj }));\n        }\n      }\n    }\n    setMax(newMax);\n\n    while (listOfNew.length > 0) {\n      let newTableName = listOfNew[0].tableName;\n      let bulkList: IEntity[] = listOfNew\n        .filter((newEntitiy) => newEntitiy.tableName === newTableName)\n        .map((entity: { tableName: string; newEntitiy: IEntity }) => {\n          return entity.newEntitiy;\n        });\n      await saveNewFromList(newTableName, bulkList, fileName);\n      listOfNew = listOfNew.filter((entity) => entity.tableName !== newTableName);\n      setSucc(newMax - listOfNew.length);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Start Filereader \" + file.name);\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        let json = JSON.parse(content.toString());\n        console.log(\"Json loaded from \" + file.name);\n        scanImportFile(json, file.name);\n      }\n    };\n    fileReader.readAsText(file);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file]);\n\n  return (\n    <FileWrapper>\n      {file.name} {succCount}/{maxCount}\n      <ProgressBar\n        completed={Math.round((succCount / maxCount) * 100)}\n        isLabelVisible={false}\n        bgcolor={\"#F55C5C\"}\n        height={\"5px\"}\n        margin={\"5px\"}\n      />\n    </FileWrapper>\n  );\n};\n\nconst Files = styled.div`\n  flex: 1 1 100%;\n`;\n\nconst FileWrapper = styled.div`\n  width: clac(100% - 20px);\n  height: 50px;\n  padding: 10px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport StringField from \"../form_elements/StringField\";\n\nconst DiscordOptions = () => {\n  const [webhook, setWebhook] = useState<string>(localStorage.getItem(\"webhook\") + \"\");\n  const [webhookUser, setWebhookUser] = useState<string>(localStorage.getItem(\"webhook_user\") + \"\");\n\n  useEffect(() => {\n    if (webhook !== localStorage.getItem(\"webhook\")) localStorage.setItem(\"webhook\", webhook);\n  }, [webhook]);\n\n  useEffect(() => {\n    if (webhookUser !== localStorage.getItem(\"webhook_user\"))\n      localStorage.setItem(\"webhook_user\", webhookUser);\n  }, [webhookUser]);\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Discord Webhook</SelectionTitle>\n        <StringField value={webhookUser} label=\"PlayerName\" onChange={setWebhookUser} />\n        <StringField value={webhook} label=\"Webhook\" onChange={setWebhook} />\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default DiscordOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import IEntity from \"../data/IEntity\";\nimport Power from \"../data/Power\";\nimport Race from \"../data/Race\";\nimport Spell from \"../data/Spell\";\nimport {\n  SpellSource,\n  SpellRite,\n  SpellDuration,\n  SpellRange,\n  SpellSchool,\n  SpellTarget,\n  SpellDrainType,\n  SpellLevel,\n  SpellCastTime,\n  SpellDamage,\n  SpellScalingEffect,\n  SpellAoeRadius,\n  SpellDirectEffects,\n  SpellProjectileType,\n  SpellProjectileNumber,\n  SpellDamageType,\n  SpellTargetingType,\n  SpellLosRange,\n  SpellSize,\n  SpellPureDamage,\n  SpellHp,\n} from \"../data/SpellValues\";\nimport Talent from \"../data/Talent\";\nimport { saveNewFromList } from \"./DatabaseService\";\n\nexport const scanImportedSpellCsv = (csv: Array<any>, filename: string) => {\n  let listOfSpells: Array<Spell> = [];\n  console.log(\"Raw\", csv);\n  csv.slice(1).forEach((row: Array<string>) => {\n    if (row.length > 1) {\n      let newSpell = new Spell(\n        0,\n        row[0],\n        SpellSource.find(row[1]),\n        SpellCastTime.find(row[24]),\n        SpellRite.find(row[4]),\n        SpellDuration.find(row[23]),\n        \"\",\n        SpellRange.find(row[7]),\n        SpellSchool.find(row[25]),\n        row[27],\n        row[28],\n        row[31],\n        0,\n        +row[29],\n        SpellScalingEffect.find(row[12]),\n        SpellTarget.find(row[3]),\n        SpellAoeRadius.find(row[9]),\n        [\n          SpellDamage.find(row[13]),\n          SpellDamage.find(row[14]),\n          SpellDamage.find(row[15]),\n        ],\n        SpellDirectEffects.find(row[19]),\n        SpellLevel.find(row[2]),\n        SpellProjectileType.find(row[10]),\n        SpellProjectileNumber.find(row[11]),\n        SpellDamageType.find(row[17]),\n        SpellTargetingType.find(row[16]),\n        SpellLosRange.find(row[8]),\n        SpellDrainType.find(row[22]),\n        SpellPureDamage.find(row[18]),\n        SpellSize.find(row[21]),\n        SpellHp.find(row[20]),\n        row[30]?.toLowerCase() === \"yes\" ? true : false,\n        row[6]?.toLowerCase() === \"yes\" ? true : false,\n        row[5]?.toLowerCase() === \"yes\" ? true : false\n      );\n      listOfSpells.push(Spell.calcDrain(newSpell));\n    }\n  });\n  console.log(\"Processed Spells\", listOfSpells);\n  saveInDB(\"spells\", listOfSpells, filename);\n};\n\nexport const scanImportedRaceCsv = (csv: Array<any>, filename: string) => {\n  let listOfRaces: Array<Race> = [];\n  console.log(\"Raw\", csv);\n  csv.slice(1).forEach((row: Array<string>) => {\n    if (row.length > 1) {\n      const talents = row[6].split(\",\").map((t) => t.trim());\n      let newRace = new Race(\n        0,\n        row[0],\n        +row[1],\n        row[4],\n        row[3],\n        +row[2],\n        talents\n      );\n      listOfRaces.push(newRace);\n    }\n  });\n  console.log(\"Processed Races\", listOfRaces);\n  saveInDB(\"races\", listOfRaces, filename);\n};\n\nexport const scanImportedTalentCsv = (csv: Array<any>, filename: string) => {\n  let listOfTalents: Array<Talent> = [];\n  console.log(\"Raw\", csv);\n  csv.slice(1).forEach((row: Array<string>) => {\n    if (row.length > 1) {\n      let newTalent = new Talent(\n        0,\n        row[0],\n        row[10],\n        row[2] === \"Flaw\",\n        +row[3],\n        row[5],\n        row[6],\n        false,\n        \"?\",\n        row[9],\n        \"?\",\n        0\n      );\n      listOfTalents.push(newTalent);\n    }\n  });\n  console.log(\"Processed Talents\", listOfTalents);\n  saveInDB(\"talents\", listOfTalents, filename);\n};\n\nexport const scanImportedPowerCsv = (csv: Array<any>, filename: string) => {\n  let listOfPowers: Array<Power> = [];\n  console.log(\"Raw\", csv);\n  csv.slice(1).forEach((row: Array<string>) => {\n    if (row.length > 1) {\n      let newPower = new Power(\n        0,\n        row[0],\n        row[8] === \"-\",\n        row[7],\n        +row[2],\n        row[3],\n        row[4],\n        row[5] === \"Active\",\n        \"?\",\n        row[6]\n      );\n      listOfPowers.push(newPower);\n    }\n  });\n  console.log(\"Processed Powers\", listOfPowers);\n  saveInDB(\"powers\", listOfPowers, filename);\n};\n\nexport const saveInDB = async (\n  tablename: string,\n  listOfIEntity: Array<IEntity>,\n  filename: string\n) => {\n  let listOfNew = [...listOfIEntity];\n  await saveNewFromList(tablename, listOfNew, filename);\n  console.log(\"Done saving\");\n};\n\n// export const parseRowEntry = (entry: string): number => {\n//   return parseInt(\n//     entry.replaceAll(\"€\", \"\").trim().replaceAll(\".\", \"\").replaceAll(\",\", \"\")\n//   );\n// };\n\n// export const updateListsWith = (bookeeEntryJson: BookeeEntry[]) => {\n//   bookeeEntryJson.forEach((entry: BookeeEntry) => {\n//     reciveAllByAttributes(\n//       \"[dateDay+dateMonth+dateYear]\",\n//       [[entry.dateDay, entry.dateMonth, entry.dateYear]],\n//       (data: any[]) => {\n//         let isPresent = false;\n//         data.forEach((dat: any) => {\n//           const compDat = { ...dat };\n//           delete compDat[\"id\"];\n//           if (JSON.stringify(compDat) === JSON.stringify(entry))\n//             isPresent = true;\n//         });\n//         if (!isPresent) {\n//           console.log(\n//             `New Entry on ${\n//               (entry.dateDay, entry.dateMonth, entry.dateYear)\n//             } will be saved.`\n//           );\n//           saveNew(entry);\n//         }\n//       }\n//     );\n//   });\n// };\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst SpellsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Spells?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"spells\", \"SkirmishTome_Spells.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Spells?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"spells\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all Spells`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"Spells\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SpellsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-align: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst RacesOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Races?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"races\", \"SkirmishTome_Races.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Races?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"races\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all Races`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"Races\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default RacesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { exportAll } from \"../../services/OptionService\";\nimport {\n  deleteAll,\n  reciveAll,\n  reciveCount,\n} from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport P2PReciver from \"../p2p/P2PReciver\";\n\nimport Talent, { isTalent } from \"../../data/Talent\";\n\nimport { faFileExport, faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../general_elements/TabBar\";\nimport IconButton from \"../form_elements/IconButton\";\nimport TalentTile from \"../entities/talents/TalentTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport TalentsOptions from \"./TalentsOptions\";\nimport ImportField, { ImportModus } from \"../form_elements/ImportField\";\nimport DiscordOptions from \"./DiscordOptions\";\nimport { useCSVDownloader, usePapaParse } from \"react-papaparse\";\nimport FileField from \"../form_elements/FileField\";\nimport { scanImportedTalentCsv, scanImportedPowerCsv, scanImportedRaceCsv, scanImportedSpellCsv } from \"../../services/CsvService\";\nimport Spell from \"../../data/Spell\";\nimport Race from \"../../data/Race\";\nimport SpellsOptions from \"./SpellsOptions\";\nimport RacesOptions from \"./RacesOptions\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [talentAmount, setTalentAmount] = useState<number>(0);\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  const { readString } = usePapaParse();\n  const { CSVDownloader, Type } = useCSVDownloader();\n  const [csvBackup, setBackup] = useState<any>();\n\n  const handleSpellCsvUpload = (files: any) => {\n    const file: File = files[0];\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        readString(content.toString(), {\n          worker: true,\n          complete: (results) => {\n            console.log(\"Csv loaded from \" + file.name);\n            const csv: Array<any> = results.data;\n            console.log(csv);\n            scanImportedSpellCsv(csv, file.name);\n            console.log(\"---------\");\n          },\n        });\n      }\n    };\n    fileReader.readAsText(file);\n  };\n\n  const handlePowersCsvUpload = (files: any) => {\n    const file: File = files[0];\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        readString(content.toString(), {\n          worker: true,\n          complete: (results) => {\n            console.log(\"Csv loaded from \" + file.name);\n            const csv: Array<any> = results.data;\n            console.log(csv);\n            scanImportedPowerCsv(csv, file.name);\n            console.log(\"---------\");\n          },\n        });\n      }\n    };\n    fileReader.readAsText(file);\n  };\n\n  const handleTalentsCsvUpload = (files: any) => {\n    const file: File = files[0];\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        readString(content.toString(), {\n          worker: true,\n          complete: (results) => {\n            console.log(\"Csv loaded from \" + file.name);\n            const csv: Array<any> = results.data;\n            console.log(csv);\n            scanImportedTalentCsv(csv, file.name);\n            console.log(\"---------\");\n          },\n        });\n      }\n    };\n    fileReader.readAsText(file);\n  };\n\n  const handleRacesCsvUpload = (files: any) => {\n    const file: File = files[0];\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        readString(content.toString(), {\n          worker: true,\n          complete: (results) => {\n            console.log(\"Csv loaded from \" + file.name);\n            const csv: Array<any> = results.data;\n            console.log(csv);\n            scanImportedRaceCsv(csv, file.name);\n            console.log(\"---------\");\n          },\n        });\n      }\n    };\n    fileReader.readAsText(file);\n  };\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"talents\", (result: number) => {\n        setTalentAmount(result);\n      });\n      let backup: any[] = [];\n      reciveAll(\"spells\", (result: any[]) => {\n        setSpellAmount(result.length);\n        backup.push([\"Spell\"].concat(Object.keys(new Spell())));\n        result.forEach((spell: Spell) => {\n          backup.push([\"\"].concat(Spell.makeCsv(spell)));\n        });\n      });\n      reciveAll(\"talents\", (result: any[]) => {\n        setTalentAmount(result.length);\n        backup.push([\"Talent\"].concat(Object.keys(new Talent())));\n        result.forEach((talent: Talent) => {\n          backup.push([\"\"].concat(Talent.makeCsv(talent)));\n        });\n      });\n      reciveAll(\"races\", (result: any[]) => {\n        setRaceAmount(result.length);\n        backup.push([\"Race\"].concat(Object.keys(new Race())));\n        result.forEach((race: Race) => {\n          backup.push([\"\"].concat(Race.makeCsv(race)));\n        });\n      });\n      setBackup(backup);\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isTalent(entity)) {\n      return <TalentTile key={index} talent={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  return (\n    <>\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <ImportField modus={ImportModus.NORMAL} />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAll(\"SkirmishTome_all.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <TabBar\n        children={[\n          \"General\",\n          \"Spells\",\n          \"Races\",\n          \"Talents\",\n          \"Discord\",\n          \"Receive\",\n          \"CSV Imports\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Spells\" && (\n        <SpellsOptions\n          amount={spellAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Races\" && (\n        <RacesOptions amount={raceAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Talents\" && (\n        <TalentsOptions\n          amount={talentAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Discord\" && <DiscordOptions />}\n      {activeTab === \"Receive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {activeTab === \"CSV Imports\" && (\n        <OptionTab>\n          <OptionSection>\n            <CSVDownloader\n              type={Type.Button}\n              filename={\n                \"CsvBackup_\" +\n                new Date().getFullYear() +\n                \".\" +\n                (new Date().getMonth() + 1)\n              }\n              bom={true}\n              config={{\n                delimiter: \";\",\n              }}\n              data={csvBackup}\n            >\n              Download\n            </CSVDownloader>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import Spell CSV</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              accept={\".csv\"}\n              icon={faFileImport}\n              onChange={(file) => handleSpellCsvUpload(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import Races CSV</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              accept={\".csv\"}\n              icon={faFileImport}\n              onChange={(file) => handleRacesCsvUpload(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import Talents CSV</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              accept={\".csv\"}\n              icon={faFileImport}\n              onChange={(file) => handleTalentsCsvUpload(file)}\n            />\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import Powers CSV</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              accept={\".csv\"}\n              icon={faFileImport}\n              onChange={(file) => handlePowersCsvUpload(file)}\n            />\n          </OptionSection>\n        </OptionTab>\n      )}\n      {/* {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })} */}\n    </>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-align: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import Dexie from \"dexie\";\nimport Power from \"../data/Power\";\nimport Race from \"../data/Race\";\nimport RandomTable from \"../data/RandomTable\";\nimport Skill from \"../data/Skill\";\nimport Spell from \"../data/Spell\";\nimport Talent from \"../data/Talent\";\n\nexport class SkirmishDB extends Dexie {\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  talents: Dexie.Table<Talent, number>;\n  races: Dexie.Table<Race, number>;\n  spells: Dexie.Table<Spell, number>;\n  powers: Dexie.Table<Power, number>;\n  skills: Dexie.Table<Skill, number>;\n\n  constructor() {\n    super(\"SkirmishTomeDB\");\n    this.version(1).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(2).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(3).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery,resist, drain\",\n    });\n    this.version(4).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n    });\n    this.version(5).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n      powers:\n        \"++id, name, source, isAdept, path, cost, prerequisite, effect, type, stress, ticks\",\n    });\n    this.version(6).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n      powers:\n        \"++id, name, source, isAdept, path, cost, prerequisite, effect, type, stress, ticks\",\n      skills:\n        \"++id, name, source, details, die, bonus, mod, disadvantage, advantage\",\n    });\n\n    this.talents = this.table(\"talents\");\n    this.spells = this.table(\"spells\");\n    this.races = this.table(\"races\");\n    this.powers = this.table(\"powers\");\n    this.skills = this.table(\"skills\");\n    this.randomTables = this.table(\"randomTables\");\n  }\n}\n","import { SkirmishDB } from \"../database/SkirmishDB\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\n// export const saveNewFromList = (tableName: string, entities: BookeeEntry[]) => {\n//   const db = new BookeeDB();\n//   db.open()\n//     .then(async function () {\n//       const refinedEntities = (entities as BookeeEntry[]).map(\n//         (entity: BookeeEntry) => {\n//           delete entity[\"id\"];\n//           return entity;\n//         }\n//       );\n//       const prom = await db.table(tableName).bulkPut(refinedEntities);\n//       return prom;\n//     })\n//     .finally(function () {\n//       db.close();\n//     });\n// };\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new SkirmishDB();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new SkirmishDB();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  style?: any;\n  onClick?: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, style, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick} style={style}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton style={style}>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  style?: any;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, style, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled} style={style}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","export function useWebhook(): { hook: string; name: string } | undefined {\n  if (localStorage.getItem(\"webhook\") !== null && localStorage.getItem(\"webhook\") !== \"\") {\n    let name = \"SkirmishTome\";\n    if (localStorage.getItem(\"webhook_user\") !== null)\n      name = localStorage.getItem(\"webhook_user\") + \"\";\n    return { hook: localStorage.getItem(\"webhook\") + \"\", name: name };\n  } else return undefined;\n}\n","export const sendMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  content: string,\n  avatar?: string\n) => {\n  if (webhook !== undefined) {\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    let params = {\n      username: webhook.name !== \"\" ? webhook.name : \"SkirmishTome\",\n      avatar_url: avatar !== undefined ? avatar : \"\",\n      content: content,\n    };\n    request.send(JSON.stringify(params));\n  }\n};\n\nexport const sendEmbedMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  params: string\n) => {\n  if (webhook !== undefined) {\n    console.log(params);\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.send(params);\n  }\n};\n\nexport const formatDiscordText = (text: string): string => {\n  if (text.includes(\"[[\")) {\n    return text.replaceAll(\"[[\", \"*\").replaceAll(\"]]\", \"*\");\n  } else {\n    return text;\n  }\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import IEntity from \"./IEntity\";\n\nexport enum TalentCategory {\n  physical = \"physical\",\n  mental = \"mental\",\n  social = \"social\",\n  magical = \"magical\",\n}\n\nexport default class Talent implements IEntity {\n  id?: number;\n  name: string;\n  category: string;\n  isFlaw: boolean;\n  cost: number;\n  prerequisite: string;\n  effect: string;\n  type: boolean;\n  stress: string;\n  trigger: string;\n  triggerFrequency: string;\n  ticks: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    category?: string,\n    isFlaw?: boolean,\n    cost?: number,\n    prerequisite?: string,\n    effect?: string,\n    type?: boolean,\n    stress?: string,\n    trigger?: string,\n    triggerFrequency?: string,\n    ticks?: number\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.category = category || TalentCategory.magical;\n    this.isFlaw = isFlaw || false;\n    this.cost = cost || 0;\n    this.prerequisite = prerequisite || \"\";\n    this.effect = effect || \"\";\n    this.type = type || false;\n    this.stress = stress || \"\";\n    this.trigger = trigger || \"\";\n    this.triggerFrequency = triggerFrequency || \"\";\n    this.ticks = ticks || 0;\n  }\n\n  static makeCsv = (talent: Talent): any[] => {\n    return [\n      talent.id,\n      talent.name,\n      talent.category,\n      talent.isFlaw,\n      talent.cost,\n      talent.prerequisite,\n      talent.effect,\n      talent.type,\n      talent.stress,\n      talent.trigger,\n      talent.triggerFrequency,\n      talent.ticks,\n    ];\n  };\n}\n\nexport function isTalent(arg: any): arg is Talent {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"number\";\n  const isFlawCheck =\n    arg.isFlaw !== undefined && typeof arg.isFlaw == \"boolean\";\n  const prerequisiteCheck =\n    arg.prerequisite !== undefined && typeof arg.prerequisite == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"boolean\";\n  const stressCheck = arg.stress !== undefined && typeof arg.stress == \"string\";\n  const triggerCheck =\n    arg.trigger !== undefined && typeof arg.trigger == \"string\";\n  const triggerFrequencyCheck =\n    arg.triggerFrequency !== undefined &&\n    typeof arg.triggerFrequency == \"string\";\n  const ticksCheck = arg.ticks !== undefined && typeof arg.ticks == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    costCheck &&\n    isFlawCheck &&\n    prerequisiteCheck &&\n    effectCheck &&\n    typeCheck &&\n    stressCheck &&\n    triggerCheck &&\n    triggerFrequencyCheck &&\n    ticksCheck\n  );\n}\n","export interface StringPair {\n  label: string;\n  drain: number;\n}\nexport interface NumberPair {\n  label: number;\n  drain: number;\n}\n\n// export class Dummy {\n//   static readonly NONE: StringPair = { label: \"\", drain: 0,};\n//   static readonly DUMMY: StringPair = { label: , drain: 0 };\n\n//   private constructor(\n//     private readonly label: string,\n//     public readonly drain: number\n//   ) {}\n\n//   static find = (label: string): StringPair => {\n//     switch (label?.toLowerCase().trim()) {\n//       case Dummy.DUMMY.label.toLowerCase():\n//         return Dummy.DUMMY;\n//       default:\n//         return Dummy.NONE;\n//     }\n//   };\n//   static getAll = (): string[] => {\n//     return [Dummy.DUMMY.label];\n//   };\n// }\n\nexport class SpellPureDamage {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ACID: StringPair = { label: \"Acid\", drain: 0 };\n  static readonly NECROTIC: StringPair = { label: \"Necrotic\", drain: 0 };\n  static readonly FROST: StringPair = { label: \"Frost\", drain: 0 };\n  static readonly FIRE: StringPair = { label: \"Fire\", drain: 0 };\n  static readonly LIGHTNING: StringPair = { label: \"Lightning\", drain: 0 };\n  static readonly RADIANT: StringPair = { label: \"Radiant\", drain: 0 };\n  static readonly ARCANE: StringPair = { label: \"Arcane\", drain: 0 };\n  static readonly POISON: StringPair = { label: \"Poison\", drain: 0 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellPureDamage.ACID.label.toLowerCase():\n        return SpellPureDamage.ACID;\n      case SpellPureDamage.NECROTIC.label.toLowerCase():\n        return SpellPureDamage.NECROTIC;\n      case SpellPureDamage.FROST.label.toLowerCase():\n        return SpellPureDamage.FROST;\n      case SpellPureDamage.FIRE.label.toLowerCase():\n        return SpellPureDamage.FIRE;\n      case SpellPureDamage.LIGHTNING.label.toLowerCase():\n        return SpellPureDamage.LIGHTNING;\n      case SpellPureDamage.RADIANT.label.toLowerCase():\n        return SpellPureDamage.RADIANT;\n      case SpellPureDamage.ARCANE.label.toLowerCase():\n        return SpellPureDamage.ARCANE;\n      case SpellPureDamage.POISON.label.toLowerCase():\n        return SpellPureDamage.POISON;\n      default:\n        return SpellPureDamage.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellPureDamage.NONE.label,\n      SpellPureDamage.ACID.label,\n      SpellPureDamage.NECROTIC.label,\n      SpellPureDamage.FROST.label,\n      SpellPureDamage.FIRE.label,\n      SpellPureDamage.LIGHTNING.label,\n      SpellPureDamage.RADIANT.label,\n      SpellPureDamage.ARCANE.label,\n      SpellPureDamage.POISON.label,\n    ];\n  };\n}\n\nexport class SpellHp {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSTRUCTUREHP: StringPair = {\n    label:\n      \"1/2 Magic/Faith armor/structure rating and Magic/Faith *1 hit points\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSTRUCTUREDOUBLEHP: StringPair = {\n    label:\n      \"1/2 Magic/Faith armor/structure rating and Magic/Faith *2 hit points\",\n    drain: 1,\n  };\n  static readonly HALFMAGICSTRUCTURETRIPPLEHP: StringPair = {\n    label:\n      \"1/2 Magic/Faith armor/structure rating and Magic/Faith *3 hit points\",\n    drain: 2,\n  };\n  static readonly MAGICSTRUCTUREHP: StringPair = {\n    label:\n      \"Magic/Faith *1 armor/structure rating and Magic/Faith *1 hit points\",\n    drain: 1,\n  };\n  static readonly MAGICSTRUCTUREDOUBLEHP: StringPair = {\n    label:\n      \"Magic/Faith *1 armor/structure rating and Magic/Faith *2 hit points\",\n    drain: 3,\n  };\n  static readonly DOUBLEMAGICESTRUCTUREHP: StringPair = {\n    label: \"Magic/Faith *2 armor/structure rating and Magic/Faith hit points\",\n    drain: 4,\n  };\n  static readonly MAGICHP: StringPair = {\n    label: \"Magic/Faith *1 hit points\",\n    drain: 1,\n  };\n  static readonly MAGICDOUBLEHP: StringPair = {\n    label: \"Magic/Faith *2 hit points\",\n    drain: 2,\n  };\n  static readonly MAGICTRIPPLEHP: StringPair = {\n    label: \"Magic/Faith *3 hit points\",\n    drain: 3,\n  };\n  static readonly MAGICQUADRUPLEHP: StringPair = {\n    label: \"Magic/Faith *4 hit points\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellHp.HALFMAGICSTRUCTUREHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTUREHP;\n      case SpellHp.HALFMAGICSTRUCTUREDOUBLEHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTUREDOUBLEHP;\n      case SpellHp.HALFMAGICSTRUCTURETRIPPLEHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTURETRIPPLEHP;\n      case SpellHp.MAGICSTRUCTUREHP.label.toLowerCase():\n        return SpellHp.MAGICSTRUCTUREHP;\n      case SpellHp.MAGICSTRUCTUREDOUBLEHP.label.toLowerCase():\n        return SpellHp.MAGICSTRUCTUREDOUBLEHP;\n      case SpellHp.DOUBLEMAGICESTRUCTUREHP.label.toLowerCase():\n        return SpellHp.DOUBLEMAGICESTRUCTUREHP;\n      case SpellHp.MAGICHP.label.toLowerCase():\n        return SpellHp.MAGICHP;\n      case SpellHp.MAGICDOUBLEHP.label.toLowerCase():\n        return SpellHp.MAGICDOUBLEHP;\n      case SpellHp.MAGICTRIPPLEHP.label.toLowerCase():\n        return SpellHp.MAGICTRIPPLEHP;\n      case SpellHp.MAGICQUADRUPLEHP.label.toLowerCase():\n        return SpellHp.MAGICQUADRUPLEHP;\n      default:\n        return SpellHp.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellHp.NONE.label,\n      SpellHp.HALFMAGICSTRUCTUREHP.label,\n      SpellHp.HALFMAGICSTRUCTUREDOUBLEHP.label,\n      SpellHp.HALFMAGICSTRUCTURETRIPPLEHP.label,\n      SpellHp.MAGICSTRUCTUREHP.label,\n      SpellHp.MAGICSTRUCTUREDOUBLEHP.label,\n      SpellHp.DOUBLEMAGICESTRUCTUREHP.label,\n      SpellHp.MAGICHP.label,\n      SpellHp.MAGICDOUBLEHP.label,\n      SpellHp.MAGICTRIPPLEHP.label,\n      SpellHp.MAGICQUADRUPLEHP.label,\n    ];\n  };\n}\n\nexport class SpellSize {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSQUARED: StringPair = {\n    label: \"1/2 Magic/Faith M²\",\n    drain: 0,\n  };\n  static readonly MAGICSQUARED: StringPair = {\n    label: \"Magic/Faith M²\",\n    drain: 1,\n  };\n  static readonly DOUBLEMAGICSQUARED: StringPair = {\n    label: \"Magic/Faith *2 M²\",\n    drain: 2,\n  };\n  static readonly TRIPPLEMAGICSQUARED: StringPair = {\n    label: \"Magic/Faith *3 M²\",\n    drain: 4,\n  };\n  static readonly HALFMAGICQUBED: StringPair = {\n    label: \"1/2 Magic/Faith M³\",\n    drain: 0,\n  };\n  static readonly MAGICQUBED: StringPair = {\n    label: \"Magic/Faith M³\",\n    drain: 1,\n  };\n  static readonly DOUBLEMAGICQUBED: StringPair = {\n    label: \"Magic/Faith *2 M³\",\n    drain: 2,\n  };\n  static readonly TRIPPLEMAGICQUBED: StringPair = {\n    label: \"Magic/Faith *3 M³\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSize.HALFMAGICSQUARED.label.toLowerCase():\n        return SpellSize.HALFMAGICSQUARED;\n      case SpellSize.MAGICSQUARED.label.toLowerCase():\n        return SpellSize.MAGICSQUARED;\n      case SpellSize.DOUBLEMAGICSQUARED.label.toLowerCase():\n        return SpellSize.DOUBLEMAGICSQUARED;\n      case SpellSize.TRIPPLEMAGICSQUARED.label.toLowerCase():\n        return SpellSize.TRIPPLEMAGICSQUARED;\n      case SpellSize.HALFMAGICQUBED.label.toLowerCase():\n        return SpellSize.HALFMAGICQUBED;\n      case SpellSize.MAGICQUBED.label.toLowerCase():\n        return SpellSize.MAGICQUBED;\n      case SpellSize.DOUBLEMAGICQUBED.label.toLowerCase():\n        return SpellSize.DOUBLEMAGICQUBED;\n      case SpellSize.TRIPPLEMAGICQUBED.label.toLowerCase():\n        return SpellSize.TRIPPLEMAGICQUBED;\n      default:\n        return SpellSize.HALFMAGICSQUARED;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSize.NONE.label,\n      SpellSize.HALFMAGICSQUARED.label,\n      SpellSize.MAGICSQUARED.label,\n      SpellSize.DOUBLEMAGICSQUARED.label,\n      SpellSize.TRIPPLEMAGICSQUARED.label,\n      SpellSize.HALFMAGICQUBED.label,\n      SpellSize.MAGICQUBED.label,\n      SpellSize.DOUBLEMAGICQUBED.label,\n      SpellSize.TRIPPLEMAGICQUBED.label,\n    ];\n  };\n}\n\nexport class SpellDirectEffects {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly DIFFICULTTERRAIN: StringPair = {\n    label: \"Difficult Terrain\",\n    drain: 1,\n  };\n  static readonly LIFELEECH: StringPair = { label: \"Life Leech\", drain: 2 };\n  static readonly COMMUNICATE: StringPair = { label: \"Communicate\", drain: 2 };\n  static readonly CONFUSIONSTUNBLIND: StringPair = {\n    label: \"Confusion / Stun / Blind\",\n    drain: 3,\n  };\n  static readonly HEX: StringPair = { label: \"Hex\", drain: 4 };\n  static readonly IMPAIRMOVEMENTVISION: StringPair = {\n    label: \"Impair Movement / Vision\",\n    drain: 4,\n  };\n  static readonly MOVEFEARROOT: StringPair = {\n    label: \"Move / Fear / Root\",\n    drain: 4,\n  };\n  static readonly DOT: StringPair = { label: \"Damage Over Time\", drain: 3 };\n  static readonly INCAPACITATE: StringPair = {\n    label: \"Incapacitate\",\n    drain: 5,\n  };\n  static readonly SPHERE: StringPair = { label: \"Shield\", drain: 5 };\n  static readonly KNOCKDOWN: StringPair = { label: \"Knockdown\", drain: 2 };\n  static readonly WALLBARRIERCONSTRUCTSUMMON: StringPair = {\n    label: \"Wall / Barrier / Sphere / Construct\",\n    drain: 5,\n  };\n  static readonly TELEPORT: StringPair = { label: \"Teleport\", drain: 6 };\n  static readonly HEAL: StringPair = { label: \"Heal\", drain: 5 };\n  static readonly BUFFILLUSIONSHIELD: StringPair = {\n    label: \"Buff / Illusion\",\n    drain: 5,\n  };\n  static readonly CHARMCONTROLINFLUENCE: StringPair = {\n    label: \"Charm / Control / Influence\",\n    drain: 5,\n  };\n  static readonly TRANSFORM: StringPair = { label: \"Transform\", drain: 4 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDirectEffects.DIFFICULTTERRAIN.label.toLowerCase():\n        return SpellDirectEffects.DIFFICULTTERRAIN;\n      case SpellDirectEffects.LIFELEECH.label.toLowerCase():\n        return SpellDirectEffects.LIFELEECH;\n      case SpellDirectEffects.COMMUNICATE.label.toLowerCase():\n        return SpellDirectEffects.COMMUNICATE;\n      case SpellDirectEffects.CONFUSIONSTUNBLIND.label.toLowerCase():\n        return SpellDirectEffects.CONFUSIONSTUNBLIND;\n      case SpellDirectEffects.HEX.label.toLowerCase():\n        return SpellDirectEffects.HEX;\n      case SpellDirectEffects.IMPAIRMOVEMENTVISION.label.toLowerCase():\n        return SpellDirectEffects.IMPAIRMOVEMENTVISION;\n      case SpellDirectEffects.MOVEFEARROOT.label.toLowerCase():\n        return SpellDirectEffects.MOVEFEARROOT;\n      case SpellDirectEffects.DOT.label.toLowerCase():\n        return SpellDirectEffects.DOT;\n      case SpellDirectEffects.INCAPACITATE.label.toLowerCase():\n        return SpellDirectEffects.INCAPACITATE;\n      case SpellDirectEffects.SPHERE.label.toLowerCase():\n        return SpellDirectEffects.SPHERE;\n      case SpellDirectEffects.KNOCKDOWN.label.toLowerCase():\n        return SpellDirectEffects.KNOCKDOWN;\n      case SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON.label.toLowerCase():\n        return SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON;\n      case SpellDirectEffects.TELEPORT.label.toLowerCase():\n        return SpellDirectEffects.TELEPORT;\n      case SpellDirectEffects.HEAL.label.toLowerCase():\n        return SpellDirectEffects.HEAL;\n      case SpellDirectEffects.BUFFILLUSIONSHIELD.label.toLowerCase():\n        return SpellDirectEffects.BUFFILLUSIONSHIELD;\n      case SpellDirectEffects.CHARMCONTROLINFLUENCE.label.toLowerCase():\n        return SpellDirectEffects.CHARMCONTROLINFLUENCE;\n      case SpellDirectEffects.TRANSFORM.label.toLowerCase():\n        return SpellDirectEffects.TRANSFORM;\n      default:\n        return SpellDirectEffects.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDirectEffects.NONE.label,\n      SpellDirectEffects.DIFFICULTTERRAIN.label,\n      SpellDirectEffects.LIFELEECH.label,\n      SpellDirectEffects.COMMUNICATE.label,\n      SpellDirectEffects.CONFUSIONSTUNBLIND.label,\n      SpellDirectEffects.HEX.label,\n      SpellDirectEffects.IMPAIRMOVEMENTVISION.label,\n      SpellDirectEffects.MOVEFEARROOT.label,\n      SpellDirectEffects.DOT.label,\n      SpellDirectEffects.INCAPACITATE.label,\n      SpellDirectEffects.SPHERE.label,\n      SpellDirectEffects.KNOCKDOWN.label,\n      SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON.label,\n      SpellDirectEffects.TELEPORT.label,\n      SpellDirectEffects.HEAL.label,\n      SpellDirectEffects.BUFFILLUSIONSHIELD.label,\n      SpellDirectEffects.CHARMCONTROLINFLUENCE.label,\n      SpellDirectEffects.TRANSFORM.label,\n    ];\n  };\n}\n\nexport class SpellScalingEffect {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly MYSTBRADIUS: StringPair = {\n    label: \"MystB Meters Radius\",\n    drain: 3,\n  };\n  static readonly MYSTBPROJECTILES: StringPair = {\n    label: \"MystB Projectiles / Effects\",\n    drain: 4,\n  };\n  static readonly PROJECTILERADIUSPERVARIABLE: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per Variable Factor\",\n    drain: 4,\n  };\n  static readonly PROJECTILEPERVARIABLE: StringPair = {\n    label: \"1 Projectile/Effect per Variable Factor\",\n    drain: 3,\n  };\n  static readonly PROJECTILEPERTHREEMAGIC: StringPair = {\n    label: \"1 Projectile/Effect per 3 Magic/Faith Rating\",\n    drain: 2,\n  };\n  static readonly PROJECTILEPERTWOMAGIC: StringPair = {\n    label: \"1 Projectile/Effect per 2 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PROJECTILERADIUSPERTWOMAGIC: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per 2 Magic/Faith Rating\",\n    drain: 5,\n  };\n  static readonly PROJECTILERADIUSPERTHREEMAGIC: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per 3 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PLUSPROJECTILEPERTWOMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 2 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PLUSPROJECTILEPERFOURMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 4 Magic/Faith Rating\",\n    drain: 2,\n  };\n  static readonly PLUSPROJECTILEPERTHREEMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 3 Magic/Faith Rating\",\n    drain: 3,\n  };\n  static readonly MYSTBRADIUSEFFECT: StringPair = {\n    label: \"MystB Meters Radius & Effect\",\n    drain: 5,\n  };\n  static readonly PLUSHALFMYSTBRADIUSEFFECT: StringPair = {\n    label: \"plus 1/2 MystB Meters Radius & Effect\",\n    drain: 4,\n  };\n  static readonly PLUSHALFMYSTBRADIUS: StringPair = {\n    label: \"plus 1/2 MystB Meters Radius\",\n    drain: 2,\n  };\n  static readonly PLUSMYSTBRADIUS: StringPair = {\n    label: \"plus MystB Meters Radius\",\n    drain: 3,\n  };\n  static readonly PLUSMYSTBRADIUSEFFECT: StringPair = {\n    label: \"plus MystB Meters Radius & Effect\",\n    drain: 6,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellScalingEffect.MYSTBRADIUS.label.toLowerCase():\n        return SpellScalingEffect.MYSTBRADIUS;\n      case SpellScalingEffect.MYSTBPROJECTILES.label.toLowerCase():\n        return SpellScalingEffect.MYSTBPROJECTILES;\n      case SpellScalingEffect.PROJECTILERADIUSPERVARIABLE.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILERADIUSPERVARIABLE;\n      case SpellScalingEffect.PROJECTILEPERVARIABLE.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILEPERVARIABLE;\n      case SpellScalingEffect.PROJECTILEPERTHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILEPERTHREEMAGIC;\n      case SpellScalingEffect.PROJECTILEPERTWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILEPERTWOMAGIC;\n      case SpellScalingEffect.PROJECTILERADIUSPERTWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILERADIUSPERTWOMAGIC;\n      case SpellScalingEffect.PROJECTILERADIUSPERTHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILERADIUSPERTHREEMAGIC;\n      case SpellScalingEffect.PLUSPROJECTILEPERTWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PLUSPROJECTILEPERTWOMAGIC;\n      case SpellScalingEffect.PLUSPROJECTILEPERFOURMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PLUSPROJECTILEPERFOURMAGIC;\n      case SpellScalingEffect.PLUSPROJECTILEPERTHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PLUSPROJECTILEPERTHREEMAGIC;\n      case SpellScalingEffect.MYSTBRADIUSEFFECT.label.toLowerCase():\n        return SpellScalingEffect.MYSTBRADIUSEFFECT;\n      case SpellScalingEffect.PLUSHALFMYSTBRADIUSEFFECT.label.toLowerCase():\n        return SpellScalingEffect.PLUSHALFMYSTBRADIUSEFFECT;\n      case SpellScalingEffect.PLUSHALFMYSTBRADIUS.label.toLowerCase():\n        return SpellScalingEffect.PLUSHALFMYSTBRADIUS;\n      case SpellScalingEffect.PLUSMYSTBRADIUS.label.toLowerCase():\n        return SpellScalingEffect.PLUSMYSTBRADIUS;\n      case SpellScalingEffect.PLUSMYSTBRADIUSEFFECT.label.toLowerCase():\n        return SpellScalingEffect.PLUSMYSTBRADIUSEFFECT;\n      default:\n        return SpellScalingEffect.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellScalingEffect.NONE.label,\n      SpellScalingEffect.MYSTBRADIUS.label,\n      SpellScalingEffect.MYSTBPROJECTILES.label,\n      SpellScalingEffect.PROJECTILERADIUSPERVARIABLE.label,\n      SpellScalingEffect.PROJECTILEPERVARIABLE.label,\n      SpellScalingEffect.PROJECTILEPERTHREEMAGIC.label,\n      SpellScalingEffect.PROJECTILEPERTWOMAGIC.label,\n      SpellScalingEffect.PROJECTILERADIUSPERTWOMAGIC.label,\n      SpellScalingEffect.PROJECTILERADIUSPERTHREEMAGIC.label,\n      SpellScalingEffect.PLUSPROJECTILEPERTWOMAGIC.label,\n      SpellScalingEffect.PLUSPROJECTILEPERFOURMAGIC.label,\n      SpellScalingEffect.PLUSPROJECTILEPERTHREEMAGIC.label,\n      SpellScalingEffect.MYSTBRADIUSEFFECT.label,\n      SpellScalingEffect.PLUSHALFMYSTBRADIUSEFFECT.label,\n      SpellScalingEffect.PLUSHALFMYSTBRADIUS.label,\n      SpellScalingEffect.PLUSMYSTBRADIUS.label,\n      SpellScalingEffect.PLUSMYSTBRADIUSEFFECT.label,\n    ];\n  };\n}\n\nexport class SpellDamageType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly COMBINED: StringPair = { label: \"Combined\", drain: 0 };\n  static readonly PHYSICAL: StringPair = { label: \"Physical\", drain: 0 };\n  static readonly STUN: StringPair = { label: \"Stun\", drain: 1 };\n  static readonly PURE: StringPair = { label: \"Pure\", drain: 2 };\n  static readonly FATIGUE: StringPair = { label: \"Fatigue\", drain: 3 };\n  static readonly AGONY: StringPair = { label: \"Agony\", drain: 5 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDamageType.COMBINED.label.toLowerCase():\n        return SpellDamageType.COMBINED;\n      case SpellDamageType.PHYSICAL.label.toLowerCase():\n        return SpellDamageType.PHYSICAL;\n      case SpellDamageType.STUN.label.toLowerCase():\n        return SpellDamageType.STUN;\n      case SpellDamageType.PURE.label.toLowerCase():\n        return SpellDamageType.PURE;\n      case SpellDamageType.FATIGUE.label.toLowerCase():\n        return SpellDamageType.FATIGUE;\n      case SpellDamageType.AGONY.label.toLowerCase():\n        return SpellDamageType.AGONY;\n      default:\n        return SpellDamageType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDamageType.NONE.label,\n      SpellDamageType.COMBINED.label,\n      SpellDamageType.PHYSICAL.label,\n      SpellDamageType.STUN.label,\n      SpellDamageType.PURE.label,\n      SpellDamageType.FATIGUE.label,\n      SpellDamageType.AGONY.label,\n    ];\n  };\n}\n\nexport class SpellDamage {\n  static readonly NONE: StringPair = { label: \"\", drain: 0 };\n  static readonly ONEPRMAGIC: StringPair = {\n    label: \"1 PR Magic/Faith\",\n    drain: 3,\n  };\n  static readonly TWOPRMAGIC: StringPair = {\n    label: \"2 PR Magic/Faith\",\n    drain: 4,\n  };\n  static readonly THREEPRMAGIC: StringPair = {\n    label: \"3 PR Magic/Faith\",\n    drain: 6,\n  };\n  static readonly FOURPRMAGIC: StringPair = {\n    label: \"4 PR Magic/Faith\",\n    drain: 9,\n  };\n  static readonly FIVEPRMAGIC: StringPair = {\n    label: \"5 PR Magic/Faith\",\n    drain: 12,\n  };\n  static readonly ONE: StringPair = { label: \"1\", drain: 1 };\n  static readonly TWO: StringPair = { label: \"2\", drain: 2 };\n  static readonly THREE: StringPair = { label: \"3\", drain: 3 };\n  static readonly FOUR: StringPair = { label: \"4\", drain: 4 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 5 };\n  static readonly ONEDFOUR: StringPair = { label: \"1d4\", drain: 1 };\n  static readonly ONEDSIX: StringPair = { label: \"1d6\", drain: 1 };\n  static readonly ONEDEIGHT: StringPair = { label: \"1d8\", drain: 2 };\n  static readonly ONEDTEN: StringPair = { label: \"1d10\", drain: 3 };\n  static readonly ONEDTWELVE: StringPair = { label: \"1d12\", drain: 3 };\n  static readonly ONEDTWENTY: StringPair = { label: \"1d20\", drain: 5 };\n  static readonly TWODFOUR: StringPair = { label: \"2d4\", drain: 2 };\n  static readonly TWODSIX: StringPair = { label: \"2d6\", drain: 3 };\n  static readonly TWODEIGHT: StringPair = { label: \"2d8\", drain: 4 };\n  static readonly TWODTEN: StringPair = { label: \"2d10\", drain: 5 };\n  static readonly TWODTWELVE: StringPair = { label: \"2d12\", drain: 5 };\n  static readonly TWODTWENTY: StringPair = { label: \"2d20\", drain: 10 };\n  static readonly THREEDFOUR: StringPair = { label: \"3d4\", drain: 3 };\n  static readonly THREEDSIX: StringPair = { label: \"3d6\", drain: 5 };\n  static readonly THREEDEIGHT: StringPair = { label: \"3d8\", drain: 6 };\n  static readonly THREEDTEN: StringPair = { label: \"3d10\", drain: 7 };\n  static readonly THREEDTWELVE: StringPair = { label: \"3d12\", drain: 9 };\n  static readonly FOURDFOUR: StringPair = { label: \"4d4\", drain: 4 };\n  static readonly FOURDSIX: StringPair = { label: \"4d6\", drain: 6 };\n  static readonly FOURDEIGHT: StringPair = { label: \"4d8\", drain: 8 };\n  static readonly FOURDTEN: StringPair = { label: \"4d10\", drain: 11 };\n  static readonly FIVEDFOUR: StringPair = { label: \"5d4\", drain: 5 };\n  static readonly FIVEDSIX: StringPair = { label: \"5d6\", drain: 8 };\n  static readonly FIVEDEIGHT: StringPair = { label: \"5d8\", drain: 12 };\n  static readonly SIXDFOUR: StringPair = { label: \"6d4\", drain: 7 };\n  static readonly MYSTB: StringPair = { label: \"MystB\", drain: 1 };\n  static readonly MYSTBDOUBLE: StringPair = { label: \"MystB *2\", drain: 2 };\n  static readonly QUARTERMAGIC: StringPair = {\n    label: \"1/4 Magic/Faith\",\n    drain: 2,\n  };\n  static readonly HALFMAGIC: StringPair = {\n    label: \"1/2 Magic/Faith\",\n    drain: 3,\n  };\n  static readonly MAGIC: StringPair = { label: \"Magic/Faith\", drain: 4 };\n  static readonly COLLETERAL: StringPair = {\n    label: \"Collateral damage based on environment\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDamage.ONEPRMAGIC.label.toLowerCase():\n        return SpellDamage.ONEPRMAGIC;\n      case SpellDamage.TWOPRMAGIC.label.toLowerCase():\n        return SpellDamage.TWOPRMAGIC;\n      case SpellDamage.THREEPRMAGIC.label.toLowerCase():\n        return SpellDamage.THREEPRMAGIC;\n      case SpellDamage.FOURPRMAGIC.label.toLowerCase():\n        return SpellDamage.FOURPRMAGIC;\n      case SpellDamage.FIVEPRMAGIC.label.toLowerCase():\n        return SpellDamage.FIVEPRMAGIC;\n      case SpellDamage.ONE.label.toLowerCase():\n        return SpellDamage.ONE;\n      case SpellDamage.TWO.label.toLowerCase():\n        return SpellDamage.TWO;\n      case SpellDamage.THREE.label.toLowerCase():\n        return SpellDamage.THREE;\n      case SpellDamage.FOUR.label.toLowerCase():\n        return SpellDamage.FOUR;\n      case SpellDamage.FIVE.label.toLowerCase():\n        return SpellDamage.FIVE;\n      case SpellDamage.ONEDFOUR.label.toLowerCase():\n        return SpellDamage.ONEDFOUR;\n      case SpellDamage.ONEDSIX.label.toLowerCase():\n        return SpellDamage.ONEDSIX;\n      case SpellDamage.ONEDEIGHT.label.toLowerCase():\n        return SpellDamage.ONEDEIGHT;\n      case SpellDamage.ONEDTEN.label.toLowerCase():\n        return SpellDamage.ONEDTEN;\n      case SpellDamage.ONEDTWELVE.label.toLowerCase():\n        return SpellDamage.ONEDTWELVE;\n      case SpellDamage.ONEDTWENTY.label.toLowerCase():\n        return SpellDamage.ONEDTWENTY;\n      case SpellDamage.TWODFOUR.label.toLowerCase():\n        return SpellDamage.TWODFOUR;\n      case SpellDamage.TWODSIX.label.toLowerCase():\n        return SpellDamage.TWODSIX;\n      case SpellDamage.TWODEIGHT.label.toLowerCase():\n        return SpellDamage.TWODEIGHT;\n      case SpellDamage.TWODTEN.label.toLowerCase():\n        return SpellDamage.TWODTEN;\n      case SpellDamage.TWODTWELVE.label.toLowerCase():\n        return SpellDamage.TWODTWELVE;\n      case SpellDamage.TWODTWENTY.label.toLowerCase():\n        return SpellDamage.TWODTWENTY;\n      case SpellDamage.THREEDFOUR.label.toLowerCase():\n        return SpellDamage.THREEDFOUR;\n      case SpellDamage.THREEDSIX.label.toLowerCase():\n        return SpellDamage.THREEDSIX;\n      case SpellDamage.THREEDEIGHT.label.toLowerCase():\n        return SpellDamage.THREEDEIGHT;\n      case SpellDamage.THREEDTEN.label.toLowerCase():\n        return SpellDamage.THREEDTEN;\n      case SpellDamage.THREEDTWELVE.label.toLowerCase():\n        return SpellDamage.THREEDTWELVE;\n      case SpellDamage.FOURDFOUR.label.toLowerCase():\n        return SpellDamage.FOURDFOUR;\n      case SpellDamage.FOURDSIX.label.toLowerCase():\n        return SpellDamage.FOURDSIX;\n      case SpellDamage.FOURDEIGHT.label.toLowerCase():\n        return SpellDamage.FOURDEIGHT;\n      case SpellDamage.FOURDTEN.label.toLowerCase():\n        return SpellDamage.FOURDTEN;\n      case SpellDamage.FIVEDFOUR.label.toLowerCase():\n        return SpellDamage.FIVEDFOUR;\n      case SpellDamage.FIVEDSIX.label.toLowerCase():\n        return SpellDamage.FIVEDSIX;\n      case SpellDamage.FIVEDEIGHT.label.toLowerCase():\n        return SpellDamage.FIVEDEIGHT;\n      case SpellDamage.SIXDFOUR.label.toLowerCase():\n        return SpellDamage.SIXDFOUR;\n      case SpellDamage.MYSTB.label.toLowerCase():\n        return SpellDamage.MYSTB;\n      case SpellDamage.MYSTBDOUBLE.label.toLowerCase():\n        return SpellDamage.MYSTBDOUBLE;\n      case SpellDamage.QUARTERMAGIC.label.toLowerCase():\n        return SpellDamage.QUARTERMAGIC;\n      case SpellDamage.HALFMAGIC.label.toLowerCase():\n        return SpellDamage.HALFMAGIC;\n      case SpellDamage.MAGIC.label.toLowerCase():\n        return SpellDamage.MAGIC;\n      case SpellDamage.COLLETERAL.label.toLowerCase():\n        return SpellDamage.COLLETERAL;\n      default:\n        return SpellDamage.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDamage.NONE.label,\n      SpellDamage.ONEPRMAGIC.label,\n      SpellDamage.TWOPRMAGIC.label,\n      SpellDamage.THREEPRMAGIC.label,\n      SpellDamage.FOURPRMAGIC.label,\n      SpellDamage.FIVEPRMAGIC.label,\n      SpellDamage.ONE.label,\n      SpellDamage.TWO.label,\n      SpellDamage.THREE.label,\n      SpellDamage.FOUR.label,\n      SpellDamage.FIVE.label,\n      SpellDamage.ONEDFOUR.label,\n      SpellDamage.ONEDSIX.label,\n      SpellDamage.ONEDEIGHT.label,\n      SpellDamage.ONEDTEN.label,\n      SpellDamage.ONEDTWELVE.label,\n      SpellDamage.ONEDTWENTY.label,\n      SpellDamage.TWODFOUR.label,\n      SpellDamage.TWODSIX.label,\n      SpellDamage.TWODEIGHT.label,\n      SpellDamage.TWODTEN.label,\n      SpellDamage.TWODTWELVE.label,\n      SpellDamage.TWODTWENTY.label,\n      SpellDamage.THREEDFOUR.label,\n      SpellDamage.THREEDSIX.label,\n      SpellDamage.THREEDEIGHT.label,\n      SpellDamage.THREEDTEN.label,\n      SpellDamage.THREEDTWELVE.label,\n      SpellDamage.FOURDFOUR.label,\n      SpellDamage.FOURDSIX.label,\n      SpellDamage.FOURDEIGHT.label,\n      SpellDamage.FOURDTEN.label,\n      SpellDamage.FIVEDFOUR.label,\n      SpellDamage.FIVEDSIX.label,\n      SpellDamage.FIVEDEIGHT.label,\n      SpellDamage.SIXDFOUR.label,\n      SpellDamage.MYSTB.label,\n      SpellDamage.MYSTBDOUBLE.label,\n      SpellDamage.QUARTERMAGIC.label,\n      SpellDamage.HALFMAGIC.label,\n      SpellDamage.MAGIC.label,\n      SpellDamage.COLLETERAL.label,\n    ];\n  };\n}\n\nexport class SpellAoeRadius {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONEMETER: StringPair = { label: \"1 Meter\", drain: -1 };\n  static readonly TWOMETERS: StringPair = { label: \"2 Meters\", drain: 0 };\n  static readonly THREEMETERS: StringPair = { label: \"3 Meters\", drain: 1 };\n  static readonly HALFMAGMETERS: StringPair = {\n    label: \"1/2 Magic/Faith Meters\",\n    drain: 2,\n  };\n  static readonly MAGMETERS: StringPair = {\n    label: \"Magic/Faith *1 Meters\",\n    drain: 4,\n  };\n  static readonly MAGTIMESTWOMETERS: StringPair = {\n    label: \"Magic/Faith *2 Meters\",\n    drain: 6,\n  };\n  static readonly VARIABLE: StringPair = { label: \"Variable\", drain: 1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellAoeRadius.ONEMETER.label.toLowerCase():\n        return SpellAoeRadius.ONEMETER;\n      case SpellAoeRadius.TWOMETERS.label.toLowerCase():\n        return SpellAoeRadius.TWOMETERS;\n      case SpellAoeRadius.THREEMETERS.label.toLowerCase():\n        return SpellAoeRadius.THREEMETERS;\n      case SpellAoeRadius.HALFMAGMETERS.label.toLowerCase():\n        return SpellAoeRadius.HALFMAGMETERS;\n      case SpellAoeRadius.MAGMETERS.label.toLowerCase():\n        return SpellAoeRadius.MAGMETERS;\n      case SpellAoeRadius.MAGTIMESTWOMETERS.label.toLowerCase():\n        return SpellAoeRadius.MAGTIMESTWOMETERS;\n      case SpellAoeRadius.VARIABLE.label.toLowerCase():\n        return SpellAoeRadius.VARIABLE;\n      default:\n        return SpellAoeRadius.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellAoeRadius.NONE.label,\n      SpellAoeRadius.ONEMETER.label,\n      SpellAoeRadius.TWOMETERS.label,\n      SpellAoeRadius.THREEMETERS.label,\n      SpellAoeRadius.HALFMAGMETERS.label,\n      SpellAoeRadius.MAGMETERS.label,\n      SpellAoeRadius.MAGTIMESTWOMETERS.label,\n      SpellAoeRadius.VARIABLE.label,\n    ];\n  };\n}\n\nexport class SpellLosRange {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGIC: StringPair = {\n    label: \"1/2 Magic/Faith meters\",\n    drain: -1,\n  };\n  static readonly ONEMAGIC: StringPair = {\n    label: \"Magic/Faith *1 meters\",\n    drain: -1,\n  };\n  static readonly TWOMAGIC: StringPair = {\n    label: \"Magic/Faith *2 meters\",\n    drain: 0,\n  };\n  static readonly THREEMAGIC: StringPair = {\n    label: \"Magic/Faith *3 meters\",\n    drain: 1,\n  };\n  static readonly FOURMAGIC: StringPair = {\n    label: \"Magic/Faith *4 meters\",\n    drain: 2,\n  };\n  static readonly FIVEMAGIC: StringPair = {\n    label: \"Magic/Faith *5 meters\",\n    drain: 3,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellLosRange.HALFMAGIC.label.toLowerCase():\n        return SpellLosRange.HALFMAGIC;\n      case SpellLosRange.ONEMAGIC.label.toLowerCase():\n        return SpellLosRange.ONEMAGIC;\n      case SpellLosRange.TWOMAGIC.label.toLowerCase():\n        return SpellLosRange.TWOMAGIC;\n      case SpellLosRange.THREEMAGIC.label.toLowerCase():\n        return SpellLosRange.THREEMAGIC;\n      case SpellLosRange.FOURMAGIC.label.toLowerCase():\n        return SpellLosRange.FOURMAGIC;\n      case SpellLosRange.FIVEMAGIC.label.toLowerCase():\n        return SpellLosRange.FIVEMAGIC;\n      default:\n        return SpellLosRange.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellLosRange.NONE.label,\n      SpellLosRange.HALFMAGIC.label,\n      SpellLosRange.ONEMAGIC.label,\n      SpellLosRange.TWOMAGIC.label,\n      SpellLosRange.THREEMAGIC.label,\n      SpellLosRange.FOURMAGIC.label,\n      SpellLosRange.FIVEMAGIC.label,\n    ];\n  };\n}\n\nexport class SpellProjectileNumber {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONE: StringPair = { label: \"1\", drain: 1 };\n  static readonly TWO: StringPair = { label: \"2\", drain: 2 };\n  static readonly THREE: StringPair = { label: \"3\", drain: 4 };\n  static readonly FOUR: StringPair = { label: \"4\", drain: 6 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 8 };\n  static readonly SCALING: StringPair = {\n    label: \"Scaling / Variable\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellProjectileNumber.ONE.label.toLowerCase():\n        return SpellProjectileNumber.ONE;\n      case SpellProjectileNumber.TWO.label.toLowerCase():\n        return SpellProjectileNumber.TWO;\n      case SpellProjectileNumber.THREE.label.toLowerCase():\n        return SpellProjectileNumber.THREE;\n      case SpellProjectileNumber.FOUR.label.toLowerCase():\n        return SpellProjectileNumber.FOUR;\n      case SpellProjectileNumber.FIVE.label.toLowerCase():\n        return SpellProjectileNumber.FIVE;\n      case SpellProjectileNumber.SCALING.label.toLowerCase():\n        return SpellProjectileNumber.SCALING;\n      default:\n        return SpellProjectileNumber.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellProjectileNumber.NONE.label,\n      SpellProjectileNumber.ONE.label,\n      SpellProjectileNumber.TWO.label,\n      SpellProjectileNumber.THREE.label,\n      SpellProjectileNumber.FOUR.label,\n      SpellProjectileNumber.FIVE.label,\n      SpellProjectileNumber.SCALING.label,\n    ];\n  };\n}\n\nexport class SpellProjectileType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly BALL: StringPair = { label: \"Ball\", drain: -1 };\n  static readonly MISSILE: StringPair = { label: \"Missile\", drain: 0 };\n  static readonly BOLT: StringPair = { label: \"Bolt\", drain: 0 };\n  static readonly RAY: StringPair = { label: \"Ray\", drain: 1 };\n  static readonly SPRAY: StringPair = { label: \"Spray\", drain: 0 };\n  static readonly LASSO: StringPair = { label: \"Lasso\", drain: 1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellProjectileType.BALL.label.toLowerCase():\n        return SpellProjectileType.BALL;\n      case SpellProjectileType.MISSILE.label.toLowerCase():\n        return SpellProjectileType.MISSILE;\n      case SpellProjectileType.BOLT.label.toLowerCase():\n        return SpellProjectileType.BOLT;\n      case SpellProjectileType.RAY.label.toLowerCase():\n        return SpellProjectileType.RAY;\n      case SpellProjectileType.SPRAY.label.toLowerCase():\n        return SpellProjectileType.SPRAY;\n      case SpellProjectileType.LASSO.label.toLowerCase():\n        return SpellProjectileType.LASSO;\n      default:\n        return SpellProjectileType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellProjectileType.NONE.label,\n      SpellProjectileType.BALL.label,\n      SpellProjectileType.MISSILE.label,\n      SpellProjectileType.BOLT.label,\n      SpellProjectileType.RAY.label,\n      SpellProjectileType.SPRAY.label,\n      SpellProjectileType.LASSO.label,\n    ];\n  };\n  static getAllSingle = (): string[] => {\n    return [\n      SpellProjectileType.NONE.label,\n      SpellProjectileType.MISSILE.label,\n      SpellProjectileType.BOLT.label,\n      SpellProjectileType.RAY.label,\n      SpellProjectileType.SPRAY.label,\n      SpellProjectileType.LASSO.label,\n    ];\n  };\n}\n\nexport class SpellTargetingType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly DIRECTTARGET: StringPair = {\n    label: \"Direct\",\n    drain: 0,\n  };\n  static readonly AURATARGETING: StringPair = {\n    label: \"Aura\",\n    drain: 2,\n  };\n  static readonly INDIRECTTARGETING: StringPair = {\n    label: \"Indirect\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellTargetingType.DIRECTTARGET.label.toLowerCase():\n        return SpellTargetingType.DIRECTTARGET;\n      case SpellTargetingType.AURATARGETING.label.toLowerCase():\n        return SpellTargetingType.AURATARGETING;\n      case SpellTargetingType.INDIRECTTARGETING.label.toLowerCase():\n        return SpellTargetingType.INDIRECTTARGETING;\n      default:\n        return SpellTargetingType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellTargetingType.NONE.label,\n      SpellTargetingType.DIRECTTARGET.label,\n      SpellTargetingType.AURATARGETING.label,\n      SpellTargetingType.INDIRECTTARGETING.label,\n    ];\n  };\n}\n\nexport class SpellCastTime {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly SIXMINUSMYSTBROUNDS: StringPair = {\n    label: \"6 - Mystb Rounds\",\n    drain: 2,\n  };\n  static readonly NINETHREE: StringPair = { label: \"9 + 3\", drain: -5 };\n  static readonly NINETHREECHANNEL: StringPair = {\n    label: \"9 + 3 (Channel)\",\n    drain: -3,\n  };\n  static readonly SEVENTHREE: StringPair = { label: \"7 + 3\", drain: -1 };\n  static readonly FIVETHREE: StringPair = { label: \"5 + 3\", drain: 1 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 4 };\n  static readonly DRAINCHENNEL: StringPair = {\n    label: \"Drain (Channel)\",\n    drain: -3,\n  };\n  static readonly DRAINTHREE: StringPair = { label: \"Drain + 3\", drain: -2 };\n  static readonly MAGIFAITHHOURS: StringPair = {\n    label: \"24 / Magic/Faith Hours\",\n    drain: 0,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellCastTime.SIXMINUSMYSTBROUNDS.label.toLowerCase():\n        return SpellCastTime.SIXMINUSMYSTBROUNDS;\n      case SpellCastTime.NINETHREE.label.toLowerCase():\n        return SpellCastTime.NINETHREE;\n      case SpellCastTime.NINETHREECHANNEL.label.toLowerCase():\n        return SpellCastTime.NINETHREECHANNEL;\n      case SpellCastTime.SEVENTHREE.label.toLowerCase():\n        return SpellCastTime.SEVENTHREE;\n      case SpellCastTime.FIVETHREE.label.toLowerCase():\n        return SpellCastTime.FIVETHREE;\n      case SpellCastTime.FIVE.label.toLowerCase():\n        return SpellCastTime.FIVE;\n      case SpellCastTime.DRAINCHENNEL.label.toLowerCase():\n        return SpellCastTime.DRAINCHENNEL;\n      case SpellCastTime.DRAINTHREE.label.toLowerCase():\n        return SpellCastTime.DRAINTHREE;\n      case SpellCastTime.MAGIFAITHHOURS.label.toLowerCase():\n        return SpellCastTime.MAGIFAITHHOURS;\n      default:\n        return SpellCastTime.NONE;\n    }\n  };\n  static getAllPhysical = (): string[] => {\n    return [\n      SpellCastTime.NONE.label,\n      SpellCastTime.SIXMINUSMYSTBROUNDS.label,\n      SpellCastTime.NINETHREE.label,\n      SpellCastTime.NINETHREECHANNEL.label,\n      SpellCastTime.SEVENTHREE.label,\n      SpellCastTime.FIVETHREE.label,\n      SpellCastTime.FIVE.label,\n      SpellCastTime.DRAINCHENNEL.label,\n      SpellCastTime.DRAINTHREE.label,\n      SpellCastTime.MAGIFAITHHOURS.label,\n    ];\n  };\n  static getAllStun = (): string[] => {\n    return [\n      SpellCastTime.NONE.label,\n      SpellCastTime.SIXMINUSMYSTBROUNDS.label,\n      SpellCastTime.NINETHREE.label,\n      SpellCastTime.NINETHREECHANNEL.label,\n      SpellCastTime.SEVENTHREE.label,\n      SpellCastTime.FIVETHREE.label,\n      SpellCastTime.FIVE.label,\n      SpellCastTime.MAGIFAITHHOURS.label,\n    ];\n  };\n}\n\nexport class SpellLevel {\n  static readonly NONE: NumberPair = {\n    label: 0,\n    drain: 0,\n  };\n  static readonly ONE: NumberPair = { label: 1, drain: -4 };\n  static readonly TWO: NumberPair = { label: 2, drain: -3 };\n  static readonly THREE: NumberPair = { label: 3, drain: -2 };\n  static readonly FOUR: NumberPair = { label: 4, drain: -1 };\n  static readonly FIVE: NumberPair = { label: 5, drain: 0 };\n  static readonly SIX: NumberPair = { label: 6, drain: 1 };\n  static readonly SEVEN: NumberPair = { label: 7, drain: 2 };\n  static readonly EIGHT: NumberPair = { label: 8, drain: 3 };\n  static readonly NINE: NumberPair = { label: 9, drain: 4 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): NumberPair => {\n    switch (+label) {\n      case SpellLevel.ONE.label:\n        return SpellLevel.ONE;\n      case SpellLevel.TWO.label:\n        return SpellLevel.TWO;\n      case SpellLevel.THREE.label:\n        return SpellLevel.THREE;\n      case SpellLevel.FOUR.label:\n        return SpellLevel.FOUR;\n      case SpellLevel.FIVE.label:\n        return SpellLevel.FIVE;\n      case SpellLevel.SIX.label:\n        return SpellLevel.SIX;\n      case SpellLevel.SEVEN.label:\n        return SpellLevel.SEVEN;\n      case SpellLevel.EIGHT.label:\n        return SpellLevel.EIGHT;\n      case SpellLevel.NINE.label:\n        return SpellLevel.NINE;\n      default:\n        return SpellLevel.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellLevel.NONE.label + \"\",\n      SpellLevel.ONE.label + \"\",\n      SpellLevel.TWO.label + \"\",\n      SpellLevel.THREE.label + \"\",\n      SpellLevel.FOUR.label + \"\",\n      SpellLevel.FIVE.label + \"\",\n      SpellLevel.SIX.label + \"\",\n      SpellLevel.SEVEN.label + \"\",\n      SpellLevel.EIGHT.label + \"\",\n      SpellLevel.NINE.label + \"\",\n    ];\n  };\n}\n\nexport class SpellSource {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly EARTH: StringPair = { label: \"earth\", drain: 0 };\n  static readonly FROST: StringPair = { label: \"frost\", drain: 0 };\n  static readonly AIR: StringPair = { label: \"air\", drain: 0 };\n  static readonly FIRE: StringPair = { label: \"fire\", drain: 0 };\n  static readonly ARCANE: StringPair = { label: \"arcane\", drain: 1 };\n  static readonly DIVINE: StringPair = { label: \"divine\", drain: 0 };\n  static readonly DEMONIC: StringPair = { label: \"demonic\", drain: 0 };\n  static readonly DRUIDIC: StringPair = { label: \"druidic\", drain: 0 };\n  static readonly PSYCHIC: StringPair = { label: \"psychic\", drain: 0 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSource.EARTH.label.toLowerCase():\n        return SpellSource.EARTH;\n      case SpellSource.FROST.label.toLowerCase():\n        return SpellSource.FROST;\n      case SpellSource.AIR.label.toLowerCase():\n        return SpellSource.AIR;\n      case SpellSource.FIRE.label.toLowerCase():\n        return SpellSource.FIRE;\n      case SpellSource.ARCANE.label.toLowerCase():\n        return SpellSource.ARCANE;\n      case SpellSource.DIVINE.label.toLowerCase():\n        return SpellSource.DIVINE;\n      case SpellSource.DEMONIC.label.toLowerCase():\n        return SpellSource.DEMONIC;\n      case SpellSource.DRUIDIC.label.toLowerCase():\n        return SpellSource.DRUIDIC;\n      case SpellSource.PSYCHIC.label.toLowerCase():\n        return SpellSource.PSYCHIC;\n      default:\n        return SpellSource.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSource.NONE.label,\n      SpellSource.EARTH.label,\n      SpellSource.FROST.label,\n      SpellSource.AIR.label,\n      SpellSource.FIRE.label,\n      SpellSource.ARCANE.label,\n      SpellSource.DIVINE.label,\n      SpellSource.DEMONIC.label,\n      SpellSource.DRUIDIC.label,\n      SpellSource.PSYCHIC.label,\n    ];\n  };\n}\n\nexport class SpellRange {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly TOUCH: StringPair = { label: \"touch\", drain: 1 };\n  static readonly SONIC: StringPair = { label: \"sonic\", drain: 1 };\n  static readonly RADIUS90: StringPair = {\n    label: \"Radius 90° around Caster\",\n    drain: 1,\n  };\n  static readonly RADIUS360: StringPair = {\n    label: \"Radius 90°+ around Caster\",\n    drain: 2,\n  };\n  static readonly LOSAURA: StringPair = {\n    label: \"Line of Sight Aura or Projectile\",\n    drain: 1,\n  };\n  static readonly LOSMANIPULATE: StringPair = {\n    label: \"Line of Sight Manipulate\",\n    drain: 3,\n  };\n  static readonly LOSPOINT: StringPair = {\n    label: \"Line of Sight Spawn At Point\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellRange.TOUCH.label.toLowerCase():\n        return SpellRange.TOUCH;\n      case SpellRange.SONIC.label.toLowerCase():\n        return SpellRange.SONIC;\n      case SpellRange.RADIUS90.label.toLowerCase():\n        return SpellRange.RADIUS90;\n      case SpellRange.RADIUS360.label.toLowerCase():\n        return SpellRange.RADIUS360;\n      case SpellRange.LOSAURA.label.toLowerCase():\n        return SpellRange.LOSAURA;\n      case SpellRange.LOSMANIPULATE.label.toLowerCase():\n        return SpellRange.LOSMANIPULATE;\n      case SpellRange.LOSPOINT.label.toLowerCase():\n        return SpellRange.LOSPOINT;\n      default:\n        return SpellRange.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellRange.NONE.label,\n      SpellRange.TOUCH.label,\n      SpellRange.SONIC.label,\n      SpellRange.RADIUS90.label,\n      SpellRange.RADIUS360.label,\n      SpellRange.LOSAURA.label,\n      SpellRange.LOSMANIPULATE.label,\n      SpellRange.LOSPOINT.label,\n    ];\n  };\n}\n\nexport class SpellRite {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly VERBAL: StringPair = { label: \"verbal\", drain: 2 };\n  static readonly SOMATIC: StringPair = { label: \"somatic\", drain: 1 };\n  static readonly MENTAL: StringPair = { label: \"mental\", drain: 3 };\n  static readonly RITUAL: StringPair = { label: \"ritual\", drain: 3 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellRite.VERBAL.label.toLowerCase():\n        return SpellRite.VERBAL;\n      case SpellRite.SOMATIC.label.toLowerCase():\n        return SpellRite.SOMATIC;\n      case SpellRite.MENTAL.label.toLowerCase():\n        return SpellRite.MENTAL;\n      case SpellRite.RITUAL.label.toLowerCase():\n        return SpellRite.RITUAL;\n      default:\n        return SpellRite.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellRite.NONE.label,\n      SpellRite.VERBAL.label,\n      SpellRite.SOMATIC.label,\n      SpellRite.MENTAL.label,\n      SpellRite.RITUAL.label,\n    ];\n  };\n}\n\nexport class SpellTarget {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly SINGLE: StringPair = { label: \"Single Target\", drain: 1 };\n  static readonly DAOE: StringPair = {\n    label: \"Diminishing Area Of Effect\",\n    drain: 1,\n  };\n  static readonly MULTI: StringPair = { label: \"Multiple Targets\", drain: 4 };\n  static readonly AOE: StringPair = { label: \"Area Of Effect\", drain: 2 };\n  static readonly CASTER: StringPair = { label: \"Caster\", drain: 3 };\n  static readonly TARGET: StringPair = { label: \"Caster Or Target\", drain: 3 };\n  static readonly LINE: StringPair = { label: \"Straight Line\", drain: 2 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellTarget.SINGLE.label.toLowerCase():\n        return SpellTarget.SINGLE;\n      case SpellTarget.DAOE.label.toLowerCase():\n        return SpellTarget.DAOE;\n      case SpellTarget.MULTI.label.toLowerCase():\n        return SpellTarget.MULTI;\n      case SpellTarget.AOE.label.toLowerCase():\n        return SpellTarget.AOE;\n      case SpellTarget.CASTER.label.toLowerCase():\n        return SpellTarget.CASTER;\n      case SpellTarget.TARGET.label.toLowerCase():\n        return SpellTarget.TARGET;\n      case SpellTarget.LINE.label.toLowerCase():\n        return SpellTarget.LINE;\n      default:\n        return SpellTarget.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellTarget.NONE.label,\n      SpellTarget.SINGLE.label,\n      SpellTarget.MULTI.label,\n      SpellTarget.AOE.label,\n      SpellTarget.DAOE.label,\n      SpellTarget.TARGET.label,\n      SpellTarget.CASTER.label,\n      SpellTarget.LINE.label,\n    ];\n  };\n}\n\nexport class SpellDuration {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly CONCENTRATION: StringPair = {\n    label: \"concentration\",\n    drain: 0,\n  };\n  static readonly INSTANTANEOUS: StringPair = {\n    label: \"instantaneous\",\n    drain: 1,\n  };\n  static readonly PERMANENT: StringPair = { label: \"permanent\", drain: 1 };\n  static readonly FIXEDTICKS: StringPair = {\n    label: \"fixed # of ticks\",\n    drain: 1,\n  };\n  static readonly FIXEDROUNDS: StringPair = {\n    label: \"fixed # of rounds\",\n    drain: 2,\n  };\n  static readonly FIXEDHOURS: StringPair = {\n    label: \"fixed # of hours\",\n    drain: 2,\n  };\n  static readonly CHANNEL: StringPair = { label: \"channel\", drain: -1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDuration.CONCENTRATION.label.toLowerCase():\n        return SpellDuration.CONCENTRATION;\n      case SpellDuration.INSTANTANEOUS.label.toLowerCase():\n        return SpellDuration.INSTANTANEOUS;\n      case SpellDuration.PERMANENT.label.toLowerCase():\n        return SpellDuration.PERMANENT;\n      case SpellDuration.FIXEDTICKS.label.toLowerCase():\n        return SpellDuration.FIXEDTICKS;\n      case SpellDuration.FIXEDROUNDS.label.toLowerCase():\n        return SpellDuration.FIXEDROUNDS;\n      case SpellDuration.FIXEDHOURS.label.toLowerCase():\n        return SpellDuration.FIXEDHOURS;\n      case SpellDuration.CHANNEL.label.toLowerCase():\n        return SpellDuration.CHANNEL;\n      default:\n        return SpellDuration.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDuration.NONE.label,\n      SpellDuration.CONCENTRATION.label,\n      SpellDuration.FIXEDTICKS.label,\n      SpellDuration.FIXEDROUNDS.label,\n      SpellDuration.FIXEDHOURS.label,\n      SpellDuration.CHANNEL.label,\n      SpellDuration.INSTANTANEOUS.label,\n      SpellDuration.PERMANENT.label,\n    ];\n  };\n}\n\nexport class SpellSchool {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly TRANSMUTATION: StringPair = {\n    label: \"Transmutation\",\n    drain: 1,\n  };\n  static readonly EVOCATION: StringPair = { label: \"Evocation\", drain: 0 };\n  static readonly FORTIFICATION: StringPair = {\n    label: \"Fortification\",\n    drain: 1,\n  };\n  static readonly HEX: StringPair = { label: \"Hex\", drain: 1 };\n  static readonly ILLUSION: StringPair = { label: \"Illusion\", drain: 1 };\n  static readonly CONJURATION: StringPair = { label: \"Conjuration\", drain: 2 };\n  static readonly NECROMANCY: StringPair = { label: \"Necromancy\", drain: 1 };\n  static readonly ENCHANTMENT: StringPair = { label: \"Enchantment\", drain: 2 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSchool.FORTIFICATION.label.toLowerCase():\n        return SpellSchool.FORTIFICATION;\n      case SpellSchool.HEX.label.toLowerCase():\n        return SpellSchool.HEX;\n      case SpellSchool.ILLUSION.label.toLowerCase():\n        return SpellSchool.ILLUSION;\n      case SpellSchool.NECROMANCY.label.toLowerCase():\n        return SpellSchool.NECROMANCY;\n      case SpellSchool.TRANSMUTATION.label.toLowerCase():\n        return SpellSchool.TRANSMUTATION;\n      case SpellSchool.CONJURATION.label.toLowerCase():\n        return SpellSchool.CONJURATION;\n      case SpellSchool.EVOCATION.label.toLowerCase():\n        return SpellSchool.EVOCATION;\n      case SpellSchool.ENCHANTMENT.label.toLowerCase():\n        return SpellSchool.ENCHANTMENT;\n      default:\n        return SpellSchool.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSchool.NONE.label,\n      SpellSchool.CONJURATION.label,\n      SpellSchool.EVOCATION.label,\n      SpellSchool.FORTIFICATION.label,\n      SpellSchool.HEX.label,\n      SpellSchool.ILLUSION.label,\n      SpellSchool.NECROMANCY.label,\n      SpellSchool.TRANSMUTATION.label,\n      SpellSchool.ENCHANTMENT.label,\n    ];\n  };\n}\n\nexport class SpellDrainType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly STUN: StringPair = { label: \"Stun\", drain: 0 };\n  static readonly PHYSICAL: StringPair = { label: \"Physical\", drain: -7 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDrainType.STUN.label.toLowerCase():\n        return SpellDrainType.STUN;\n      case SpellDrainType.PHYSICAL.label.toLowerCase():\n        return SpellDrainType.PHYSICAL;\n      default:\n        return SpellDrainType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDrainType.NONE.label,\n      SpellDrainType.STUN.label,\n      SpellDrainType.PHYSICAL.label,\n    ];\n  };\n}\n","export const rollCommand = (\n  commands: string,\n  krit?: boolean\n): { result: number; text: string; rolls: string } => {\n  let result = 0;\n  let text = \"\";\n\n  let newCommands = \"\";\n  commands.split(\" \").forEach((command) => {\n    if (/\\d+/g.test(command)) {\n      newCommands += command;\n    } else {\n      text += \" \" + command;\n    }\n  });\n  newCommands = newCommands.trim();\n\n  let rolls: string = \"(`\";\n  newCommands.split(\" \").forEach((fullCommand: string) => {\n    let commandSplits: string[] = [];\n    fullCommand.split(\"+\").forEach((part) => {\n      let split = part.split(\"-\");\n      commandSplits = commandSplits.concat(split);\n    });\n\n    commandSplits.forEach((command: string) => {\n      let multiplier: number = 1;\n      if (command.includes(\"d\")) {\n        if (!command.startsWith(\"d\")) {\n          multiplier = parseInt(command.split(\"d\")[0]);\n          command = command.split(\"d\")[1];\n        }\n        command = command.replaceAll(\"d\", \"\");\n        if (krit) multiplier = multiplier * 2;\n\n        if (command.includes(\"+\")) {\n          const com = command.split(\"+\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result += parseInt(com[1]);\n        } else if (command.includes(\"-\")) {\n          const com = command.split(\"-\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result -= parseInt(com[1]);\n        } else {\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(command));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n        }\n      } else {\n        result += parseInt(command);\n        rolls += command + \",\";\n      }\n    });\n    rolls = rolls.slice(0, -1) + \"`)\";\n  });\n\n  return { result: result, text: text, rolls: rolls };\n};\n\nexport const rollDie = (size: number): number => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory } from \"react-icons/bi\";\nimport { GiDiceTwentyFacesTwenty, GiSwordsPower } from \"react-icons/gi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name)\n        .then((count: number) => {\n          setEntity(count > 0);\n          setLoading(false);\n        })\n        .catch(() => {\n          setEntity(false);\n          setLoading(false);\n        });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"talent\":\n        return <GiSwordsPower />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import IEntity from \"./IEntity\";\nimport {\n  StringPair,\n  NumberPair,\n  SpellSource,\n  SpellRite,\n  SpellDuration,\n  SpellRange,\n  SpellSchool,\n  SpellTarget,\n  SpellDrainType,\n  SpellLevel,\n  SpellCastTime,\n  SpellScalingEffect,\n  SpellAoeRadius,\n  SpellDirectEffects,\n  SpellProjectileType,\n  SpellProjectileNumber,\n  SpellDamageType,\n  SpellTargetingType,\n  SpellLosRange,\n  SpellSize,\n  SpellPureDamage,\n  SpellHp,\n} from \"./SpellValues\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  source: StringPair;\n  castTime: StringPair;\n  rite: StringPair;\n  duration: StringPair;\n  durationText: string;\n  range: StringPair;\n  school: StringPair;\n  effect: string;\n  mastery: string;\n  resist: string;\n  drain: number;\n  masteryDrain: number;\n\n  drainType: StringPair;\n  scalingEffect: StringPair;\n  spellTarget: StringPair;\n  aoeRadius: StringPair;\n  damage: StringPair[];\n  directEffects: StringPair;\n  level: NumberPair;\n  projectileType: StringPair;\n  projectileNumber: StringPair;\n  damageType: StringPair;\n  targetingType: StringPair;\n  losRange: StringPair;\n  pureDamage: StringPair;\n  size: StringPair;\n  hp: StringPair;\n  chargeable: boolean;\n  needsMaterial: boolean;\n  glyph: boolean;\n\n  constructor(\n    id?: number,\n    name?: string,\n    source?: StringPair,\n    castTime?: StringPair,\n    rite?: StringPair,\n    duration?: StringPair,\n    durationText?: string,\n    range?: StringPair,\n    school?: StringPair,\n    effect?: string,\n    mastery?: string,\n    resist?: string,\n    drain?: number,\n    masteryDrain?: number,\n\n    scalingEffect?: StringPair,\n    spellTarget?: StringPair,\n    aoeRadius?: StringPair,\n    damage?: StringPair[],\n    directEffects?: StringPair,\n    level?: NumberPair,\n    projectileType?: StringPair,\n    projectileNumber?: StringPair,\n    damageType?: StringPair,\n    targetingType?: StringPair,\n    losRange?: StringPair,\n    drainType?: StringPair,\n    pureDamage?: StringPair,\n    size?: StringPair,\n    hp?: StringPair,\n    chargeable?: boolean,\n    needsMaterial?: boolean,\n    glyph?: boolean\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.source = source || SpellSource.NONE;\n    this.castTime = castTime || SpellCastTime.NONE;\n    this.rite = rite || SpellRite.NONE;\n    this.duration = duration || SpellDuration.NONE;\n    this.durationText = durationText || \"\";\n    this.range = range || SpellRange.NONE;\n    this.school = school || SpellSchool.NONE;\n    this.effect = effect || \"\";\n    this.mastery = mastery || \"\";\n    this.resist = resist || \"\";\n    this.drain = drain || 0;\n    this.masteryDrain = masteryDrain || 0;\n\n    this.scalingEffect = scalingEffect || SpellScalingEffect.NONE;\n    this.spellTarget = spellTarget || SpellTarget.NONE;\n    this.aoeRadius = aoeRadius || SpellAoeRadius.NONE;\n    this.damage = damage || [];\n    this.directEffects = directEffects || SpellDirectEffects.NONE;\n    this.level = level || SpellLevel.NONE;\n    this.projectileType = projectileType || SpellProjectileType.NONE;\n    this.projectileNumber = projectileNumber || SpellProjectileNumber.NONE;\n    this.damageType = damageType || SpellDamageType.NONE;\n    this.targetingType = targetingType || SpellTargetingType.NONE;\n    this.losRange = losRange || SpellLosRange.NONE;\n    this.drainType = drainType || SpellDrainType.NONE;\n    this.pureDamage = pureDamage || SpellPureDamage.NONE;\n    this.size = size || SpellSize.NONE;\n    this.hp = hp || SpellHp.NONE;\n    this.chargeable = chargeable || false;\n    this.needsMaterial = needsMaterial || false;\n    this.glyph = glyph || false;\n  }\n\n  static calcDrain = (spell: Spell): Spell => {\n    let drain = 0;\n    drain += spell.castTime ? spell.castTime.drain : 0;\n    drain += spell.drainType ? spell.drainType.drain : 0;\n    drain += spell.school ? spell.school.drain : 0;\n    drain += spell.duration ? spell.duration.drain : 0;\n    drain += spell.spellTarget ? spell.spellTarget.drain : 0;\n    drain += spell.rite ? spell.rite.drain : 0;\n    drain += spell.range ? spell.range.drain : 0;\n    drain += spell.source ? spell.source.drain : 0;\n    drain += spell.level ? spell.level.drain : 0;\n    drain += spell.chargeable ? -1 : 0;\n    drain += spell.needsMaterial ? -1 : 0;\n    drain += spell.targetingType ? spell.targetingType.drain : 0;\n    drain += spell.projectileType ? spell.projectileType.drain : 0;\n    drain += spell.projectileNumber ? spell.projectileNumber.drain : 0;\n    drain += spell.losRange ? spell.losRange.drain : 0;\n    drain += spell.aoeRadius ? spell.aoeRadius.drain : 0;\n    drain += spell.damage[0] ? spell.damage[0].drain : 0;\n    drain += spell.damage[1] ? spell.damage[1].drain : 0;\n    drain += spell.damage[2] ? spell.damage[2].drain : 0;\n    drain += spell.damageType ? spell.damageType.drain : 0;\n    drain += spell.scalingEffect ? spell.scalingEffect.drain : 0;\n    drain += spell.directEffects ? spell.directEffects.drain : 0;\n    drain += spell.size ? spell.size.drain : 0;\n    drain += spell.hp ? spell.hp.drain : 0;\n    drain += spell.pureDamage ? spell.pureDamage.drain : 0;\n    return { ...spell, drain: drain };\n  };\n\n  static makeCsv = (spell: Spell): any[] => {\n    return [\n      spell.id,\n      spell.name,\n      spell.source.label,\n      spell.castTime.label,\n      spell.rite.label,\n      spell.duration.label,\n      spell.durationText,\n      spell.range.label,\n      spell.school.label,\n      spell.effect,\n      spell.mastery,\n      spell.resist,\n      spell.drain,\n      spell.masteryDrain,\n      spell.scalingEffect.label,\n      spell.spellTarget.label,\n      spell.aoeRadius.label,\n      spell.damage[0].label +\n        \", \" +\n        spell.damage[1].label +\n        \", \" +\n        spell.damage[2].label,\n      spell.directEffects.label,\n      spell.level.label,\n      spell.projectileType.label,\n      spell.projectileNumber.label,\n      spell.damageType.label,\n      spell.targetingType.label,\n      spell.losRange.label,\n      spell.drainType.label,\n      spell.pureDamage.label,\n      spell.size.label,\n      spell.hp.label,\n      spell.chargeable,\n      spell.needsMaterial,\n      spell.glyph,\n    ];\n  };\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourceCheck = arg.source !== undefined && typeof arg.source == \"string\";\n  const castTimeCheck =\n    arg.castTime !== undefined && typeof arg.castTime == \"string\";\n  const riteCheck = arg.rite !== undefined && typeof arg.rite == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const masteryCheck =\n    arg.mastery !== undefined && typeof arg.mastery == \"string\";\n  const resistCheck = arg.resist !== undefined && typeof arg.resist == \"string\";\n  const drainCheck = arg.drain !== undefined && typeof arg.drain == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    sourceCheck &&\n    castTimeCheck &&\n    riteCheck &&\n    durationCheck &&\n    rangeCheck &&\n    schoolCheck &&\n    effectCheck &&\n    damageCheck &&\n    masteryCheck &&\n    resistCheck &&\n    drainCheck\n  );\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  hp: number;\n  abilityModifier: string;\n  size: string;\n  stamina: number;\n  talents: string[];\n  flaws: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    hp?: number,\n    abilityModifier?: string,\n    size?: string,\n    stamina?: number,\n    talents?: string[],\n    flaws?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.abilityModifier = abilityModifier || \"\";\n    this.size = size || \"\";\n    this.stamina = stamina || 0;\n    this.talents = talents || [];\n    this.flaws = flaws || [];\n  }\n\n  static makeCsv = (race: Race): any[] => {\n    return [\n      race.id,\n      race.name,\n      race.hp,\n      race.abilityModifier,\n      race.size,\n      race.stamina,\n      race.talents,\n      race.flaws,\n    ];\n  };\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const abilityModifierCheck =\n    arg.abilityModifier !== undefined && typeof arg.abilityModifier == \"number\";\n  const talentsCheck = arg.talents !== undefined && Array.isArray(arg.talents);\n  const flawsCheck = arg.flaws !== undefined && Array.isArray(arg.flaws);\n\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    abilityModifierCheck &&\n    talentsCheck &&\n    flawsCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { sendMessage } from \"../../services/DiscordService\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst SmallFormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20(`\" + (result - value) + \"`)\" + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <Link onClick={() => history.push(link)}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </Link>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <FormatedTextContainer>{formatedText}</FormatedTextContainer>;\n};\n\nexport default SmallFormatedText;\n\nconst FormatedTextContainer = styled.div`\n  padding: 5px;\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Talent from \"../../../data/Talent\";\nimport SmallFormatedText from \"../../general_elements/SmallFormatedText\";\n\ninterface $Props {\n  talent: Talent;\n}\n\nconst TalentTile = ({ talent }: $Props) => {\n  return (\n    <Tile to={\"/talent-detail/id/\" + talent.id} $isflaw={talent.isFlaw}>\n      <Cost>\n        <b>{talent.cost}</b>\n      </Cost>\n\n      <Name>\n        <b>{talent.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <Prop>{talent.type ? talent.stress : \"Passive\"}</Prop>\n        <SmallFormatedText text={talent.prerequisite} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default TalentTile;\n\ntype type = {\n  $isflaw: boolean;\n};\n\nconst Tile = styled(Link)<type>`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  ${(props) => {\n    if (props.$isflaw) {\n      return `background-color: ${props.theme.input.backgroundColor};`;\n    } else {\n      return `background-color: ${props.theme.tile.backgroundColor};`;\n    }\n  }}\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n`;\n\nconst Cost = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: white;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n  }\n`;\n","import IEntity from \"./IEntity\";\n\nexport default class Power implements IEntity {\n  id?: number;\n  name: string;\n  isAdept: boolean;\n  path: string;\n  cost: number;\n  prerequisite: string;\n  effect: string;\n  type: boolean;\n  stress: string;\n  ticks: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    isAdept?: boolean,\n    path?: string,\n    cost?: number,\n    prerequisite?: string,\n    effect?: string,\n    type?: boolean,\n    stress?: string,\n    ticks?: string\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.isAdept = isAdept || false;\n    this.path = path || \"\";\n    this.cost = cost || 0;\n    this.prerequisite = prerequisite || \"\";\n    this.effect = effect || \"\";\n    this.type = type || false;\n    this.stress = stress || \"\";\n    this.ticks = ticks || \"\";\n  }\n\n  static makeCsv = (power: Power): any[] => {\n    return [\n      power.id,\n      power.name,\n      power.ticks,\n    ];\n  };\n}\n\nexport function isPower(arg: any): arg is Power {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"number\";\n  const isFlawCheck =\n    arg.isFlaw !== undefined && typeof arg.isFlaw == \"boolean\";\n  const prerequisiteCheck =\n    arg.prerequisite !== undefined && typeof arg.prerequisite == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"boolean\";\n  const stressCheck = arg.stress !== undefined && typeof arg.stress == \"string\";\n  const triggerCheck =\n    arg.trigger !== undefined && typeof arg.trigger == \"string\";\n  const triggerFrequencyCheck =\n    arg.triggerFrequency !== undefined &&\n    typeof arg.triggerFrequency == \"string\";\n  const ticksCheck = arg.ticks !== undefined && typeof arg.ticks == \"string\";\n\n  return (\n    arg &&\n    nameCheck &&\n    costCheck &&\n    isFlawCheck &&\n    prerequisiteCheck &&\n    effectCheck &&\n    typeCheck &&\n    stressCheck &&\n    triggerCheck &&\n    triggerFrequencyCheck &&\n    ticksCheck\n  );\n}\n"],"sourceRoot":""}