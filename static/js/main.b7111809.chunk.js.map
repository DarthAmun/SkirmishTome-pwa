{"version":3,"sources":["components/SearchbarStyle.tsx","components/form_elements/StringField.tsx","components/form_elements/IconButton.tsx","database/SkirmishDB.tsx","services/DatabaseService.tsx","components/theme/Theme.tsx","components/form_elements/TextButton.tsx","components/Loading.tsx","hooks/webhookHook.tsx","services/DiscordService.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","components/general_elements/TabBar.tsx","components/theme/MyThemeProvider.tsx","hooks/QueryHook.tsx","components/entities/characters/details/CharacterView.tsx","logo192.png","../node_modules/peerjs/dist sync","components/navigation/Header.tsx","components/navigation/NavButton.tsx","components/navigation/NavMenu.tsx","components/navigation/Navigation.tsx","components/AppWrapper.tsx","components/entities/characters/lab/CharLabGeneral.tsx","data/Character.tsx","components/entities/characters/lab/CharLab.tsx","App.tsx","serviceWorker.js","index.js"],"names":["Tooltip","styled","span","theme","main","highlight","LeftTooltip","RightTooltip","Bar","div","open","backgroundColor","FixedBar","SearchBar","buttons","color","CreateButton","button","hoverColor","ExportButton","StringField","value","label","placeholder","icon","transform","onChange","Field","LabelText","Icon","Input","type","e","target","tile","FontAwesomeIcon","input","IconButton","floatLeft","disabled","style","onClick","SimpleButton","left","DisabledSimpleButton","height","SkirmishDB","randomTables","talents","races","spells","powers","skills","items","traditions","characters","version","stores","table","Dexie","updateWithCallback","tableName","data","callback","db","then","update","id","result","finally","close","saveNew","entity","filename","a","put","prom","saveNewFromList","entities","refinedEntities","map","bulkPut","remove","undefined","delete","reciveAll","toArray","array","reciveCount","count","reciveCountPromise","recivePromiseByAttribute","name","where","equalsIgnoreCase","recivePromise","get","recivePromiseByAttributeCount","equals","reciveAllPromise","applyFilters","obj","filters","test","forEach","filter","fieldName","Array","hasTag","fieldPart","toLowerCase","includes","push","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAllFilteredPromise","reciveAttributeSelectionPromise","attribute","orderBy","uniqueKeys","createNewWithId","deleteAll","clear","exportFilteredFromTable","all","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","document","createElement","download","href","encodeURIComponent","body","appendChild","click","removeChild","lightTheme","header","backgroundColorLink","headerColor","boxShadow","nav","size","small","width","medium","large","darkTheme","TextButton","text","LoadingSpinner","Spinner","faDiceD20","r","cx","cy","stopColor","offset","CompleteLoadingSpinner","CompleteWrapper","LocalLoadingSpinner","Wrapper","LocalSpinner","useWebhook","localStorage","getItem","hook","sendMessage","webhook","content","avatar","request","XMLHttpRequest","setRequestHeader","params","username","avatar_url","send","sendEmbedMessage","console","log","formatDiscordText","replaceAll","P2PSender","mode","useState","setName","peer","setPeer","error","setError","useEffect","brokerId","min","max","password","i","length","Math","floor","random","generateBrokerId","newPeer","Peer","host","secure","on","conn","errorData","disconnected","destroyed","reconnect","results","faExclamationCircle","TabBar","children","activeTab","child","index","Tab","key","isActive","props","ctx","createContext","c","useContext","Error","Provider","createCtx","useTheme","CtxProvider","MyThemeProvider","setTheme","localTheme","setItem","useQuery","URLSearchParams","useLocation","search","CharacterView","character","json","setJson","setSend","setTalents","history","useHistory","newJson","embeds","author","fields","CenterWrapper","View","Name","PropWrapper","talent","link","tal","TalentLink","flaws","flaw","Prop","faDiscord","faPaperPlane","module","exports","webpackEmptyContext","req","code","keys","resolve","Header","NameWrapper","Logo","src","LogoImg","HomeCredits","packageJson","img","NavButton","setOpen","Button","NavMenu","location","Menu","TopSide","to","className","pathname","faHome","MiddleSide","LeftSide","faTable","RightSide","faMeteor","faUsers","BottomSide","Seperator","faChartPie","faCog","Navigation","Nav","AppWrapper","moveNav","handlers","useSwipeable","onSwipedRight","onSwipedLeft","Content","App","CharSize","CharArcaneCoreAbility","CharLabGeneral","char","completed","CharView","player","pic","faCheckCircle","Character","house","title","totalXPSpent","xpToSpend","charLevel","race","archetype","origin","appearance","abilityRating","arcaneAffinity","combat","actions","money","socialTraits","baseAbilitySkills","weaponSkills","knowledgeSkills","adeptPowers","ascensionPowers","this","background","education","caste","age","weight","sizeclass","dex","str","reac","will","int","luck","magic","faith","arcaneCoreAbility","ascensionLevel","tradition","path","currentHp","currentSp","woundCurrent","copper","silverling","neekon","start","end","makeCsv","CharLab","setTab","newChar","updateChar","completedGeneral","setGeneral","completedClass","completedRace","completedBackground","completedAbilities","completedEquipment","tab","nextTab","faEdit","ToEntity","lazy","EntityOverview","Help","Home","Options","Statistics","fallback","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","process","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.b7111809.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Tooltip = styled.span`\n  visibility: hidden;\n  width: 120px;\n  font-size: 16px;\n  background-color: ${({ theme }) => theme.main.highlight};\n  color: #fff;\n  text-align: center;\n  border-radius: 10px;\n  padding: 5px 0;\n  margin-top: -5px;\n  position: absolute;\n  z-index: 1;\n  opacity: 0.6;\n  transition: 0.3s;\n`;\n\nexport const LeftTooltip = styled(Tooltip)`\n  right: 150%;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent transparent transparent ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nexport const RightTooltip = styled(Tooltip)`\n  left: 150%;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    right: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent ${({ theme }) => theme.main.highlight} transparent transparent;\n  }\n`;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nexport const Bar = styled.div<SearchMode>`\n  position: absolute;\n  z-index: 50;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 125px);\n  padding: 10px 10px 10px 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nexport const FixedBar = styled(Bar)<SearchMode>`\n  position: fixed;\n  top: 40px;\n  left: 100px;\n  z-index: 900;\n\n  @media (max-width: 576px) {\n    min-width: calc(100% - 20px);\n    left: 0px;\n  }\n`;\n\nexport const SearchBar = styled.div<SearchMode>`\n  position: absolute;\n  bottom: -35px;\n  left: calc(50% - 17px);\n\n  height: 40px;\n  width: 40px;\n  transform: rotate(45deg);\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  text-align: center;\n  line-height: 40px;\n\n  @media (max-width: 576px) {\n    left: calc(50% - 20px);\n  }\n\n  svg {\n    transform: rotate(-45deg);\n  }\n`;\n\nexport const CreateButton = styled.button`\n    position: fixed;\n    bottom: 10px;\n    right: 10px;\n    top: auto;\n    z-index: 100;\n  \n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n    box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n    border: none;\n    padding: 10px;\n    box-sizing:content-box;\n    line-height: 20px;\n    cursor: pointer;\n  \n    width: 30px;\n    height: 30px;\n    border-radius: 40px;\n    text-decoration: none;\n  \n    &:hover {\n      color: ${({ theme }) => theme.buttons.hoverColor};\n      ${LeftTooltip} {\n        opacity: 1;\n        visibility: visible;\n      }\n    }\n  `;\n\nexport const ExportButton = styled(CreateButton)`\n  bottom: 70px;\n`;\n\nexport const FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  style?: any;\n  onClick?: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, style, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick} style={style}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton style={style}>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import Dexie from \"dexie\";\nimport Character from \"../data/Character\";\nimport Item from \"../data/Item\";\nimport Power from \"../data/Power\";\nimport Race from \"../data/Race\";\nimport RandomTable from \"../data/RandomTable\";\nimport Skill from \"../data/Skill\";\nimport Spell from \"../data/Spell\";\nimport Talent from \"../data/Talent\";\nimport Tradition from \"../data/Tradition\";\n\nexport class SkirmishDB extends Dexie {\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  talents: Dexie.Table<Talent, number>;\n  races: Dexie.Table<Race, number>;\n  spells: Dexie.Table<Spell, number>;\n  powers: Dexie.Table<Power, number>;\n  skills: Dexie.Table<Skill, number>;\n  items: Dexie.Table<Item, number>;\n  traditions: Dexie.Table<Tradition, number>;\n  characters: Dexie.Table<Character, number>;\n\n  constructor() {\n    super(\"SkirmishTomeDB\");\n    this.version(1).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(2).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(3).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery,resist, drain\",\n    });\n    this.version(4).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n    });\n    this.version(5).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n      powers:\n        \"++id, name, source, isAdept, path, cost, prerequisite, effect, type, stress, ticks\",\n    });\n    this.version(6).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n      powers:\n        \"++id, name, source, isAdept, path, cost, prerequisite, effect, type, stress, ticks\",\n      skills:\n        \"++id, name, source, details, die, bonus, mod, disadvantage, advantage\",\n    });\n    this.version(7).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n      powers:\n        \"++id, name, source, isAdept, path, cost, prerequisite, effect, type, stress, ticks\",\n      skills:\n        \"++id, name, source, details, die, bonus, mod, disadvantage, advantage\",\n      items: \"++id, name, description, quality\",\n      traditions: \"++id, name, isPath, availablleSpellSources, powers\",\n    });\n    this.version(8).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n      powers:\n        \"++id, name, source, isAdept, path, cost, prerequisite, effect, type, stress, ticks\",\n      skills:\n        \"++id, name, source, details, die, bonus, mod, disadvantage, advantage\",\n      items: \"++id, name, description, quality\",\n      traditions: \"++id, name, isPath, availablleSpellSources, powers\",\n      characters:\n        \"++id, name, house, title, player, totalXPSpent, xpToSpend, charLevel, race, archetype, origin, appearance, abilityRating, arcaneAffinity, actions, money, socialTraits, talents, flaws, baseAbilitySkills, skills, weaponSkills, knowledgeSkills, spells, adeptPowers, ascensionPowers, items  \",\n    });\n\n    this.talents = this.table(\"talents\");\n    this.spells = this.table(\"spells\");\n    this.races = this.table(\"races\");\n    this.powers = this.table(\"powers\");\n    this.skills = this.table(\"skills\");\n    this.items = this.table(\"items\");\n    this.traditions = this.table(\"traditions\");\n    this.randomTables = this.table(\"randomTables\");\n    this.characters = this.table(\"characters\");\n  }\n}\n","import { SkirmishDB } from \"../database/SkirmishDB\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\n// export const saveNewFromList = (tableName: string, entities: BookeeEntry[]) => {\n//   const db = new BookeeDB();\n//   db.open()\n//     .then(async function () {\n//       const refinedEntities = (entities as BookeeEntry[]).map(\n//         (entity: BookeeEntry) => {\n//           delete entity[\"id\"];\n//           return entity;\n//         }\n//       );\n//       const prom = await db.table(tableName).bulkPut(refinedEntities);\n//       return prom;\n//     })\n//     .finally(function () {\n//       db.close();\n//     });\n// };\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new SkirmishDB();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new SkirmishDB();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","interface Theme {\n  buttons: {\n    color: string;\n    backgroundColor: string;\n    disabled: string;\n    hoverColor: string;\n    height: string;\n  };\n  input: {\n    color: string;\n    backgroundColor: string;\n  };\n  main: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  header: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  tile: {\n    backgroundColor: string;\n    backgroundColorLink: string;\n    color: string;\n    headerColor: string;\n    boxShadow: string;\n  };\n  nav: {\n    size: {\n      small: {\n        width: string;\n        height: string;\n      };\n      medium: {\n        width: string;\n        height: string;\n      };\n      large: {\n        width: string;\n        height: string;\n      };\n    };\n  };\n}\n\nexport const lightTheme: Theme = {\n  buttons: {\n    color: \"white\",\n    backgroundColor: \"#7033FF\",\n    disabled: \"#E1D0E5\",\n    hoverColor: \"darkgrey\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"inherit\",\n    backgroundColor: \"white\",\n  },\n  main: {\n    backgroundColor: \"#F3F5F8\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  header: {\n    color: \"white\",\n    backgroundColor: \"#7033FF\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"white\",\n    backgroundColorLink: \"lightslategray\",\n    color: \"darkgrey\",\n    headerColor: \"black\",\n    boxShadow: \"\",\n  },\n  nav: {\n    size: {\n      small: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      medium: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      large: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n    },\n  },\n};\n\nexport const darkTheme: Theme = {\n  buttons: {\n    color: \"#fff\",\n    backgroundColor: \"#202020\",\n    disabled: \"#E1D0E5\",\n    hoverColor: \"#191D38\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"#435E70\",\n    backgroundColor: \"#202020\",\n  },\n  main: {\n    backgroundColor: \"#222222\",\n    color: \"\",\n    highlight: \"#435E70\",\n  },\n  header: {\n    color: \"white\",\n    backgroundColor: \"#222222\",\n    highlight: \"#435E70\",\n  },\n  tile: {\n    backgroundColor: \"#3E3E3E\",\n    backgroundColorLink: \"#435E70\",\n    headerColor: \"#2e2e2e\",\n    color: \"white\",\n    boxShadow: \"\",\n  },\n  nav: {\n    size: {\n      ...lightTheme.nav.size,\n    },\n  },\n};\n\nexport default Theme;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  style?: any;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, style, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled} style={style}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const LoadingSpinner = () => (\n  <Spinner>\n    <Icon icon={faDiceD20} />\n    <svg width=\"0\" height=\"0\">\n      <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n        <stop stopColor=\"#350069\" offset=\"0\" />\n        <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n      </radialGradient>\n    </svg>\n  </Spinner>\n);\n\nexport const CompleteLoadingSpinner = () => (\n  <CompleteWrapper>\n    <Spinner>\n      <Icon icon={faDiceD20} />\n      <svg width=\"0\" height=\"0\">\n        <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n          <stop stopColor=\"#350069\" offset=\"0\" />\n          <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n        </radialGradient>\n      </svg>\n    </Spinner>\n  </CompleteWrapper>\n);\n\nexport const LocalLoadingSpinner = () => (\n  <Wrapper>\n    <LocalSpinner>\n      <Icon icon={faDiceD20} />\n      <svg width=\"0\" height=\"0\">\n        <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n          <stop stopColor=\"#350069\" offset=\"0\" />\n          <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n        </radialGradient>\n      </svg>\n    </LocalSpinner>\n  </Wrapper>\n);\n\nconst Wrapper = styled.div`\n  height: 100px;\n  width: 100px;\n  margin: 1em auto;\n`;\n\nconst CompleteWrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst LocalSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  font-size: 40px;\n\n  svg * {\n    fill: url(#rg);\n  }\n`;\n\nconst Spinner = styled(LocalSpinner)`\n  position: fixed;\n  z-index: 940;\n  top: calc(50% - 20px);\n  right: calc(50% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  width: 100%;\n  height: 100%;\n  border-radius: 150px;\n  border: 5px solid ${({ theme }) => theme.main.backgroundColor};\n  animation: bounce 2s linear infinite;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n\n  @-webkit-keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      -webkit-transform: translateY(0);\n    }\n    50% {\n      -webkit-transform: translateY(-5px);\n    }\n  }\n\n  @keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-5px);\n    }\n  }\n`;\n","export function useWebhook(): { hook: string; name: string } | undefined {\n  if (localStorage.getItem(\"webhook\") !== null && localStorage.getItem(\"webhook\") !== \"\") {\n    let name = \"SkirmishTome\";\n    if (localStorage.getItem(\"webhook_user\") !== null)\n      name = localStorage.getItem(\"webhook_user\") + \"\";\n    return { hook: localStorage.getItem(\"webhook\") + \"\", name: name };\n  } else return undefined;\n}\n","export const sendMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  content: string,\n  avatar?: string\n) => {\n  if (webhook !== undefined) {\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    let params = {\n      username: webhook.name !== \"\" ? webhook.name : \"SkirmishTome\",\n      avatar_url: avatar !== undefined ? avatar : \"\",\n      content: content,\n    };\n    request.send(JSON.stringify(params));\n  }\n};\n\nexport const sendEmbedMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  params: string\n) => {\n  if (webhook !== undefined) {\n    console.log(params);\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.send(params);\n  }\n};\n\nexport const formatDiscordText = (text: string): string => {\n  if (text.includes(\"[[\")) {\n    return text.replaceAll(\"[[\", \"*\").replaceAll(\"]]\", \"*\");\n  } else {\n    return text;\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React, { useEffect, createContext, useContext, useState } from \"react\";\nimport Theme, { darkTheme, lightTheme } from \"./Theme\";\nimport { ThemeProvider } from \"styled-components\";\n\nexport function createCtx<ContextType>() {\n  const ctx = createContext<ContextType | undefined>(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (!c) throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n\ntype ThemeContextType = {\n  theme: Theme;\n  setTheme: (value: Theme) => void;\n};\n\nexport const [useTheme, CtxProvider] = createCtx<ThemeContextType>();\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const MyThemeProvider = ({ children }: Props) => {\n  const [theme, setTheme] = useState(darkTheme);\n\n  useEffect(() => {\n    let localTheme = localStorage.getItem(\"theme\");\n    if (localTheme !== undefined) {\n      if (localTheme === \"light\") {\n        setTheme(lightTheme);\n        localStorage.setItem(\"theme\", \"light\");\n      } else {\n        setTheme(darkTheme);\n        localStorage.setItem(\"theme\", \"dark\");\n      }\n    } else {\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  }, []);\n\n  return (\n    <CtxProvider value={{ theme, setTheme }}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CtxProvider>\n  );\n};\n","import { useLocation } from \"react-router-dom\";\n\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\nimport Character from \"../../../../data/Character\";\nimport P2PSender from \"../../../p2p/P2PSender\";\nimport TextButton from \"../../../form_elements/TextButton\";\nimport { useWebhook } from \"../../../../hooks/webhookHook\";\nimport { sendEmbedMessage } from \"../../../../services/DiscordService\";\nimport { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport { useHistory } from \"react-router\";\nimport Talent from \"../../../../data/Talent\";\nimport { reciveAll } from \"../../../../services/DatabaseService\";\nimport FormatedText from \"../../../general_elements/FormatedText\";\n\ninterface $Props {\n  character: Character;\n}\n\nconst CharacterView = ({ character }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [send, setSend] = useState<boolean>(false);\n  const [talents, setTalents] = useState<Talent[]>([]);\n  let history = useHistory();\n\n  useEffect(() => {\n    reciveAll(\"talents\", (results: any[]) => {\n      setTalents(results);\n    });\n  }, [character]);\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (SkirmishTome)\",\n        embeds: [\n          {\n            author: {\n              name: character.name,\n            },\n            fields: [],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [character, webhook]);\n\n  return (\n    <CenterWrapper>\n      <View>\n        <Name>\n          <b>{character.name}</b>\n        </Name>\n\n        <PropWrapper>\n          {/* <Prop>\n            <PropTitle>Hp: </PropTitle>\n            {character.hp}\n          </Prop>\n          <Prop>\n            <PropTitle>Stamina: </PropTitle>\n            {character.stamina}\n          </Prop>\n          <Prop>\n            <PropTitle>Size: </PropTitle>\n            {character.size}\n          </Prop>\n          <Prop>\n            <PropTitle>Sprint: </PropTitle>\n            {character.sprint}\n          </Prop>\n          <Prop>\n            <PropTitle>Ability Modifier: </PropTitle>\n            {character.abilityModifier}\n          </Prop>\n          <Prop>\n            <PropTitle>Limits: </PropTitle>\n            {character.limit}\n          </Prop>\n          <Text>\n            <PropTitle>Stress: </PropTitle>\n            <FormatedText text={character.description} />\n          </Text> */}\n        </PropWrapper>\n\n        <PropWrapper>\n          {character.talents.length > 0 &&\n            character.talents.map((talent, index: number) => {\n              const link: string =\n                \"/talent-detail/id/\" +\n                talents.filter((tal) => tal.name === talent)[0]?.id;\n              return (\n                <TalentLink key={index} onClick={() => history.push(link)}>\n                  {talent}\n                </TalentLink>\n              );\n            })}\n        </PropWrapper>\n        <PropWrapper>\n          {character.flaws.length > 0 &&\n            character.flaws.map((flaw, index: number) => (\n              <Prop key={index}>{flaw}</Prop>\n            ))}\n        </PropWrapper>\n        <PropWrapper>\n          {webhook !== undefined && (\n            <TextButton\n              style={{\n                backgroundColor: \"#7289da\",\n              }}\n              text={`Cast ${character.name}`}\n              icon={faDiscord}\n              onClick={() => sendEmbedMessage(webhook, json)}\n            />\n          )}\n          {!send && (\n            <TextButton\n              text={`Send ${character.name}`}\n              icon={faPaperPlane}\n              onClick={() => setSend(true)}\n            />\n          )}\n          {!!send && <P2PSender data={character} mode={\"THIS\"} />}\n        </PropWrapper>\n      </View>\n    </CenterWrapper>\n  );\n};\n\nexport default CharacterView;\n\nconst CenterWrapper = styled.div`\n  overflow: hidden;\n  width: 100%;\n  height: 100%;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  max-width: 800px;\n  padding: 5px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 5px 5px 10px 5px;\n  width: calc(100% - 30px);\n  color: white;\n  text-align: center;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  float: left;\n  padding: 10px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n\nconst PropTitle = styled.span`\n  display: inline-block;\n  color: ${({ theme }) => theme.tile.backgroundColorLink};\n  text-decoration: none;\n  margin: 0px 5px 0px 5px;\n`;\n\nconst TalentLink = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  margin: 5px;\n  padding: 5px;\n  cursor: pointer;\n`;\n\nconst Text = styled.div`\n  height: auto;\n  width: calc(100% - 30px);\n  margin: 10px 5px 5px 5px;\n  float: left;\n  line-height: 18px;\n  padding: 10px;\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n`;\n","module.exports = __webpack_public_path__ + \"static/media/logo192.a0b12edf.png\";","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 72;","import React from \"react\";\nimport styled from \"styled-components\";\nimport packageJson from \"../../../package.json\";\nimport LogoImg from \"../../logo192.png\";\n\nconst Header = () => {\n  return (\n    <Bar>\n      <NameWrapper>\n        <Logo src={LogoImg} />\n        <Name>SkirmishTome</Name>\n      </NameWrapper>\n      <HomeCredits>v{packageJson.version}</HomeCredits>\n    </Bar>\n  );\n};\n\nexport default Header;\n\nconst Bar = styled.div`\n  width: calc(100% - 20px);\n  height: 30px;\n  line-height: 30px;\n  padding: 10px 10px 10px 10px;\n  background-color: ${({ theme }) => theme.header.backgroundColor};\n  color: ${({ theme }) => theme.header.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n  display: flex;\n  position: fixed;\n  justify-content: space-between;\n  z-index: 1000;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n\n  @media (max-width: 576px) {\n    width: calc(100% - 60px);\n    padding: 10px 10px 10px 50px;\n  }\n`;\n\nconst NameWrapper = styled.div`\n  width: 150px;\n  svg {\n    float: left;\n    font-size: 30px;\n    margin-right: 5px;\n  }\n`;\n\nconst Name = styled.div`\n  width: 95px;\n  height: 30px;\n  font-size: 20px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  float: left;\n`;\n\nconst HomeCredits = styled.div`\n  width: 60px;\n  height: 30px;\n  font-size: 10px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  text-align: center;\n`;\n\nconst Logo = styled.img`\n  height: 30px;\n  float: left;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst NavButton = ({ open, setOpen }: $Props) => {\n  return (\n    <Button open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </Button>\n  );\n};\n\nexport default NavButton;\n\ntype ButtonType = {\n  open?: boolean;\n};\n\nconst Button = styled.button<ButtonType>`\n  position: fixed;\n  top: 15px;\n  left: 20px;\n  display: none;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 20px;\n  height: 20px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1001;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 20px;\n    height: 2px;\n    background: ${({ theme }) => theme.buttons.color};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\n    }\n  }\n\n  @media (max-width: 576px) {\n    display: flex;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCog,\n  faChartPie,\n  faHome,\n  faTable,\n  faMeteor,\n  faUsers,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { RightTooltip } from \"../SearchbarStyle\";\nimport {\n  GiAura,\n  GiBackpack,\n  GiInterstellarPath,\n  GiSkills,\n  GiSwordsPower,\n  GiWomanElfFace,\n} from \"react-icons/gi\";\n\ninterface $Props {\n  open: boolean;\n}\n\nconst NavMenu = ({ open }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Menu open={open}>\n      <TopSide>\n        <Link\n          to=\"/home\"\n          className={\n            location.pathname === \"/home\" || location.pathname === \"/\"\n              ? \"menuItemActiv\"\n              : \"\"\n          }\n        >\n          <FontAwesomeIcon icon={faHome} />\n          <RightTooltip>Home</RightTooltip>\n        </Link>\n      </TopSide>\n      <MiddleSide>\n        <LeftSide>\n          <Link\n            to=\"/randomTable-overview\"\n            className={\n              location.pathname === \"/randomTable-overview\"\n                ? \"menuItemActiv\"\n                : \"\"\n            }\n          >\n            <FontAwesomeIcon icon={faTable} />\n            <RightTooltip>Random Tables</RightTooltip>\n          </Link>\n        </LeftSide>\n        <RightSide>\n          <Link\n            to=\"/spell-overview\"\n            className={\n              location.pathname === \"/spell-overview\" ? \"menuItemActiv\" : \"\"\n            }\n          >\n            <FontAwesomeIcon icon={faMeteor} />\n            <RightTooltip>Spells</RightTooltip>\n          </Link>\n          <Link\n            to=\"/talent-overview\"\n            className={\n              location.pathname === \"/talent-overview\" ? \"menuItemActiv\" : \"\"\n            }\n          >\n            <GiSwordsPower />\n            <RightTooltip>Talents</RightTooltip>\n          </Link>\n          <Link\n            to=\"/power-overview\"\n            className={\n              location.pathname === \"/power-overview\" ? \"menuItemActiv\" : \"\"\n            }\n          >\n            <GiAura />\n            <RightTooltip>Power</RightTooltip>\n          </Link>\n          <Link\n            to=\"/skill-overview\"\n            className={\n              location.pathname === \"/skill-overview\" ? \"menuItemActiv\" : \"\"\n            }\n          >\n            <GiSkills />\n            <RightTooltip>Skill</RightTooltip>\n          </Link>\n          <Link\n            to=\"/race-overview\"\n            className={\n              location.pathname === \"/race-overview\" ? \"menuItemActiv\" : \"\"\n            }\n          >\n            <GiWomanElfFace />\n            <RightTooltip>Races</RightTooltip>\n          </Link>\n          <Link\n            to=\"/item-overview\"\n            className={\n              location.pathname === \"/item-overview\" ? \"menuItemActiv\" : \"\"\n            }\n          >\n            <GiBackpack />\n            <RightTooltip>Items</RightTooltip>\n          </Link>\n          <Link\n            to=\"/tradition-overview\"\n            className={\n              location.pathname === \"/tradition-overview\" ? \"menuItemActiv\" : \"\"\n            }\n          >\n            <GiInterstellarPath />\n            <RightTooltip>Traditions</RightTooltip>\n          </Link>\n          <Link\n            to=\"/character-overview\"\n            className={\n              location.pathname === \"/character-overview\" ? \"menuItemActiv\" : \"\"\n            }\n          >\n            <FontAwesomeIcon icon={faUsers} />\n            <RightTooltip>Characters</RightTooltip>\n          </Link>\n        </RightSide>\n      </MiddleSide>\n      <BottomSide>\n        <Seperator />\n        <Link\n          to=\"/statistics\"\n          className={location.pathname === \"/statistics\" ? \"menuItemActiv\" : \"\"}\n        >\n          <FontAwesomeIcon icon={faChartPie} />\n          <RightTooltip>Statistics</RightTooltip>\n        </Link>\n        <Link\n          to=\"/options\"\n          className={location.pathname === \"/options\" ? \"menuItemActiv\" : \"\"}\n        >\n          <FontAwesomeIcon icon={faCog} />\n          <RightTooltip>Options</RightTooltip>\n        </Link>\n      </BottomSide>\n    </Menu>\n  );\n};\n\nexport default NavMenu;\n\ntype MenuType = {\n  open?: boolean;\n};\n\nexport const Menu = styled.div<MenuType>`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  background: ${({ theme }) => theme.main.backgroundColor};\n  height: calc(100vh - 1.5em - 55px);\n  text-align: center;\n  padding: 1rem;\n\n  overflow: visible;\n\n  position: fixed;\n  z-index: 950;\n  top: 50px;\n  left: 0;\n\n  @media (max-width: 576px) {\n    transition: transform 0.3s ease-in-out;\n    transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(-100%)\")};\n  }\n`;\n\nconst Seperator = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.tile.backgroundColor};\n  flex: 1 1 auto;\n  min-width: 100%;\n  max-height: 0px;\n  margin-top: -1px;\n  margin-bottom: -1px;\n`;\n\nconst TopSide = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: calc(100% - 10px);\n\n  svg {\n    margin-right: 5px;\n  }\n\n  a {\n    flex: 1 1 auto;\n    max-height: 20px;\n    font-size: 20px;\n    text-align: center;\n    padding: 0.75rem 0;\n    color: ${({ theme }) => theme.tile.color};\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    position: relative;\n    display: inline-block;\n\n    svg {\n      padding: 0px;\n      margin: 0px;\n    }\n  }\n\n  a:hover {\n    color: ${({ theme }) => theme.tile.color};\n    ${RightTooltip} {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n\n  a.menuItemActiv {\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\nconst MiddleSide = styled.div``;\nconst BottomSide = styled(TopSide)``;\nconst LeftSide = styled(TopSide)`\n  width: 32px;\n  float: left;\n`;\nconst RightSide = styled(LeftSide)`\n  margin-left: 5px;\n  padding-left: 5px;\n  border-left: 2px solid ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport NavButton from \"./NavButton\";\nimport NavMenu from \"./NavMenu\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst Navigation = ({ open, setOpen }: $Props) => {\n  return (\n    <Nav>\n      <NavButton open={open} setOpen={setOpen} />\n      <NavMenu open={open} />\n    </Nav>\n  );\n};\n\nexport default Navigation;\n\nconst Nav = styled.div`\n  max-width: 100px;\n  height: auto;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import React, { ReactNode, useState } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport styled from \"styled-components\";\nimport Header from \"./navigation/Header\";\nimport Navigation from \"./navigation/Navigation\";\n\ninterface $Props {\n  children: ReactNode;\n}\n\nconst AppWrapper = ({ children }: $Props) => {\n  const [open, setOpen] = useState(false);\n\n  const moveNav = (mode: string) => {\n    if (mode === \"open\") {\n      setOpen(true);\n    } else {\n      setOpen(false);\n    }\n  };\n\n  const handlers = useSwipeable({\n    onSwipedRight: () => moveNav(\"open\"),\n    onSwipedLeft: () => moveNav(\"close\"),\n  });\n\n  return (\n    <App {...handlers}>\n      <Header />\n      <Navigation open={open} setOpen={setOpen} />\n      <Content>{children}</Content>\n    </App>\n  );\n};\n\nexport default AppWrapper;\n\nconst App = styled.div`\n  padding-top: 4rem;\n  width: 100%;\n  height: 100%;\n  min-height: calc(100vh - 4rem);\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  display: flex;\n  flex-wrap: no-wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n  overflow-x: hidden;\n`;\n\nconst Content = styled.div`\n  margin-left: 105px;\n  width: 100%;\n\n  @media (max-width: 576px) {\n    margin-left: 0px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport IconButton from \"../../../form_elements/IconButton\";\nimport StringField from \"../../../form_elements/StringField\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Character from \"../../../../data/Character\";\n\ninterface $Props {\n  char: Character;\n  onChange: (character: Character) => void;\n  completed: (completed: boolean, nextTab: string) => void;\n}\n\nconst CharLabGeneral = ({ char, onChange, completed }: $Props) => {\n  return (\n    <CenterWrapper>\n      <CharView>\n        <StringField\n          value={char.name}\n          label=\"Name *\"\n          onChange={(name) => onChange({ ...char, name: name })}\n        />\n        <StringField\n          value={char.player}\n          label=\"Player *\"\n          onChange={(player) => onChange({ ...char, player: player })}\n        />\n        <StringField\n          value={char.pic}\n          label=\"Picture\"\n          onChange={(pic) => onChange({ ...char, pic: pic })}\n        />\n        <IconButton\n          icon={faCheckCircle}\n          disabled={!(char && char.name.length > 1 && char.player.length > 1)}\n          onClick={() => completed(true, \"Class\")}\n        />\n      </CharView>\n    </CenterWrapper>\n  );\n};\n\nexport default CharLabGeneral;\n\nconst CenterWrapper = styled.div`\n  overflow: visible;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst CharView = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 600px;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  align-items: flex-start;\n  align-content: stretch;\n`;\n","import IEntity from \"./IEntity\";\n\nexport interface CharOrigin {\n  background: string;\n  education: string;\n  caste: string;\n}\n\nexport enum CharSize {\n  tiny,\n  small,\n  medium,\n  large,\n  huge,\n  gargantuan,\n}\nexport interface CharAppearance {\n  age: number;\n  height: string;\n  weight: string;\n  sizeclass: CharSize;\n  pic: string;\n}\n\nexport interface CharAbilityRating {\n  body: number; //1-12\n  dex: number; //1-12;\n  str: number; //1-12;\n  reac: number; //1-12;\n  will: number; //1-12;\n  log: number; //1-12;\n  char: number; //1-12;\n  int: number; //1-12;\n  luck: number; //1-10;\n  magic: number; //1-12\n  faith: number; //1-12;\n}\n\nexport enum CharArcaneCoreAbility {\n  will,\n  char,\n  log,\n  int,\n}\nexport interface CharArcaneAffinity {\n  arcaneCoreAbility: CharArcaneCoreAbility;\n  ascensionLevel: number;\n  tradition: string;\n  path: string;\n}\n\nexport interface CharCombaty {\n  currentHp: number;\n  currentSp: number;\n  woundCurrent: number[];\n}\n\nexport interface CharActions {\n  actionName: string;\n  actionTickCost: number;\n}\n\nexport interface CharMoney {\n  copper: number;\n  silverling: number;\n  neekon: number;\n}\n\n//Basically Sliders von -4 bis 4?\n//  Devious 4 3 2 1 <0> 1 2 3 4 Honest\n//  Adamant 4 3 2 1 <0> 1 2 3 4 Agreeable\n//  Renegade 4 3 2 1 <0> 1 2 3 4 Lawful\n//  Egotistic 4 3 2 1 <0> 1 2 3 4 Altruistic\n//  Outgoing 4 3 2 1 <0> 1 2 3 4 Reclusive\n//  Callous 4 3 2 1 <0> 1 2 3 4 Empathetic\n//  Realistic 4 3 2 1 <0> 1 2 3 4 Idealistic\n//  Vengeful 4 3 2 1 <0> 1 2 3 4 Forgiving\nexport interface CharSocialTraits {\n  start: string;\n  end: string;\n  value: number;\n}\n\nexport interface CharBaseAbilitySkills {\n  bskillName: string;\n  bskillMod: number; //+x\n  bskillDisadvantage: number; // + x Dis\n  bskillAdvantage: number; // + x Adv\n}\n\nexport default class Character implements IEntity {\n  id?: number;\n  name: string;\n  pic: string;\n  house: string;\n  title: string;\n  player: string;\n  totalXPSpent: number;\n  xpToSpend: number;\n  charLevel: number;\n  race: string;\n  archetype: string;\n  origin: CharOrigin;\n  appearance: CharAppearance;\n  abilityRating: CharAbilityRating;\n  arcaneAffinity: CharArcaneAffinity;\n  combat: CharCombaty;\n  actions: CharActions[];\n  money: CharMoney;\n  socialTraits: CharSocialTraits[];\n  talents: string[];\n  flaws: string[];\n  baseAbilitySkills: CharBaseAbilitySkills[];\n  skills: string[];\n  weaponSkills: string[];\n  knowledgeSkills: string[];\n  spells: string[];\n  adeptPowers: string[];\n  ascensionPowers: string[];\n  items: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    pic?: string,\n    house?: string,\n    title?: string,\n    player?: string,\n    totalXPSpent?: number,\n    xpToSpend?: number,\n    charLevel?: number,\n    race?: string,\n    archetype?: string,\n    origin?: CharOrigin,\n    appearance?: CharAppearance,\n    abilityRating?: CharAbilityRating,\n    arcaneAffinity?: CharArcaneAffinity,\n    combat?: CharCombaty,\n    actions?: CharActions[],\n    money?: CharMoney,\n    socialTraits?: CharSocialTraits[],\n    talents?: string[],\n    flaws?: string[],\n    baseAbilitySkills?: CharBaseAbilitySkills[],\n    skills?: string[],\n    weaponSkills?: string[],\n    knowledgeSkills?: string[],\n    spells?: string[],\n    adeptPowers?: string[],\n    ascensionPowers?: string[],\n    items?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.pic = pic || \"\";\n    this.house = house || \"\";\n    this.title = title || \"\";\n    this.player = player || \"\";\n    this.totalXPSpent = totalXPSpent || 0;\n    this.xpToSpend = xpToSpend || 0;\n    this.charLevel = charLevel || 0;\n    this.race = race || \"\";\n    this.archetype = archetype || \"\";\n    this.origin = origin || {\n      background: \"\",\n      education: \"\",\n      caste: \"\",\n    };\n    this.appearance = appearance || {\n      age: 0,\n      height: \"\",\n      weight: \"\",\n      sizeclass: CharSize.medium,\n      pic: \"\",\n    };\n    this.abilityRating = abilityRating || {\n      body: 1, //1-12\n      dex: 1, //1-12;\n      str: 1, //1-12;\n      reac: 1, //1-12;\n      will: 1, //1-12;\n      log: 1, //1-12;\n      char: 1, //1-12;\n      int: 1, //1-12;\n      luck: 1, //1-10;\n      magic: 1, //1-12\n      faith: 1, //1-12;\n    };\n    this.arcaneAffinity = arcaneAffinity || {\n      arcaneCoreAbility: CharArcaneCoreAbility.char,\n      ascensionLevel: 0,\n      tradition: \"\",\n      path: \"\",\n    };\n    this.combat = combat || {\n      currentHp: 0,\n      currentSp: 0,\n      woundCurrent: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    };\n    this.actions = actions || [];\n    this.money = money || {\n      copper: 0,\n      silverling: 0,\n      neekon: 0,\n    };\n    this.socialTraits = socialTraits || [\n      {\n        start: \"Devious\",\n        end: \"Honest\",\n        value: 0,\n      },\n      {\n        start: \"Adamant\",\n        end: \"Agreeable\",\n        value: 0,\n      },\n      {\n        start: \"Renegade\",\n        end: \"Lawful\",\n        value: 0,\n      },\n      {\n        start: \"Egotistic\",\n        end: \"Altruistic\",\n        value: 0,\n      },\n      {\n        start: \"Outgoing\",\n        end: \"Reclusive\",\n        value: 0,\n      },\n      {\n        start: \"Callous\",\n        end: \"Empathetic\",\n        value: 0,\n      },\n      {\n        start: \"Realistic\",\n        end: \"Idealistic\",\n        value: 0,\n      },\n      {\n        start: \"Vengeful\",\n        end: \"Forgiving\",\n        value: 0,\n      },\n    ];\n    this.talents = talents || [];\n    this.flaws = flaws || [];\n    this.baseAbilitySkills = baseAbilitySkills || [];\n    this.skills = skills || [];\n    this.weaponSkills = weaponSkills || [];\n    this.knowledgeSkills = knowledgeSkills || [];\n    this.spells = spells || [];\n    this.adeptPowers = adeptPowers || [];\n    this.ascensionPowers = ascensionPowers || [];\n    this.items = items || [];\n  }\n\n  static makeCsv = (character: Character): any[] => {\n    return [character.id, character.name];\n  };\n}\n\nexport function isCharacter(arg: any): arg is Character {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n\n  return arg && nameCheck;\n}\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { saveWithCallback } from \"../../../../services/DatabaseService\";\n\nimport { faCheckCircle, faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport IconButton from \"../../../form_elements/IconButton\";\nimport TabBar from \"../../../general_elements/TabBar\";\nimport CharLabGeneral from \"./CharLabGeneral\";\nimport { useQuery } from \"../../../../hooks/QueryHook\";\nimport Character from \"../../../../data/Character\";\nimport CharacterView from \"../details/CharacterView\";\n\nconst CharLab = () => {\n  let history = useHistory();\n  const name = useQuery().get(\"name\");\n  const [activeTab, setTab] = useState<string>(\"General\");\n  const [newChar, updateChar] = useState<Character>(new Character(-1, name !== null ? name : \"\"));\n\n  const [completedGeneral, setGeneral] = useState<boolean>(false);\n  const [completedClass, setClass] = useState<boolean>(false);\n  const [completedRace, setRace] = useState<boolean>(false);\n  const [completedBackground, setBackground] = useState<boolean>(false);\n  const [completedAbilities, setAbilities] = useState<boolean>(false);\n  const [completedEquipment, setEquipment] = useState<boolean>(false);\n\n  const updateGeneral = (value: boolean, nextTab: string) => {\n    setGeneral(value);\n    setTab(nextTab);\n  };\n  const updateClass = (value: boolean, nextTab: string) => {\n    setClass(value);\n    setTab(nextTab);\n  };\n  const updateRace = (value: boolean, nextTab: string) => {\n    setRace(value);\n    setTab(nextTab);\n  };\n  const updateBackground = (value: boolean, nextTab: string) => {\n    setBackground(value);\n    setTab(nextTab);\n  };\n  const updateAbilities = (value: boolean, nextTab: string) => {\n    setAbilities(value);\n    setTab(nextTab);\n  };\n  const updateEquipment = (value: boolean, nextTab: string) => {\n    setEquipment(value);\n    setTab(nextTab);\n  };\n\n  const saveChar = () => {\n    // recalcClasses(newChar).then((updatedChar) => {\n    //   delete updatedChar[\"id\"];\n    //   saveWithCallback(\"chars\", updatedChar, (result) => {\n    //     history.push(`/char-detail/id/${result}`);\n    //   });\n    // });\n  };\n\n  return (\n    <>\n      <TabBar\n        children={[\"General\", \"Finished\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      <CenterWrapper>\n        <View>\n          {activeTab === \"General\" && (\n            <>\n              {!completedGeneral && (\n                <CharLabGeneral char={newChar} onChange={updateChar} completed={updateGeneral} />\n              )}\n              {completedGeneral && (\n                <PropWrapper>\n                  <Prop>Would you like to edit general again? </Prop>\n                  <IconButton icon={faEdit} onClick={() => setGeneral(false)} />\n                </PropWrapper>\n              )}\n            </>\n          )}\n          {activeTab === \"Finished\" && (\n            <>\n              {(!completedGeneral ||\n                !completedClass ||\n                !completedRace ||\n                !completedBackground ||\n                !completedAbilities ||\n                !completedGeneral ||\n                !completedEquipment) && (\n                <PropWrapper>\n                  <Prop>Somthing is not finished!</Prop>\n                </PropWrapper>\n              )}\n              {completedGeneral &&\n                completedClass &&\n                completedRace &&\n                completedBackground &&\n                completedAbilities &&\n                completedGeneral &&\n                completedEquipment && (\n                  <>\n                    <PropWrapper>\n                      <Prop>Create Char?</Prop>\n                      <IconButton icon={faCheckCircle} onClick={() => saveChar()} />\n                    </PropWrapper>\n                    <CharacterView\n                      character={newChar}\n                      // saveChar={() => undefined}\n                    ></CharacterView>\n                  </>\n                )}\n            </>\n          )}\n        </View>\n      </CenterWrapper>\n    </>\n  );\n};\n\nexport default CharLab;\n\nconst CenterWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst View = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 16px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  height: 100%;\n  width: min-content;\n  min-width: 300px;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst PropWrapper = styled.div`\n  width: calc(100% - 6px);\n  float: left;\n  padding: 3px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n`;\n\nconst Prop = styled.div`\n  flex: 1 1 auto;\n  max-width: 100%;\n  height: auto;\n  margin: 2px;\n  padding: 10px;\n  border-radius: 5px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n\n  svg {\n    margin-right: 5px;\n    height: auto;\n    border-radius: 150px;\n    transition: color 0.2s;\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\n","import React, { lazy, Suspense } from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport { MyThemeProvider } from \"./components/theme/MyThemeProvider\";\nimport { CompleteLoadingSpinner } from \"./components/Loading\";\nimport AppWrapper from \"./components/AppWrapper\";\nimport { HashRouter } from \"react-router-dom\";\nimport CharLab from \"./components/entities/characters/lab/CharLab\";\n\nconst ToEntity = lazy(() => import(\"./components/general_elements/details/ToEntity\"));\nconst EntityOverview = lazy(() => import(\"./components/general_elements/EntityOverview\"));\n\nconst Help = lazy(() => import(\"./components/help/Help\"));\nconst Home = lazy(() => import(\"./components/home/Home\"));\nconst Options = lazy(() => import(\"./components/options/Options\"));\nconst Statistics = lazy(() => import(\"./components/statistics/Statistics\"));\n\nconst App = () => {\n  return (\n    <MyThemeProvider>\n      <HashRouter>\n        <AppWrapper>\n          <Suspense fallback={<CompleteLoadingSpinner />}>\n            <Switch>\n              <Route exact path=\"/\" component={Home}></Route>\n              <Route exact path=\"/home\" component={Home}></Route>\n              <Route path=\"/skill-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/skill-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/skill-overview\" component={EntityOverview}></Route>\n              <Route path=\"/spell-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/spell-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/spell-overview\" component={EntityOverview}></Route>\n              <Route path=\"/race-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/race-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/race-overview\" component={EntityOverview}></Route>\n              <Route path=\"/talent-overview\" component={EntityOverview}></Route>\n              <Route path=\"/talent-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/talent-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/power-overview\" component={EntityOverview}></Route>\n              <Route path=\"/power-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/power-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/power-overview\" component={EntityOverview}></Route>\n              <Route path=\"/item-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/item-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/item-overview\" component={EntityOverview}></Route>\n              <Route path=\"/tradition-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/tradition-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/tradition-overview\" component={EntityOverview}></Route>\n              <Route path=\"/randomTable-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/randomTable-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/randomTable-overview\" component={EntityOverview}></Route>\n              <Route path=\"/character-lab\" component={CharLab}></Route>\n              <Route path=\"/character-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/character-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/character-overview\" component={EntityOverview}></Route>\n              <Route path=\"/statistics\" component={Statistics}></Route>\n              <Route path=\"/options\" component={Options}></Route>\n              <Route path=\"/help\" component={Help}></Route>\n            </Switch>\n          </Suspense>\n        </AppWrapper>\n      </HashRouter>\n    </MyThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}