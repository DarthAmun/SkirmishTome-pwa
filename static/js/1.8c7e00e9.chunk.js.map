{"version":3,"sources":["data/Talent.tsx","services/DiceService.tsx","components/general_elements/LinkCheck.tsx","data/Race.tsx","data/Spell.tsx","data/SpellValues.tsx"],"names":["TalentCategory","TalentType","Talent","id","name","category","isFlaw","cost","prerequisite","effect","type","triggerFrequency","this","magical","passiv","isTalent","arg","nameCheck","undefined","costCheck","isFlawCheck","prerequisiteCheck","effectCheck","typeCheck","stressCheck","stress","triggerCheck","trigger","triggerFrequencyCheck","ticksCheck","ticks","makeCsv","talent","rollCommand","commands","krit","result","text","newCommands","split","forEach","command","test","trim","rolls","fullCommand","commandSplits","part","concat","multiplier","includes","startsWith","parseInt","replaceAll","com","i","newRoll","rollDie","slice","size","max","Math","round","random","LinkCheck","useState","loading","setLoading","entitiyFound","setEntity","useEffect","newType","recivePromiseByAttributeCount","then","count","catch","formatIcon","RaceLimits","Race","rarity","hp","abilityModifier","stamina","talents","flaws","limit","sprint","description","empty","race","Spell","source","castTime","rite","duration","durationText","range","school","mastery","resist","drain","masteryDrain","scalingEffect","spellTarget","aoeRadius","damage","directEffects","level","projectileType","projectileNumber","damageType","targetingType","losRange","drainType","pureDamage","chargeable","needsMaterial","glyph","SpellSource","NONE","SpellCastTime","SpellRite","SpellDuration","SpellRange","SpellSchool","SpellScalingEffect","SpellTarget","SpellAoeRadius","SpellDirectEffects","SpellLevel","SpellProjectileType","SpellProjectileNumber","SpellDamageType","SpellTargetingType","SpellLosRange","SpellDrainType","SpellPureDamage","SpellSize","SpellHp","calcDrain","spell","label","ACID","NECROTIC","FROST","FIRE","LIGHTNING","RADIANT","ARCANE","POISON","find","toLowerCase","getAll","HALFMAGICSTRUCTUREHP","HALFMAGICSTRUCTUREDOUBLEHP","HALFMAGICSTRUCTURETRIPPLEHP","MAGICSTRUCTUREHP","MAGICSTRUCTUREDOUBLEHP","DOUBLEMAGICESTRUCTUREHP","MAGICHP","MAGICDOUBLEHP","MAGICTRIPPLEHP","MAGICQUADRUPLEHP","HALFMAGICSQUARED","MAGICSQUARED","DOUBLEMAGICSQUARED","TRIPPLEMAGICSQUARED","HALFMAGICQUBED","MAGICQUBED","DOUBLEMAGICQUBED","TRIPPLEMAGICQUBED","DIFFICULTTERRAIN","LIFELEECH","COMMUNICATE","CONFUSIONSTUNBLIND","HEX","IMPAIRMOVEMENTVISION","MOVEFEARROOT","DOT","INCAPACITATE","SPHERE","KNOCKDOWN","WALLBARRIERCONSTRUCTSUMMON","TELEPORT","HEAL","BUFFILLUSIONSHIELD","CHARMCONTROLINFLUENCE","TRANSFORM","MYSTBRADIUS","MYSTBPROJECTILES","PROJECTILERADIUSPERVARIABLE","PROJECTILEPERVARIABLE","PROJECTILEPERTHREEMAGIC","PROJECTILEPERTWOMAGIC","PROJECTILERADIUSPERTWOMAGIC","PROJECTILERADIUSPERTHREEMAGIC","PLUSPROJECTILEPERTWOMAGIC","PLUSPROJECTILEPERFOURMAGIC","PLUSPROJECTILEPERTHREEMAGIC","MYSTBRADIUSEFFECT","PLUSHALFMYSTBRADIUSEFFECT","PLUSHALFMYSTBRADIUS","PLUSMYSTBRADIUS","PLUSMYSTBRADIUSEFFECT","COMBINED","PHYSICAL","STUN","PURE","FATIGUE","AGONY","SpellDamage","ONEPRMAGIC","TWOPRMAGIC","THREEPRMAGIC","FOURPRMAGIC","FIVEPRMAGIC","ONE","TWO","THREE","FOUR","FIVE","ONEDFOUR","ONEDSIX","ONEDEIGHT","ONEDTEN","ONEDTWELVE","ONEDTWENTY","TWODFOUR","TWODSIX","TWODEIGHT","TWODTEN","TWODTWELVE","TWODTWENTY","THREEDFOUR","THREEDSIX","THREEDEIGHT","THREEDTEN","THREEDTWELVE","FOURDFOUR","FOURDSIX","FOURDEIGHT","FOURDTEN","FIVEDFOUR","FIVEDSIX","FIVEDEIGHT","SIXDFOUR","MYSTB","MYSTBDOUBLE","QUARTERMAGIC","HALFMAGIC","MAGIC","COLLETERAL","ONEMETER","TWOMETERS","THREEMETERS","HALFMAGMETERS","MAGMETERS","MAGTIMESTWOMETERS","VARIABLE","ONEMAGIC","TWOMAGIC","THREEMAGIC","FOURMAGIC","FIVEMAGIC","SCALING","BALL","MISSILE","BOLT","RAY","SPRAY","LASSO","getAllSingle","DIRECTTARGET","AURATARGETING","INDIRECTTARGETING","SIXMINUSMYSTBROUNDS","NINETHREE","NINETHREECHANNEL","SEVENTHREE","FIVETHREE","DRAINCHENNEL","DRAINTHREE","MAGIFAITHHOURS","getAllPhysical","getAllStun","SIX","SEVEN","EIGHT","NINE","EARTH","AIR","DIVINE","DEMONIC","DRUIDIC","PSYCHIC","TOUCH","SONIC","RADIUS90","RADIUS360","LOSAURA","LOSMANIPULATE","LOSPOINT","VERBAL","SOMATIC","MENTAL","RITUAL","SINGLE","DAOE","MULTI","AOE","CASTER","TARGET","LINE","CONCENTRATION","INSTANTANEOUS","PERMANENT","FIXEDTICKS","FIXEDROUNDS","FIXEDHOURS","CHANNEL","TRANSMUTATION","EVOCATION","FORTIFICATION","ILLUSION","CONJURATION","NECROMANCY","ENCHANTMENT"],"mappings":"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","file":"static/js/1.8c7e00e9.chunk.js","sourcesContent":["import IEntity from \"./IEntity\";\n\nexport enum TalentCategory {\n  physical = \"physical\",\n  mental = \"mental\",\n  social = \"social\",\n  magical = \"magical\",\n}\n\nexport enum TalentType {\n  passiv = \"passiv\",\n  reaction = \"reaction\",\n  triggered = \"triggered\"\n}\n\n\nexport default class Talent implements IEntity {\n  id?: number;\n  name: string;\n  category: string;\n  isFlaw: boolean;\n  cost: number;\n  prerequisite: string;\n  effect: string;\n  triggerFrequency: string;\n  type: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    category?: string,\n    isFlaw?: boolean,\n    cost?: number,\n    prerequisite?: string,\n    effect?: string,\n    type?: string,\n    triggerFrequency?: string,\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.category = category || TalentCategory.magical;\n    this.isFlaw = isFlaw || false;\n    this.cost = cost || 0;\n    this.prerequisite = prerequisite || \"\";\n    this.effect = effect || \"\";\n    this.triggerFrequency = triggerFrequency || \"\";\n    this.type = type || TalentType.passiv;\n  }\n\n  static makeCsv = (talent: Talent): any[] => {\n    return [\n      talent.id,\n      talent.name,\n      talent.category,\n      talent.isFlaw,\n      talent.cost,\n      talent.prerequisite,\n      talent.effect,\n      talent.type,\n      talent.triggerFrequency,\n    ];\n  };\n}\n\nexport function isTalent(arg: any): arg is Talent {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"number\";\n  const isFlawCheck =\n    arg.isFlaw !== undefined && typeof arg.isFlaw == \"boolean\";\n  const prerequisiteCheck =\n    arg.prerequisite !== undefined && typeof arg.prerequisite == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"boolean\";\n  const stressCheck = arg.stress !== undefined && typeof arg.stress == \"string\";\n  const triggerCheck =\n    arg.trigger !== undefined && typeof arg.trigger == \"string\";\n  const triggerFrequencyCheck =\n    arg.triggerFrequency !== undefined &&\n    typeof arg.triggerFrequency == \"string\";\n  const ticksCheck = arg.ticks !== undefined && typeof arg.ticks == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    costCheck &&\n    isFlawCheck &&\n    prerequisiteCheck &&\n    effectCheck &&\n    typeCheck &&\n    stressCheck &&\n    triggerCheck &&\n    triggerFrequencyCheck &&\n    ticksCheck\n  );\n}\n","export const rollCommand = (\n  commands: string,\n  krit?: boolean\n): { result: number; text: string; rolls: string } => {\n  let result = 0;\n  let text = \"\";\n\n  let newCommands = \"\";\n  commands.split(\" \").forEach((command) => {\n    if (/\\d+/g.test(command)) {\n      newCommands += command;\n    } else {\n      text += \" \" + command;\n    }\n  });\n  newCommands = newCommands.trim();\n\n  let rolls: string = \"(`\";\n  newCommands.split(\" \").forEach((fullCommand: string) => {\n    let commandSplits: string[] = [];\n    fullCommand.split(\"+\").forEach((part) => {\n      let split = part.split(\"-\");\n      commandSplits = commandSplits.concat(split);\n    });\n\n    commandSplits.forEach((command: string) => {\n      let multiplier: number = 1;\n      if (command.includes(\"d\")) {\n        if (!command.startsWith(\"d\")) {\n          multiplier = parseInt(command.split(\"d\")[0]);\n          command = command.split(\"d\")[1];\n        }\n        command = command.replaceAll(\"d\", \"\");\n        if (krit) multiplier = multiplier * 2;\n\n        if (command.includes(\"+\")) {\n          const com = command.split(\"+\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result += parseInt(com[1]);\n        } else if (command.includes(\"-\")) {\n          const com = command.split(\"-\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result -= parseInt(com[1]);\n        } else {\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(command));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n        }\n      } else {\n        result += parseInt(command);\n        rolls += command + \",\";\n      }\n    });\n    rolls = rolls.slice(0, -1) + \"`)\";\n  });\n\n  return { result: result, text: text, rolls: rolls };\n};\n\nexport const rollDie = (size: number): number => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory } from \"react-icons/bi\";\nimport { GiDiceTwentyFacesTwenty, GiSwordsPower } from \"react-icons/gi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name)\n        .then((count: number) => {\n          setEntity(count > 0);\n          setLoading(false);\n        })\n        .catch(() => {\n          setEntity(false);\n          setLoading(false);\n        });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"talent\":\n        return <GiSwordsPower />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import IEntity from \"./IEntity\";\n\nexport enum RaceLimits {\n  empty = \"-\", // -\n  magicNull = \"> 0\", // > 0\n  magicFour = \"<= 4\", // <= 4\n}\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  rarity: number;\n  hp: number;\n  abilityModifier: string;\n  size: string;\n  stamina: number;\n  talents: string[];\n  flaws: string[];\n  limit: string;\n  sprint: number;\n  description: string;\n\n  constructor(\n    id?: number,\n    name?: string,\n    rarity?: number,\n    hp?: number,\n    abilityModifier?: string,\n    size?: string,\n    stamina?: number,\n    talents?: string[],\n    flaws?: string[],\n    limit?: string,\n    sprint?: number,\n    description?: string,\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.rarity = rarity || 0;\n    this.hp = hp || 0;\n    this.abilityModifier = abilityModifier || \"\";\n    this.size = size || \"\";\n    this.stamina = stamina || 0;\n    this.talents = talents || [];\n    this.flaws = flaws || [];\n    this.limit = limit || RaceLimits.empty;\n    this.sprint = sprint || 0;\n    this.description = description || \"\";\n  }\n\n  static makeCsv = (race: Race): any[] => {\n    return [\n      race.id,\n      race.name,\n      race.rarity,\n      race.hp,\n      race.abilityModifier,\n      race.size,\n      race.stamina,\n      race.talents,\n      race.flaws,\n    ];\n  };\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const abilityModifierCheck =\n    arg.abilityModifier !== undefined && typeof arg.abilityModifier == \"number\";\n  const talentsCheck = arg.talents !== undefined && Array.isArray(arg.talents);\n  const flawsCheck = arg.flaws !== undefined && Array.isArray(arg.flaws);\n\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    abilityModifierCheck &&\n    talentsCheck &&\n    flawsCheck\n  );\n}\n","import IEntity from \"./IEntity\";\nimport {\n  StringPair,\n  NumberPair,\n  SpellSource,\n  SpellRite,\n  SpellDuration,\n  SpellRange,\n  SpellSchool,\n  SpellTarget,\n  SpellDrainType,\n  SpellLevel,\n  SpellCastTime,\n  SpellScalingEffect,\n  SpellAoeRadius,\n  SpellDirectEffects,\n  SpellProjectileType,\n  SpellProjectileNumber,\n  SpellDamageType,\n  SpellTargetingType,\n  SpellLosRange,\n  SpellSize,\n  SpellPureDamage,\n  SpellHp,\n} from \"./SpellValues\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  source: StringPair;\n  castTime: StringPair;\n  rite: StringPair;\n  duration: StringPair;\n  durationText: string;\n  range: StringPair;\n  school: StringPair;\n  effect: string;\n  mastery: string;\n  resist: string;\n  drain: number;\n  masteryDrain: number;\n\n  drainType: StringPair;\n  scalingEffect: StringPair;\n  spellTarget: StringPair;\n  aoeRadius: StringPair;\n  damage: StringPair[];\n  directEffects: StringPair;\n  level: NumberPair;\n  projectileType: StringPair;\n  projectileNumber: StringPair;\n  damageType: StringPair;\n  targetingType: StringPair;\n  losRange: StringPair;\n  pureDamage: StringPair;\n  size: StringPair;\n  hp: StringPair;\n  chargeable: boolean;\n  needsMaterial: boolean;\n  glyph: boolean;\n\n  constructor(\n    id?: number,\n    name?: string,\n    source?: StringPair,\n    castTime?: StringPair,\n    rite?: StringPair,\n    duration?: StringPair,\n    durationText?: string,\n    range?: StringPair,\n    school?: StringPair,\n    effect?: string,\n    mastery?: string,\n    resist?: string,\n    drain?: number,\n    masteryDrain?: number,\n\n    scalingEffect?: StringPair,\n    spellTarget?: StringPair,\n    aoeRadius?: StringPair,\n    damage?: StringPair[],\n    directEffects?: StringPair,\n    level?: NumberPair,\n    projectileType?: StringPair,\n    projectileNumber?: StringPair,\n    damageType?: StringPair,\n    targetingType?: StringPair,\n    losRange?: StringPair,\n    drainType?: StringPair,\n    pureDamage?: StringPair,\n    size?: StringPair,\n    hp?: StringPair,\n    chargeable?: boolean,\n    needsMaterial?: boolean,\n    glyph?: boolean\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.source = source || SpellSource.NONE;\n    this.castTime = castTime || SpellCastTime.NONE;\n    this.rite = rite || SpellRite.NONE;\n    this.duration = duration || SpellDuration.NONE;\n    this.durationText = durationText || \"\";\n    this.range = range || SpellRange.NONE;\n    this.school = school || SpellSchool.NONE;\n    this.effect = effect || \"\";\n    this.mastery = mastery || \"\";\n    this.resist = resist || \"\";\n    this.drain = drain || 0;\n    this.masteryDrain = masteryDrain || 0;\n\n    this.scalingEffect = scalingEffect || SpellScalingEffect.NONE;\n    this.spellTarget = spellTarget || SpellTarget.NONE;\n    this.aoeRadius = aoeRadius || SpellAoeRadius.NONE;\n    this.damage = damage || [];\n    this.directEffects = directEffects || SpellDirectEffects.NONE;\n    this.level = level || SpellLevel.NONE;\n    this.projectileType = projectileType || SpellProjectileType.NONE;\n    this.projectileNumber = projectileNumber || SpellProjectileNumber.NONE;\n    this.damageType = damageType || SpellDamageType.NONE;\n    this.targetingType = targetingType || SpellTargetingType.NONE;\n    this.losRange = losRange || SpellLosRange.NONE;\n    this.drainType = drainType || SpellDrainType.NONE;\n    this.pureDamage = pureDamage || SpellPureDamage.NONE;\n    this.size = size || SpellSize.NONE;\n    this.hp = hp || SpellHp.NONE;\n    this.chargeable = chargeable || false;\n    this.needsMaterial = needsMaterial || false;\n    this.glyph = glyph || false;\n  }\n\n  static calcDrain = (spell: Spell): Spell => {\n    let drain = 0;\n    drain += spell.castTime ? spell.castTime.drain : 0;\n    drain += spell.drainType ? spell.drainType.drain : 0;\n    drain += spell.school ? spell.school.drain : 0;\n    drain += spell.duration ? spell.duration.drain : 0;\n    drain += spell.spellTarget ? spell.spellTarget.drain : 0;\n    drain += spell.rite ? spell.rite.drain : 0;\n    drain += spell.range ? spell.range.drain : 0;\n    drain += spell.source ? spell.source.drain : 0;\n    drain += spell.level ? spell.level.drain : 0;\n    drain += spell.chargeable ? -1 : 0;\n    drain += spell.needsMaterial ? -1 : 0;\n    drain += spell.targetingType ? spell.targetingType.drain : 0;\n    drain += spell.projectileType ? spell.projectileType.drain : 0;\n    drain += spell.projectileNumber ? spell.projectileNumber.drain : 0;\n    drain += spell.losRange ? spell.losRange.drain : 0;\n    drain += spell.aoeRadius ? spell.aoeRadius.drain : 0;\n    drain += spell.damage[0] ? spell.damage[0].drain : 0;\n    drain += spell.damage[1] ? spell.damage[1].drain : 0;\n    drain += spell.damage[2] ? spell.damage[2].drain : 0;\n    drain += spell.damageType ? spell.damageType.drain : 0;\n    drain += spell.scalingEffect ? spell.scalingEffect.drain : 0;\n    drain += spell.directEffects ? spell.directEffects.drain : 0;\n    drain += spell.size ? spell.size.drain : 0;\n    drain += spell.hp ? spell.hp.drain : 0;\n    drain += spell.pureDamage ? spell.pureDamage.drain : 0;\n    return { ...spell, drain: drain };\n  };\n\n  static makeCsv = (spell: Spell): any[] => {\n    return [\n      spell.id,\n      spell.name,\n      spell.source.label,\n      spell.castTime.label,\n      spell.rite.label,\n      spell.duration.label,\n      spell.durationText,\n      spell.range.label,\n      spell.school.label,\n      spell.effect,\n      spell.mastery,\n      spell.resist,\n      spell.drain,\n      spell.masteryDrain,\n      spell.scalingEffect.label,\n      spell.spellTarget.label,\n      spell.aoeRadius.label,\n      spell.damage[0].label +\n        \", \" +\n        spell.damage[1].label +\n        \", \" +\n        spell.damage[2].label,\n      spell.directEffects.label,\n      spell.level.label,\n      spell.projectileType.label,\n      spell.projectileNumber.label,\n      spell.damageType.label,\n      spell.targetingType.label,\n      spell.losRange.label,\n      spell.drainType.label,\n      spell.pureDamage.label,\n      spell.size.label,\n      spell.hp.label,\n      spell.chargeable,\n      spell.needsMaterial,\n      spell.glyph,\n    ];\n  };\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourceCheck = arg.source !== undefined && typeof arg.source == \"string\";\n  const castTimeCheck =\n    arg.castTime !== undefined && typeof arg.castTime == \"string\";\n  const riteCheck = arg.rite !== undefined && typeof arg.rite == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const masteryCheck =\n    arg.mastery !== undefined && typeof arg.mastery == \"string\";\n  const resistCheck = arg.resist !== undefined && typeof arg.resist == \"string\";\n  const drainCheck = arg.drain !== undefined && typeof arg.drain == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    sourceCheck &&\n    castTimeCheck &&\n    riteCheck &&\n    durationCheck &&\n    rangeCheck &&\n    schoolCheck &&\n    effectCheck &&\n    damageCheck &&\n    masteryCheck &&\n    resistCheck &&\n    drainCheck\n  );\n}\n","export interface StringPair {\n  label: string;\n  drain: number;\n}\nexport interface NumberPair {\n  label: number;\n  drain: number;\n}\n\n// export class Dummy {\n//   static readonly NONE: StringPair = { label: \"\", drain: 0,};\n//   static readonly DUMMY: StringPair = { label: , drain: 0 };\n\n//   private constructor(\n//     private readonly label: string,\n//     public readonly drain: number\n//   ) {}\n\n//   static find = (label: string): StringPair => {\n//     switch (label?.toLowerCase().trim()) {\n//       case Dummy.DUMMY.label.toLowerCase():\n//         return Dummy.DUMMY;\n//       default:\n//         return Dummy.NONE;\n//     }\n//   };\n//   static getAll = (): string[] => {\n//     return [Dummy.DUMMY.label];\n//   };\n// }\n\nexport class SpellPureDamage {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ACID: StringPair = { label: \"Acid\", drain: 0 };\n  static readonly NECROTIC: StringPair = { label: \"Necrotic\", drain: 0 };\n  static readonly FROST: StringPair = { label: \"Frost\", drain: 0 };\n  static readonly FIRE: StringPair = { label: \"Fire\", drain: 0 };\n  static readonly LIGHTNING: StringPair = { label: \"Lightning\", drain: 0 };\n  static readonly RADIANT: StringPair = { label: \"Radiant\", drain: 0 };\n  static readonly ARCANE: StringPair = { label: \"Arcane\", drain: 0 };\n  static readonly POISON: StringPair = { label: \"Poison\", drain: 0 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellPureDamage.ACID.label.toLowerCase():\n        return SpellPureDamage.ACID;\n      case SpellPureDamage.NECROTIC.label.toLowerCase():\n        return SpellPureDamage.NECROTIC;\n      case SpellPureDamage.FROST.label.toLowerCase():\n        return SpellPureDamage.FROST;\n      case SpellPureDamage.FIRE.label.toLowerCase():\n        return SpellPureDamage.FIRE;\n      case SpellPureDamage.LIGHTNING.label.toLowerCase():\n        return SpellPureDamage.LIGHTNING;\n      case SpellPureDamage.RADIANT.label.toLowerCase():\n        return SpellPureDamage.RADIANT;\n      case SpellPureDamage.ARCANE.label.toLowerCase():\n        return SpellPureDamage.ARCANE;\n      case SpellPureDamage.POISON.label.toLowerCase():\n        return SpellPureDamage.POISON;\n      default:\n        return SpellPureDamage.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellPureDamage.NONE.label,\n      SpellPureDamage.ACID.label,\n      SpellPureDamage.NECROTIC.label,\n      SpellPureDamage.FROST.label,\n      SpellPureDamage.FIRE.label,\n      SpellPureDamage.LIGHTNING.label,\n      SpellPureDamage.RADIANT.label,\n      SpellPureDamage.ARCANE.label,\n      SpellPureDamage.POISON.label,\n    ];\n  };\n}\n\nexport class SpellHp {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSTRUCTUREHP: StringPair = {\n    label:\n      \"1/2 Magic/Faith armor/structure rating and Magic/Faith *1 hit points\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSTRUCTUREDOUBLEHP: StringPair = {\n    label:\n      \"1/2 Magic/Faith armor/structure rating and Magic/Faith *2 hit points\",\n    drain: 1,\n  };\n  static readonly HALFMAGICSTRUCTURETRIPPLEHP: StringPair = {\n    label:\n      \"1/2 Magic/Faith armor/structure rating and Magic/Faith *3 hit points\",\n    drain: 2,\n  };\n  static readonly MAGICSTRUCTUREHP: StringPair = {\n    label:\n      \"Magic/Faith *1 armor/structure rating and Magic/Faith *1 hit points\",\n    drain: 1,\n  };\n  static readonly MAGICSTRUCTUREDOUBLEHP: StringPair = {\n    label:\n      \"Magic/Faith *1 armor/structure rating and Magic/Faith *2 hit points\",\n    drain: 3,\n  };\n  static readonly DOUBLEMAGICESTRUCTUREHP: StringPair = {\n    label: \"Magic/Faith *2 armor/structure rating and Magic/Faith hit points\",\n    drain: 4,\n  };\n  static readonly MAGICHP: StringPair = {\n    label: \"Magic/Faith *1 hit points\",\n    drain: 1,\n  };\n  static readonly MAGICDOUBLEHP: StringPair = {\n    label: \"Magic/Faith *2 hit points\",\n    drain: 2,\n  };\n  static readonly MAGICTRIPPLEHP: StringPair = {\n    label: \"Magic/Faith *3 hit points\",\n    drain: 3,\n  };\n  static readonly MAGICQUADRUPLEHP: StringPair = {\n    label: \"Magic/Faith *4 hit points\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellHp.HALFMAGICSTRUCTUREHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTUREHP;\n      case SpellHp.HALFMAGICSTRUCTUREDOUBLEHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTUREDOUBLEHP;\n      case SpellHp.HALFMAGICSTRUCTURETRIPPLEHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTURETRIPPLEHP;\n      case SpellHp.MAGICSTRUCTUREHP.label.toLowerCase():\n        return SpellHp.MAGICSTRUCTUREHP;\n      case SpellHp.MAGICSTRUCTUREDOUBLEHP.label.toLowerCase():\n        return SpellHp.MAGICSTRUCTUREDOUBLEHP;\n      case SpellHp.DOUBLEMAGICESTRUCTUREHP.label.toLowerCase():\n        return SpellHp.DOUBLEMAGICESTRUCTUREHP;\n      case SpellHp.MAGICHP.label.toLowerCase():\n        return SpellHp.MAGICHP;\n      case SpellHp.MAGICDOUBLEHP.label.toLowerCase():\n        return SpellHp.MAGICDOUBLEHP;\n      case SpellHp.MAGICTRIPPLEHP.label.toLowerCase():\n        return SpellHp.MAGICTRIPPLEHP;\n      case SpellHp.MAGICQUADRUPLEHP.label.toLowerCase():\n        return SpellHp.MAGICQUADRUPLEHP;\n      default:\n        return SpellHp.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellHp.NONE.label,\n      SpellHp.HALFMAGICSTRUCTUREHP.label,\n      SpellHp.HALFMAGICSTRUCTUREDOUBLEHP.label,\n      SpellHp.HALFMAGICSTRUCTURETRIPPLEHP.label,\n      SpellHp.MAGICSTRUCTUREHP.label,\n      SpellHp.MAGICSTRUCTUREDOUBLEHP.label,\n      SpellHp.DOUBLEMAGICESTRUCTUREHP.label,\n      SpellHp.MAGICHP.label,\n      SpellHp.MAGICDOUBLEHP.label,\n      SpellHp.MAGICTRIPPLEHP.label,\n      SpellHp.MAGICQUADRUPLEHP.label,\n    ];\n  };\n}\n\nexport class SpellSize {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSQUARED: StringPair = {\n    label: \"1/2 Magic/Faith M²\",\n    drain: 0,\n  };\n  static readonly MAGICSQUARED: StringPair = {\n    label: \"Magic/Faith M²\",\n    drain: 1,\n  };\n  static readonly DOUBLEMAGICSQUARED: StringPair = {\n    label: \"Magic/Faith *2 M²\",\n    drain: 2,\n  };\n  static readonly TRIPPLEMAGICSQUARED: StringPair = {\n    label: \"Magic/Faith *3 M²\",\n    drain: 4,\n  };\n  static readonly HALFMAGICQUBED: StringPair = {\n    label: \"1/2 Magic/Faith M³\",\n    drain: 0,\n  };\n  static readonly MAGICQUBED: StringPair = {\n    label: \"Magic/Faith M³\",\n    drain: 1,\n  };\n  static readonly DOUBLEMAGICQUBED: StringPair = {\n    label: \"Magic/Faith *2 M³\",\n    drain: 2,\n  };\n  static readonly TRIPPLEMAGICQUBED: StringPair = {\n    label: \"Magic/Faith *3 M³\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSize.HALFMAGICSQUARED.label.toLowerCase():\n        return SpellSize.HALFMAGICSQUARED;\n      case SpellSize.MAGICSQUARED.label.toLowerCase():\n        return SpellSize.MAGICSQUARED;\n      case SpellSize.DOUBLEMAGICSQUARED.label.toLowerCase():\n        return SpellSize.DOUBLEMAGICSQUARED;\n      case SpellSize.TRIPPLEMAGICSQUARED.label.toLowerCase():\n        return SpellSize.TRIPPLEMAGICSQUARED;\n      case SpellSize.HALFMAGICQUBED.label.toLowerCase():\n        return SpellSize.HALFMAGICQUBED;\n      case SpellSize.MAGICQUBED.label.toLowerCase():\n        return SpellSize.MAGICQUBED;\n      case SpellSize.DOUBLEMAGICQUBED.label.toLowerCase():\n        return SpellSize.DOUBLEMAGICQUBED;\n      case SpellSize.TRIPPLEMAGICQUBED.label.toLowerCase():\n        return SpellSize.TRIPPLEMAGICQUBED;\n      default:\n        return SpellSize.HALFMAGICSQUARED;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSize.NONE.label,\n      SpellSize.HALFMAGICSQUARED.label,\n      SpellSize.MAGICSQUARED.label,\n      SpellSize.DOUBLEMAGICSQUARED.label,\n      SpellSize.TRIPPLEMAGICSQUARED.label,\n      SpellSize.HALFMAGICQUBED.label,\n      SpellSize.MAGICQUBED.label,\n      SpellSize.DOUBLEMAGICQUBED.label,\n      SpellSize.TRIPPLEMAGICQUBED.label,\n    ];\n  };\n}\n\nexport class SpellDirectEffects {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly DIFFICULTTERRAIN: StringPair = {\n    label: \"Difficult Terrain\",\n    drain: 1,\n  };\n  static readonly LIFELEECH: StringPair = { label: \"Life Leech\", drain: 2 };\n  static readonly COMMUNICATE: StringPair = { label: \"Communicate\", drain: 2 };\n  static readonly CONFUSIONSTUNBLIND: StringPair = {\n    label: \"Confusion / Stun / Blind\",\n    drain: 3,\n  };\n  static readonly HEX: StringPair = { label: \"Hex\", drain: 4 };\n  static readonly IMPAIRMOVEMENTVISION: StringPair = {\n    label: \"Impair Movement / Vision\",\n    drain: 4,\n  };\n  static readonly MOVEFEARROOT: StringPair = {\n    label: \"Move / Fear / Root\",\n    drain: 4,\n  };\n  static readonly DOT: StringPair = { label: \"Damage Over Time\", drain: 3 };\n  static readonly INCAPACITATE: StringPair = {\n    label: \"Incapacitate\",\n    drain: 5,\n  };\n  static readonly SPHERE: StringPair = { label: \"Shield\", drain: 5 };\n  static readonly KNOCKDOWN: StringPair = { label: \"Knockdown\", drain: 2 };\n  static readonly WALLBARRIERCONSTRUCTSUMMON: StringPair = {\n    label: \"Wall / Barrier / Sphere / Construct\",\n    drain: 5,\n  };\n  static readonly TELEPORT: StringPair = { label: \"Teleport\", drain: 6 };\n  static readonly HEAL: StringPair = { label: \"Heal\", drain: 5 };\n  static readonly BUFFILLUSIONSHIELD: StringPair = {\n    label: \"Buff / Illusion\",\n    drain: 5,\n  };\n  static readonly CHARMCONTROLINFLUENCE: StringPair = {\n    label: \"Charm / Control / Influence\",\n    drain: 5,\n  };\n  static readonly TRANSFORM: StringPair = { label: \"Transform\", drain: 4 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDirectEffects.DIFFICULTTERRAIN.label.toLowerCase():\n        return SpellDirectEffects.DIFFICULTTERRAIN;\n      case SpellDirectEffects.LIFELEECH.label.toLowerCase():\n        return SpellDirectEffects.LIFELEECH;\n      case SpellDirectEffects.COMMUNICATE.label.toLowerCase():\n        return SpellDirectEffects.COMMUNICATE;\n      case SpellDirectEffects.CONFUSIONSTUNBLIND.label.toLowerCase():\n        return SpellDirectEffects.CONFUSIONSTUNBLIND;\n      case SpellDirectEffects.HEX.label.toLowerCase():\n        return SpellDirectEffects.HEX;\n      case SpellDirectEffects.IMPAIRMOVEMENTVISION.label.toLowerCase():\n        return SpellDirectEffects.IMPAIRMOVEMENTVISION;\n      case SpellDirectEffects.MOVEFEARROOT.label.toLowerCase():\n        return SpellDirectEffects.MOVEFEARROOT;\n      case SpellDirectEffects.DOT.label.toLowerCase():\n        return SpellDirectEffects.DOT;\n      case SpellDirectEffects.INCAPACITATE.label.toLowerCase():\n        return SpellDirectEffects.INCAPACITATE;\n      case SpellDirectEffects.SPHERE.label.toLowerCase():\n        return SpellDirectEffects.SPHERE;\n      case SpellDirectEffects.KNOCKDOWN.label.toLowerCase():\n        return SpellDirectEffects.KNOCKDOWN;\n      case SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON.label.toLowerCase():\n        return SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON;\n      case SpellDirectEffects.TELEPORT.label.toLowerCase():\n        return SpellDirectEffects.TELEPORT;\n      case SpellDirectEffects.HEAL.label.toLowerCase():\n        return SpellDirectEffects.HEAL;\n      case SpellDirectEffects.BUFFILLUSIONSHIELD.label.toLowerCase():\n        return SpellDirectEffects.BUFFILLUSIONSHIELD;\n      case SpellDirectEffects.CHARMCONTROLINFLUENCE.label.toLowerCase():\n        return SpellDirectEffects.CHARMCONTROLINFLUENCE;\n      case SpellDirectEffects.TRANSFORM.label.toLowerCase():\n        return SpellDirectEffects.TRANSFORM;\n      default:\n        return SpellDirectEffects.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDirectEffects.NONE.label,\n      SpellDirectEffects.DIFFICULTTERRAIN.label,\n      SpellDirectEffects.LIFELEECH.label,\n      SpellDirectEffects.COMMUNICATE.label,\n      SpellDirectEffects.CONFUSIONSTUNBLIND.label,\n      SpellDirectEffects.HEX.label,\n      SpellDirectEffects.IMPAIRMOVEMENTVISION.label,\n      SpellDirectEffects.MOVEFEARROOT.label,\n      SpellDirectEffects.DOT.label,\n      SpellDirectEffects.INCAPACITATE.label,\n      SpellDirectEffects.SPHERE.label,\n      SpellDirectEffects.KNOCKDOWN.label,\n      SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON.label,\n      SpellDirectEffects.TELEPORT.label,\n      SpellDirectEffects.HEAL.label,\n      SpellDirectEffects.BUFFILLUSIONSHIELD.label,\n      SpellDirectEffects.CHARMCONTROLINFLUENCE.label,\n      SpellDirectEffects.TRANSFORM.label,\n    ];\n  };\n}\n\nexport class SpellScalingEffect {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly MYSTBRADIUS: StringPair = {\n    label: \"MystB Meters Radius\",\n    drain: 3,\n  };\n  static readonly MYSTBPROJECTILES: StringPair = {\n    label: \"MystB Projectiles / Effects\",\n    drain: 4,\n  };\n  static readonly PROJECTILERADIUSPERVARIABLE: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per Variable Factor\",\n    drain: 4,\n  };\n  static readonly PROJECTILEPERVARIABLE: StringPair = {\n    label: \"1 Projectile/Effect per Variable Factor\",\n    drain: 3,\n  };\n  static readonly PROJECTILEPERTHREEMAGIC: StringPair = {\n    label: \"1 Projectile/Effect per 3 Magic/Faith Rating\",\n    drain: 2,\n  };\n  static readonly PROJECTILEPERTWOMAGIC: StringPair = {\n    label: \"1 Projectile/Effect per 2 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PROJECTILERADIUSPERTWOMAGIC: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per 2 Magic/Faith Rating\",\n    drain: 5,\n  };\n  static readonly PROJECTILERADIUSPERTHREEMAGIC: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per 3 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PLUSPROJECTILEPERTWOMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 2 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PLUSPROJECTILEPERFOURMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 4 Magic/Faith Rating\",\n    drain: 2,\n  };\n  static readonly PLUSPROJECTILEPERTHREEMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 3 Magic/Faith Rating\",\n    drain: 3,\n  };\n  static readonly MYSTBRADIUSEFFECT: StringPair = {\n    label: \"MystB Meters Radius & Effect\",\n    drain: 5,\n  };\n  static readonly PLUSHALFMYSTBRADIUSEFFECT: StringPair = {\n    label: \"plus 1/2 MystB Meters Radius & Effect\",\n    drain: 4,\n  };\n  static readonly PLUSHALFMYSTBRADIUS: StringPair = {\n    label: \"plus 1/2 MystB Meters Radius\",\n    drain: 2,\n  };\n  static readonly PLUSMYSTBRADIUS: StringPair = {\n    label: \"plus MystB Meters Radius\",\n    drain: 3,\n  };\n  static readonly PLUSMYSTBRADIUSEFFECT: StringPair = {\n    label: \"plus MystB Meters Radius & Effect\",\n    drain: 6,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellScalingEffect.MYSTBRADIUS.label.toLowerCase():\n        return SpellScalingEffect.MYSTBRADIUS;\n      case SpellScalingEffect.MYSTBPROJECTILES.label.toLowerCase():\n        return SpellScalingEffect.MYSTBPROJECTILES;\n      case SpellScalingEffect.PROJECTILERADIUSPERVARIABLE.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILERADIUSPERVARIABLE;\n      case SpellScalingEffect.PROJECTILEPERVARIABLE.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILEPERVARIABLE;\n      case SpellScalingEffect.PROJECTILEPERTHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILEPERTHREEMAGIC;\n      case SpellScalingEffect.PROJECTILEPERTWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILEPERTWOMAGIC;\n      case SpellScalingEffect.PROJECTILERADIUSPERTWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILERADIUSPERTWOMAGIC;\n      case SpellScalingEffect.PROJECTILERADIUSPERTHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILERADIUSPERTHREEMAGIC;\n      case SpellScalingEffect.PLUSPROJECTILEPERTWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PLUSPROJECTILEPERTWOMAGIC;\n      case SpellScalingEffect.PLUSPROJECTILEPERFOURMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PLUSPROJECTILEPERFOURMAGIC;\n      case SpellScalingEffect.PLUSPROJECTILEPERTHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PLUSPROJECTILEPERTHREEMAGIC;\n      case SpellScalingEffect.MYSTBRADIUSEFFECT.label.toLowerCase():\n        return SpellScalingEffect.MYSTBRADIUSEFFECT;\n      case SpellScalingEffect.PLUSHALFMYSTBRADIUSEFFECT.label.toLowerCase():\n        return SpellScalingEffect.PLUSHALFMYSTBRADIUSEFFECT;\n      case SpellScalingEffect.PLUSHALFMYSTBRADIUS.label.toLowerCase():\n        return SpellScalingEffect.PLUSHALFMYSTBRADIUS;\n      case SpellScalingEffect.PLUSMYSTBRADIUS.label.toLowerCase():\n        return SpellScalingEffect.PLUSMYSTBRADIUS;\n      case SpellScalingEffect.PLUSMYSTBRADIUSEFFECT.label.toLowerCase():\n        return SpellScalingEffect.PLUSMYSTBRADIUSEFFECT;\n      default:\n        return SpellScalingEffect.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellScalingEffect.NONE.label,\n      SpellScalingEffect.MYSTBRADIUS.label,\n      SpellScalingEffect.MYSTBPROJECTILES.label,\n      SpellScalingEffect.PROJECTILERADIUSPERVARIABLE.label,\n      SpellScalingEffect.PROJECTILEPERVARIABLE.label,\n      SpellScalingEffect.PROJECTILEPERTHREEMAGIC.label,\n      SpellScalingEffect.PROJECTILEPERTWOMAGIC.label,\n      SpellScalingEffect.PROJECTILERADIUSPERTWOMAGIC.label,\n      SpellScalingEffect.PROJECTILERADIUSPERTHREEMAGIC.label,\n      SpellScalingEffect.PLUSPROJECTILEPERTWOMAGIC.label,\n      SpellScalingEffect.PLUSPROJECTILEPERFOURMAGIC.label,\n      SpellScalingEffect.PLUSPROJECTILEPERTHREEMAGIC.label,\n      SpellScalingEffect.MYSTBRADIUSEFFECT.label,\n      SpellScalingEffect.PLUSHALFMYSTBRADIUSEFFECT.label,\n      SpellScalingEffect.PLUSHALFMYSTBRADIUS.label,\n      SpellScalingEffect.PLUSMYSTBRADIUS.label,\n      SpellScalingEffect.PLUSMYSTBRADIUSEFFECT.label,\n    ];\n  };\n}\n\nexport class SpellDamageType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly COMBINED: StringPair = { label: \"Combined\", drain: 0 };\n  static readonly PHYSICAL: StringPair = { label: \"Physical\", drain: 0 };\n  static readonly STUN: StringPair = { label: \"Stun\", drain: 1 };\n  static readonly PURE: StringPair = { label: \"Pure\", drain: 2 };\n  static readonly FATIGUE: StringPair = { label: \"Fatigue\", drain: 3 };\n  static readonly AGONY: StringPair = { label: \"Agony\", drain: 5 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDamageType.COMBINED.label.toLowerCase():\n        return SpellDamageType.COMBINED;\n      case SpellDamageType.PHYSICAL.label.toLowerCase():\n        return SpellDamageType.PHYSICAL;\n      case SpellDamageType.STUN.label.toLowerCase():\n        return SpellDamageType.STUN;\n      case SpellDamageType.PURE.label.toLowerCase():\n        return SpellDamageType.PURE;\n      case SpellDamageType.FATIGUE.label.toLowerCase():\n        return SpellDamageType.FATIGUE;\n      case SpellDamageType.AGONY.label.toLowerCase():\n        return SpellDamageType.AGONY;\n      default:\n        return SpellDamageType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDamageType.NONE.label,\n      SpellDamageType.COMBINED.label,\n      SpellDamageType.PHYSICAL.label,\n      SpellDamageType.STUN.label,\n      SpellDamageType.PURE.label,\n      SpellDamageType.FATIGUE.label,\n      SpellDamageType.AGONY.label,\n    ];\n  };\n}\n\nexport class SpellDamage {\n  static readonly NONE: StringPair = { label: \"\", drain: 0 };\n  static readonly ONEPRMAGIC: StringPair = {\n    label: \"1 PR Magic/Faith\",\n    drain: 3,\n  };\n  static readonly TWOPRMAGIC: StringPair = {\n    label: \"2 PR Magic/Faith\",\n    drain: 4,\n  };\n  static readonly THREEPRMAGIC: StringPair = {\n    label: \"3 PR Magic/Faith\",\n    drain: 6,\n  };\n  static readonly FOURPRMAGIC: StringPair = {\n    label: \"4 PR Magic/Faith\",\n    drain: 9,\n  };\n  static readonly FIVEPRMAGIC: StringPair = {\n    label: \"5 PR Magic/Faith\",\n    drain: 12,\n  };\n  static readonly ONE: StringPair = { label: \"1\", drain: 1 };\n  static readonly TWO: StringPair = { label: \"2\", drain: 2 };\n  static readonly THREE: StringPair = { label: \"3\", drain: 3 };\n  static readonly FOUR: StringPair = { label: \"4\", drain: 4 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 5 };\n  static readonly ONEDFOUR: StringPair = { label: \"1d4\", drain: 1 };\n  static readonly ONEDSIX: StringPair = { label: \"1d6\", drain: 1 };\n  static readonly ONEDEIGHT: StringPair = { label: \"1d8\", drain: 2 };\n  static readonly ONEDTEN: StringPair = { label: \"1d10\", drain: 3 };\n  static readonly ONEDTWELVE: StringPair = { label: \"1d12\", drain: 3 };\n  static readonly ONEDTWENTY: StringPair = { label: \"1d20\", drain: 5 };\n  static readonly TWODFOUR: StringPair = { label: \"2d4\", drain: 2 };\n  static readonly TWODSIX: StringPair = { label: \"2d6\", drain: 3 };\n  static readonly TWODEIGHT: StringPair = { label: \"2d8\", drain: 4 };\n  static readonly TWODTEN: StringPair = { label: \"2d10\", drain: 5 };\n  static readonly TWODTWELVE: StringPair = { label: \"2d12\", drain: 5 };\n  static readonly TWODTWENTY: StringPair = { label: \"2d20\", drain: 10 };\n  static readonly THREEDFOUR: StringPair = { label: \"3d4\", drain: 3 };\n  static readonly THREEDSIX: StringPair = { label: \"3d6\", drain: 5 };\n  static readonly THREEDEIGHT: StringPair = { label: \"3d8\", drain: 6 };\n  static readonly THREEDTEN: StringPair = { label: \"3d10\", drain: 7 };\n  static readonly THREEDTWELVE: StringPair = { label: \"3d12\", drain: 9 };\n  static readonly FOURDFOUR: StringPair = { label: \"4d4\", drain: 4 };\n  static readonly FOURDSIX: StringPair = { label: \"4d6\", drain: 6 };\n  static readonly FOURDEIGHT: StringPair = { label: \"4d8\", drain: 8 };\n  static readonly FOURDTEN: StringPair = { label: \"4d10\", drain: 11 };\n  static readonly FIVEDFOUR: StringPair = { label: \"5d4\", drain: 5 };\n  static readonly FIVEDSIX: StringPair = { label: \"5d6\", drain: 8 };\n  static readonly FIVEDEIGHT: StringPair = { label: \"5d8\", drain: 12 };\n  static readonly SIXDFOUR: StringPair = { label: \"6d4\", drain: 7 };\n  static readonly MYSTB: StringPair = { label: \"MystB\", drain: 1 };\n  static readonly MYSTBDOUBLE: StringPair = { label: \"MystB *2\", drain: 2 };\n  static readonly QUARTERMAGIC: StringPair = {\n    label: \"1/4 Magic/Faith\",\n    drain: 2,\n  };\n  static readonly HALFMAGIC: StringPair = {\n    label: \"1/2 Magic/Faith\",\n    drain: 3,\n  };\n  static readonly MAGIC: StringPair = { label: \"Magic/Faith\", drain: 4 };\n  static readonly COLLETERAL: StringPair = {\n    label: \"Collateral damage based on environment\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDamage.ONEPRMAGIC.label.toLowerCase():\n        return SpellDamage.ONEPRMAGIC;\n      case SpellDamage.TWOPRMAGIC.label.toLowerCase():\n        return SpellDamage.TWOPRMAGIC;\n      case SpellDamage.THREEPRMAGIC.label.toLowerCase():\n        return SpellDamage.THREEPRMAGIC;\n      case SpellDamage.FOURPRMAGIC.label.toLowerCase():\n        return SpellDamage.FOURPRMAGIC;\n      case SpellDamage.FIVEPRMAGIC.label.toLowerCase():\n        return SpellDamage.FIVEPRMAGIC;\n      case SpellDamage.ONE.label.toLowerCase():\n        return SpellDamage.ONE;\n      case SpellDamage.TWO.label.toLowerCase():\n        return SpellDamage.TWO;\n      case SpellDamage.THREE.label.toLowerCase():\n        return SpellDamage.THREE;\n      case SpellDamage.FOUR.label.toLowerCase():\n        return SpellDamage.FOUR;\n      case SpellDamage.FIVE.label.toLowerCase():\n        return SpellDamage.FIVE;\n      case SpellDamage.ONEDFOUR.label.toLowerCase():\n        return SpellDamage.ONEDFOUR;\n      case SpellDamage.ONEDSIX.label.toLowerCase():\n        return SpellDamage.ONEDSIX;\n      case SpellDamage.ONEDEIGHT.label.toLowerCase():\n        return SpellDamage.ONEDEIGHT;\n      case SpellDamage.ONEDTEN.label.toLowerCase():\n        return SpellDamage.ONEDTEN;\n      case SpellDamage.ONEDTWELVE.label.toLowerCase():\n        return SpellDamage.ONEDTWELVE;\n      case SpellDamage.ONEDTWENTY.label.toLowerCase():\n        return SpellDamage.ONEDTWENTY;\n      case SpellDamage.TWODFOUR.label.toLowerCase():\n        return SpellDamage.TWODFOUR;\n      case SpellDamage.TWODSIX.label.toLowerCase():\n        return SpellDamage.TWODSIX;\n      case SpellDamage.TWODEIGHT.label.toLowerCase():\n        return SpellDamage.TWODEIGHT;\n      case SpellDamage.TWODTEN.label.toLowerCase():\n        return SpellDamage.TWODTEN;\n      case SpellDamage.TWODTWELVE.label.toLowerCase():\n        return SpellDamage.TWODTWELVE;\n      case SpellDamage.TWODTWENTY.label.toLowerCase():\n        return SpellDamage.TWODTWENTY;\n      case SpellDamage.THREEDFOUR.label.toLowerCase():\n        return SpellDamage.THREEDFOUR;\n      case SpellDamage.THREEDSIX.label.toLowerCase():\n        return SpellDamage.THREEDSIX;\n      case SpellDamage.THREEDEIGHT.label.toLowerCase():\n        return SpellDamage.THREEDEIGHT;\n      case SpellDamage.THREEDTEN.label.toLowerCase():\n        return SpellDamage.THREEDTEN;\n      case SpellDamage.THREEDTWELVE.label.toLowerCase():\n        return SpellDamage.THREEDTWELVE;\n      case SpellDamage.FOURDFOUR.label.toLowerCase():\n        return SpellDamage.FOURDFOUR;\n      case SpellDamage.FOURDSIX.label.toLowerCase():\n        return SpellDamage.FOURDSIX;\n      case SpellDamage.FOURDEIGHT.label.toLowerCase():\n        return SpellDamage.FOURDEIGHT;\n      case SpellDamage.FOURDTEN.label.toLowerCase():\n        return SpellDamage.FOURDTEN;\n      case SpellDamage.FIVEDFOUR.label.toLowerCase():\n        return SpellDamage.FIVEDFOUR;\n      case SpellDamage.FIVEDSIX.label.toLowerCase():\n        return SpellDamage.FIVEDSIX;\n      case SpellDamage.FIVEDEIGHT.label.toLowerCase():\n        return SpellDamage.FIVEDEIGHT;\n      case SpellDamage.SIXDFOUR.label.toLowerCase():\n        return SpellDamage.SIXDFOUR;\n      case SpellDamage.MYSTB.label.toLowerCase():\n        return SpellDamage.MYSTB;\n      case SpellDamage.MYSTBDOUBLE.label.toLowerCase():\n        return SpellDamage.MYSTBDOUBLE;\n      case SpellDamage.QUARTERMAGIC.label.toLowerCase():\n        return SpellDamage.QUARTERMAGIC;\n      case SpellDamage.HALFMAGIC.label.toLowerCase():\n        return SpellDamage.HALFMAGIC;\n      case SpellDamage.MAGIC.label.toLowerCase():\n        return SpellDamage.MAGIC;\n      case SpellDamage.COLLETERAL.label.toLowerCase():\n        return SpellDamage.COLLETERAL;\n      default:\n        return SpellDamage.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDamage.NONE.label,\n      SpellDamage.ONEPRMAGIC.label,\n      SpellDamage.TWOPRMAGIC.label,\n      SpellDamage.THREEPRMAGIC.label,\n      SpellDamage.FOURPRMAGIC.label,\n      SpellDamage.FIVEPRMAGIC.label,\n      SpellDamage.ONE.label,\n      SpellDamage.TWO.label,\n      SpellDamage.THREE.label,\n      SpellDamage.FOUR.label,\n      SpellDamage.FIVE.label,\n      SpellDamage.ONEDFOUR.label,\n      SpellDamage.ONEDSIX.label,\n      SpellDamage.ONEDEIGHT.label,\n      SpellDamage.ONEDTEN.label,\n      SpellDamage.ONEDTWELVE.label,\n      SpellDamage.ONEDTWENTY.label,\n      SpellDamage.TWODFOUR.label,\n      SpellDamage.TWODSIX.label,\n      SpellDamage.TWODEIGHT.label,\n      SpellDamage.TWODTEN.label,\n      SpellDamage.TWODTWELVE.label,\n      SpellDamage.TWODTWENTY.label,\n      SpellDamage.THREEDFOUR.label,\n      SpellDamage.THREEDSIX.label,\n      SpellDamage.THREEDEIGHT.label,\n      SpellDamage.THREEDTEN.label,\n      SpellDamage.THREEDTWELVE.label,\n      SpellDamage.FOURDFOUR.label,\n      SpellDamage.FOURDSIX.label,\n      SpellDamage.FOURDEIGHT.label,\n      SpellDamage.FOURDTEN.label,\n      SpellDamage.FIVEDFOUR.label,\n      SpellDamage.FIVEDSIX.label,\n      SpellDamage.FIVEDEIGHT.label,\n      SpellDamage.SIXDFOUR.label,\n      SpellDamage.MYSTB.label,\n      SpellDamage.MYSTBDOUBLE.label,\n      SpellDamage.QUARTERMAGIC.label,\n      SpellDamage.HALFMAGIC.label,\n      SpellDamage.MAGIC.label,\n      SpellDamage.COLLETERAL.label,\n    ];\n  };\n}\n\nexport class SpellAoeRadius {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONEMETER: StringPair = { label: \"1 Meter\", drain: -1 };\n  static readonly TWOMETERS: StringPair = { label: \"2 Meters\", drain: 0 };\n  static readonly THREEMETERS: StringPair = { label: \"3 Meters\", drain: 1 };\n  static readonly HALFMAGMETERS: StringPair = {\n    label: \"1/2 Magic/Faith Meters\",\n    drain: 2,\n  };\n  static readonly MAGMETERS: StringPair = {\n    label: \"Magic/Faith *1 Meters\",\n    drain: 4,\n  };\n  static readonly MAGTIMESTWOMETERS: StringPair = {\n    label: \"Magic/Faith *2 Meters\",\n    drain: 6,\n  };\n  static readonly VARIABLE: StringPair = { label: \"Variable\", drain: 1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellAoeRadius.ONEMETER.label.toLowerCase():\n        return SpellAoeRadius.ONEMETER;\n      case SpellAoeRadius.TWOMETERS.label.toLowerCase():\n        return SpellAoeRadius.TWOMETERS;\n      case SpellAoeRadius.THREEMETERS.label.toLowerCase():\n        return SpellAoeRadius.THREEMETERS;\n      case SpellAoeRadius.HALFMAGMETERS.label.toLowerCase():\n        return SpellAoeRadius.HALFMAGMETERS;\n      case SpellAoeRadius.MAGMETERS.label.toLowerCase():\n        return SpellAoeRadius.MAGMETERS;\n      case SpellAoeRadius.MAGTIMESTWOMETERS.label.toLowerCase():\n        return SpellAoeRadius.MAGTIMESTWOMETERS;\n      case SpellAoeRadius.VARIABLE.label.toLowerCase():\n        return SpellAoeRadius.VARIABLE;\n      default:\n        return SpellAoeRadius.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellAoeRadius.NONE.label,\n      SpellAoeRadius.ONEMETER.label,\n      SpellAoeRadius.TWOMETERS.label,\n      SpellAoeRadius.THREEMETERS.label,\n      SpellAoeRadius.HALFMAGMETERS.label,\n      SpellAoeRadius.MAGMETERS.label,\n      SpellAoeRadius.MAGTIMESTWOMETERS.label,\n      SpellAoeRadius.VARIABLE.label,\n    ];\n  };\n}\n\nexport class SpellLosRange {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGIC: StringPair = {\n    label: \"1/2 Magic/Faith meters\",\n    drain: -1,\n  };\n  static readonly ONEMAGIC: StringPair = {\n    label: \"Magic/Faith *1 meters\",\n    drain: -1,\n  };\n  static readonly TWOMAGIC: StringPair = {\n    label: \"Magic/Faith *2 meters\",\n    drain: 0,\n  };\n  static readonly THREEMAGIC: StringPair = {\n    label: \"Magic/Faith *3 meters\",\n    drain: 1,\n  };\n  static readonly FOURMAGIC: StringPair = {\n    label: \"Magic/Faith *4 meters\",\n    drain: 2,\n  };\n  static readonly FIVEMAGIC: StringPair = {\n    label: \"Magic/Faith *5 meters\",\n    drain: 3,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellLosRange.HALFMAGIC.label.toLowerCase():\n        return SpellLosRange.HALFMAGIC;\n      case SpellLosRange.ONEMAGIC.label.toLowerCase():\n        return SpellLosRange.ONEMAGIC;\n      case SpellLosRange.TWOMAGIC.label.toLowerCase():\n        return SpellLosRange.TWOMAGIC;\n      case SpellLosRange.THREEMAGIC.label.toLowerCase():\n        return SpellLosRange.THREEMAGIC;\n      case SpellLosRange.FOURMAGIC.label.toLowerCase():\n        return SpellLosRange.FOURMAGIC;\n      case SpellLosRange.FIVEMAGIC.label.toLowerCase():\n        return SpellLosRange.FIVEMAGIC;\n      default:\n        return SpellLosRange.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellLosRange.NONE.label,\n      SpellLosRange.HALFMAGIC.label,\n      SpellLosRange.ONEMAGIC.label,\n      SpellLosRange.TWOMAGIC.label,\n      SpellLosRange.THREEMAGIC.label,\n      SpellLosRange.FOURMAGIC.label,\n      SpellLosRange.FIVEMAGIC.label,\n    ];\n  };\n}\n\nexport class SpellProjectileNumber {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONE: StringPair = { label: \"1\", drain: 1 };\n  static readonly TWO: StringPair = { label: \"2\", drain: 2 };\n  static readonly THREE: StringPair = { label: \"3\", drain: 4 };\n  static readonly FOUR: StringPair = { label: \"4\", drain: 6 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 8 };\n  static readonly SCALING: StringPair = {\n    label: \"Scaling / Variable\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellProjectileNumber.ONE.label.toLowerCase():\n        return SpellProjectileNumber.ONE;\n      case SpellProjectileNumber.TWO.label.toLowerCase():\n        return SpellProjectileNumber.TWO;\n      case SpellProjectileNumber.THREE.label.toLowerCase():\n        return SpellProjectileNumber.THREE;\n      case SpellProjectileNumber.FOUR.label.toLowerCase():\n        return SpellProjectileNumber.FOUR;\n      case SpellProjectileNumber.FIVE.label.toLowerCase():\n        return SpellProjectileNumber.FIVE;\n      case SpellProjectileNumber.SCALING.label.toLowerCase():\n        return SpellProjectileNumber.SCALING;\n      default:\n        return SpellProjectileNumber.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellProjectileNumber.NONE.label,\n      SpellProjectileNumber.ONE.label,\n      SpellProjectileNumber.TWO.label,\n      SpellProjectileNumber.THREE.label,\n      SpellProjectileNumber.FOUR.label,\n      SpellProjectileNumber.FIVE.label,\n      SpellProjectileNumber.SCALING.label,\n    ];\n  };\n}\n\nexport class SpellProjectileType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly BALL: StringPair = { label: \"Ball\", drain: -1 };\n  static readonly MISSILE: StringPair = { label: \"Missile\", drain: 0 };\n  static readonly BOLT: StringPair = { label: \"Bolt\", drain: 0 };\n  static readonly RAY: StringPair = { label: \"Ray\", drain: 1 };\n  static readonly SPRAY: StringPair = { label: \"Spray\", drain: 0 };\n  static readonly LASSO: StringPair = { label: \"Lasso\", drain: 1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellProjectileType.BALL.label.toLowerCase():\n        return SpellProjectileType.BALL;\n      case SpellProjectileType.MISSILE.label.toLowerCase():\n        return SpellProjectileType.MISSILE;\n      case SpellProjectileType.BOLT.label.toLowerCase():\n        return SpellProjectileType.BOLT;\n      case SpellProjectileType.RAY.label.toLowerCase():\n        return SpellProjectileType.RAY;\n      case SpellProjectileType.SPRAY.label.toLowerCase():\n        return SpellProjectileType.SPRAY;\n      case SpellProjectileType.LASSO.label.toLowerCase():\n        return SpellProjectileType.LASSO;\n      default:\n        return SpellProjectileType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellProjectileType.NONE.label,\n      SpellProjectileType.BALL.label,\n      SpellProjectileType.MISSILE.label,\n      SpellProjectileType.BOLT.label,\n      SpellProjectileType.RAY.label,\n      SpellProjectileType.SPRAY.label,\n      SpellProjectileType.LASSO.label,\n    ];\n  };\n  static getAllSingle = (): string[] => {\n    return [\n      SpellProjectileType.NONE.label,\n      SpellProjectileType.MISSILE.label,\n      SpellProjectileType.BOLT.label,\n      SpellProjectileType.RAY.label,\n      SpellProjectileType.SPRAY.label,\n      SpellProjectileType.LASSO.label,\n    ];\n  };\n}\n\nexport class SpellTargetingType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly DIRECTTARGET: StringPair = {\n    label: \"Direct\",\n    drain: 0,\n  };\n  static readonly AURATARGETING: StringPair = {\n    label: \"Aura\",\n    drain: 2,\n  };\n  static readonly INDIRECTTARGETING: StringPair = {\n    label: \"Indirect\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellTargetingType.DIRECTTARGET.label.toLowerCase():\n        return SpellTargetingType.DIRECTTARGET;\n      case SpellTargetingType.AURATARGETING.label.toLowerCase():\n        return SpellTargetingType.AURATARGETING;\n      case SpellTargetingType.INDIRECTTARGETING.label.toLowerCase():\n        return SpellTargetingType.INDIRECTTARGETING;\n      default:\n        return SpellTargetingType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellTargetingType.NONE.label,\n      SpellTargetingType.DIRECTTARGET.label,\n      SpellTargetingType.AURATARGETING.label,\n      SpellTargetingType.INDIRECTTARGETING.label,\n    ];\n  };\n}\n\nexport class SpellCastTime {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly SIXMINUSMYSTBROUNDS: StringPair = {\n    label: \"6 - Mystb Rounds\",\n    drain: 2,\n  };\n  static readonly NINETHREE: StringPair = { label: \"9 + 3\", drain: -5 };\n  static readonly NINETHREECHANNEL: StringPair = {\n    label: \"9 + 3 (Channel)\",\n    drain: -3,\n  };\n  static readonly SEVENTHREE: StringPair = { label: \"7 + 3\", drain: -1 };\n  static readonly FIVETHREE: StringPair = { label: \"5 + 3\", drain: 1 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 4 };\n  static readonly DRAINCHENNEL: StringPair = {\n    label: \"Drain (Channel)\",\n    drain: -3,\n  };\n  static readonly DRAINTHREE: StringPair = { label: \"Drain + 3\", drain: -2 };\n  static readonly MAGIFAITHHOURS: StringPair = {\n    label: \"24 / Magic/Faith Hours\",\n    drain: 0,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellCastTime.SIXMINUSMYSTBROUNDS.label.toLowerCase():\n        return SpellCastTime.SIXMINUSMYSTBROUNDS;\n      case SpellCastTime.NINETHREE.label.toLowerCase():\n        return SpellCastTime.NINETHREE;\n      case SpellCastTime.NINETHREECHANNEL.label.toLowerCase():\n        return SpellCastTime.NINETHREECHANNEL;\n      case SpellCastTime.SEVENTHREE.label.toLowerCase():\n        return SpellCastTime.SEVENTHREE;\n      case SpellCastTime.FIVETHREE.label.toLowerCase():\n        return SpellCastTime.FIVETHREE;\n      case SpellCastTime.FIVE.label.toLowerCase():\n        return SpellCastTime.FIVE;\n      case SpellCastTime.DRAINCHENNEL.label.toLowerCase():\n        return SpellCastTime.DRAINCHENNEL;\n      case SpellCastTime.DRAINTHREE.label.toLowerCase():\n        return SpellCastTime.DRAINTHREE;\n      case SpellCastTime.MAGIFAITHHOURS.label.toLowerCase():\n        return SpellCastTime.MAGIFAITHHOURS;\n      default:\n        return SpellCastTime.NONE;\n    }\n  };\n  static getAllPhysical = (): string[] => {\n    return [\n      SpellCastTime.NONE.label,\n      SpellCastTime.SIXMINUSMYSTBROUNDS.label,\n      SpellCastTime.NINETHREE.label,\n      SpellCastTime.NINETHREECHANNEL.label,\n      SpellCastTime.SEVENTHREE.label,\n      SpellCastTime.FIVETHREE.label,\n      SpellCastTime.FIVE.label,\n      SpellCastTime.DRAINCHENNEL.label,\n      SpellCastTime.DRAINTHREE.label,\n      SpellCastTime.MAGIFAITHHOURS.label,\n    ];\n  };\n  static getAllStun = (): string[] => {\n    return [\n      SpellCastTime.NONE.label,\n      SpellCastTime.SIXMINUSMYSTBROUNDS.label,\n      SpellCastTime.NINETHREE.label,\n      SpellCastTime.NINETHREECHANNEL.label,\n      SpellCastTime.SEVENTHREE.label,\n      SpellCastTime.FIVETHREE.label,\n      SpellCastTime.FIVE.label,\n      SpellCastTime.MAGIFAITHHOURS.label,\n    ];\n  };\n}\n\nexport class SpellLevel {\n  static readonly NONE: NumberPair = {\n    label: 0,\n    drain: 0,\n  };\n  static readonly ONE: NumberPair = { label: 1, drain: -4 };\n  static readonly TWO: NumberPair = { label: 2, drain: -3 };\n  static readonly THREE: NumberPair = { label: 3, drain: -2 };\n  static readonly FOUR: NumberPair = { label: 4, drain: -1 };\n  static readonly FIVE: NumberPair = { label: 5, drain: 0 };\n  static readonly SIX: NumberPair = { label: 6, drain: 1 };\n  static readonly SEVEN: NumberPair = { label: 7, drain: 2 };\n  static readonly EIGHT: NumberPair = { label: 8, drain: 3 };\n  static readonly NINE: NumberPair = { label: 9, drain: 4 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): NumberPair => {\n    switch (+label) {\n      case SpellLevel.ONE.label:\n        return SpellLevel.ONE;\n      case SpellLevel.TWO.label:\n        return SpellLevel.TWO;\n      case SpellLevel.THREE.label:\n        return SpellLevel.THREE;\n      case SpellLevel.FOUR.label:\n        return SpellLevel.FOUR;\n      case SpellLevel.FIVE.label:\n        return SpellLevel.FIVE;\n      case SpellLevel.SIX.label:\n        return SpellLevel.SIX;\n      case SpellLevel.SEVEN.label:\n        return SpellLevel.SEVEN;\n      case SpellLevel.EIGHT.label:\n        return SpellLevel.EIGHT;\n      case SpellLevel.NINE.label:\n        return SpellLevel.NINE;\n      default:\n        return SpellLevel.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellLevel.NONE.label + \"\",\n      SpellLevel.ONE.label + \"\",\n      SpellLevel.TWO.label + \"\",\n      SpellLevel.THREE.label + \"\",\n      SpellLevel.FOUR.label + \"\",\n      SpellLevel.FIVE.label + \"\",\n      SpellLevel.SIX.label + \"\",\n      SpellLevel.SEVEN.label + \"\",\n      SpellLevel.EIGHT.label + \"\",\n      SpellLevel.NINE.label + \"\",\n    ];\n  };\n}\n\nexport class SpellSource {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly EARTH: StringPair = { label: \"earth\", drain: 0 };\n  static readonly FROST: StringPair = { label: \"frost\", drain: 0 };\n  static readonly AIR: StringPair = { label: \"air\", drain: 0 };\n  static readonly FIRE: StringPair = { label: \"fire\", drain: 0 };\n  static readonly ARCANE: StringPair = { label: \"arcane\", drain: 1 };\n  static readonly DIVINE: StringPair = { label: \"divine\", drain: 0 };\n  static readonly DEMONIC: StringPair = { label: \"demonic\", drain: 0 };\n  static readonly DRUIDIC: StringPair = { label: \"druidic\", drain: 0 };\n  static readonly PSYCHIC: StringPair = { label: \"psychic\", drain: 0 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSource.EARTH.label.toLowerCase():\n        return SpellSource.EARTH;\n      case SpellSource.FROST.label.toLowerCase():\n        return SpellSource.FROST;\n      case SpellSource.AIR.label.toLowerCase():\n        return SpellSource.AIR;\n      case SpellSource.FIRE.label.toLowerCase():\n        return SpellSource.FIRE;\n      case SpellSource.ARCANE.label.toLowerCase():\n        return SpellSource.ARCANE;\n      case SpellSource.DIVINE.label.toLowerCase():\n        return SpellSource.DIVINE;\n      case SpellSource.DEMONIC.label.toLowerCase():\n        return SpellSource.DEMONIC;\n      case SpellSource.DRUIDIC.label.toLowerCase():\n        return SpellSource.DRUIDIC;\n      case SpellSource.PSYCHIC.label.toLowerCase():\n        return SpellSource.PSYCHIC;\n      default:\n        return SpellSource.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSource.NONE.label,\n      SpellSource.EARTH.label,\n      SpellSource.FROST.label,\n      SpellSource.AIR.label,\n      SpellSource.FIRE.label,\n      SpellSource.ARCANE.label,\n      SpellSource.DIVINE.label,\n      SpellSource.DEMONIC.label,\n      SpellSource.DRUIDIC.label,\n      SpellSource.PSYCHIC.label,\n    ];\n  };\n}\n\nexport class SpellRange {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly TOUCH: StringPair = { label: \"touch\", drain: 1 };\n  static readonly SONIC: StringPair = { label: \"sonic\", drain: 1 };\n  static readonly RADIUS90: StringPair = {\n    label: \"Radius 90° around Caster\",\n    drain: 1,\n  };\n  static readonly RADIUS360: StringPair = {\n    label: \"Radius 90°+ around Caster\",\n    drain: 2,\n  };\n  static readonly LOSAURA: StringPair = {\n    label: \"Line of Sight Aura or Projectile\",\n    drain: 1,\n  };\n  static readonly LOSMANIPULATE: StringPair = {\n    label: \"Line of Sight Manipulate\",\n    drain: 3,\n  };\n  static readonly LOSPOINT: StringPair = {\n    label: \"Line of Sight Spawn At Point\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellRange.TOUCH.label.toLowerCase():\n        return SpellRange.TOUCH;\n      case SpellRange.SONIC.label.toLowerCase():\n        return SpellRange.SONIC;\n      case SpellRange.RADIUS90.label.toLowerCase():\n        return SpellRange.RADIUS90;\n      case SpellRange.RADIUS360.label.toLowerCase():\n        return SpellRange.RADIUS360;\n      case SpellRange.LOSAURA.label.toLowerCase():\n        return SpellRange.LOSAURA;\n      case SpellRange.LOSMANIPULATE.label.toLowerCase():\n        return SpellRange.LOSMANIPULATE;\n      case SpellRange.LOSPOINT.label.toLowerCase():\n        return SpellRange.LOSPOINT;\n      default:\n        return SpellRange.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellRange.NONE.label,\n      SpellRange.TOUCH.label,\n      SpellRange.SONIC.label,\n      SpellRange.RADIUS90.label,\n      SpellRange.RADIUS360.label,\n      SpellRange.LOSAURA.label,\n      SpellRange.LOSMANIPULATE.label,\n      SpellRange.LOSPOINT.label,\n    ];\n  };\n}\n\nexport class SpellRite {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly VERBAL: StringPair = { label: \"verbal\", drain: 2 };\n  static readonly SOMATIC: StringPair = { label: \"somatic\", drain: 1 };\n  static readonly MENTAL: StringPair = { label: \"mental\", drain: 3 };\n  static readonly RITUAL: StringPair = { label: \"ritual\", drain: 3 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellRite.VERBAL.label.toLowerCase():\n        return SpellRite.VERBAL;\n      case SpellRite.SOMATIC.label.toLowerCase():\n        return SpellRite.SOMATIC;\n      case SpellRite.MENTAL.label.toLowerCase():\n        return SpellRite.MENTAL;\n      case SpellRite.RITUAL.label.toLowerCase():\n        return SpellRite.RITUAL;\n      default:\n        return SpellRite.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellRite.NONE.label,\n      SpellRite.VERBAL.label,\n      SpellRite.SOMATIC.label,\n      SpellRite.MENTAL.label,\n      SpellRite.RITUAL.label,\n    ];\n  };\n}\n\nexport class SpellTarget {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly SINGLE: StringPair = { label: \"Single Target\", drain: 1 };\n  static readonly DAOE: StringPair = {\n    label: \"Diminishing Area Of Effect\",\n    drain: 1,\n  };\n  static readonly MULTI: StringPair = { label: \"Multiple Targets\", drain: 4 };\n  static readonly AOE: StringPair = { label: \"Area Of Effect\", drain: 2 };\n  static readonly CASTER: StringPair = { label: \"Caster\", drain: 3 };\n  static readonly TARGET: StringPair = { label: \"Caster Or Target\", drain: 3 };\n  static readonly LINE: StringPair = { label: \"Straight Line\", drain: 2 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellTarget.SINGLE.label.toLowerCase():\n        return SpellTarget.SINGLE;\n      case SpellTarget.DAOE.label.toLowerCase():\n        return SpellTarget.DAOE;\n      case SpellTarget.MULTI.label.toLowerCase():\n        return SpellTarget.MULTI;\n      case SpellTarget.AOE.label.toLowerCase():\n        return SpellTarget.AOE;\n      case SpellTarget.CASTER.label.toLowerCase():\n        return SpellTarget.CASTER;\n      case SpellTarget.TARGET.label.toLowerCase():\n        return SpellTarget.TARGET;\n      case SpellTarget.LINE.label.toLowerCase():\n        return SpellTarget.LINE;\n      default:\n        return SpellTarget.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellTarget.NONE.label,\n      SpellTarget.SINGLE.label,\n      SpellTarget.MULTI.label,\n      SpellTarget.AOE.label,\n      SpellTarget.DAOE.label,\n      SpellTarget.TARGET.label,\n      SpellTarget.CASTER.label,\n      SpellTarget.LINE.label,\n    ];\n  };\n}\n\nexport class SpellDuration {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly CONCENTRATION: StringPair = {\n    label: \"concentration\",\n    drain: 0,\n  };\n  static readonly INSTANTANEOUS: StringPair = {\n    label: \"instantaneous\",\n    drain: 1,\n  };\n  static readonly PERMANENT: StringPair = { label: \"permanent\", drain: 1 };\n  static readonly FIXEDTICKS: StringPair = {\n    label: \"fixed # of ticks\",\n    drain: 1,\n  };\n  static readonly FIXEDROUNDS: StringPair = {\n    label: \"fixed # of rounds\",\n    drain: 2,\n  };\n  static readonly FIXEDHOURS: StringPair = {\n    label: \"fixed # of hours\",\n    drain: 2,\n  };\n  static readonly CHANNEL: StringPair = { label: \"channel\", drain: -1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDuration.CONCENTRATION.label.toLowerCase():\n        return SpellDuration.CONCENTRATION;\n      case SpellDuration.INSTANTANEOUS.label.toLowerCase():\n        return SpellDuration.INSTANTANEOUS;\n      case SpellDuration.PERMANENT.label.toLowerCase():\n        return SpellDuration.PERMANENT;\n      case SpellDuration.FIXEDTICKS.label.toLowerCase():\n        return SpellDuration.FIXEDTICKS;\n      case SpellDuration.FIXEDROUNDS.label.toLowerCase():\n        return SpellDuration.FIXEDROUNDS;\n      case SpellDuration.FIXEDHOURS.label.toLowerCase():\n        return SpellDuration.FIXEDHOURS;\n      case SpellDuration.CHANNEL.label.toLowerCase():\n        return SpellDuration.CHANNEL;\n      default:\n        return SpellDuration.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDuration.NONE.label,\n      SpellDuration.CONCENTRATION.label,\n      SpellDuration.FIXEDTICKS.label,\n      SpellDuration.FIXEDROUNDS.label,\n      SpellDuration.FIXEDHOURS.label,\n      SpellDuration.CHANNEL.label,\n      SpellDuration.INSTANTANEOUS.label,\n      SpellDuration.PERMANENT.label,\n    ];\n  };\n}\n\nexport class SpellSchool {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly TRANSMUTATION: StringPair = {\n    label: \"Transmutation\",\n    drain: 1,\n  };\n  static readonly EVOCATION: StringPair = { label: \"Evocation\", drain: 0 };\n  static readonly FORTIFICATION: StringPair = {\n    label: \"Fortification\",\n    drain: 1,\n  };\n  static readonly HEX: StringPair = { label: \"Hex\", drain: 1 };\n  static readonly ILLUSION: StringPair = { label: \"Illusion\", drain: 1 };\n  static readonly CONJURATION: StringPair = { label: \"Conjuration\", drain: 2 };\n  static readonly NECROMANCY: StringPair = { label: \"Necromancy\", drain: 1 };\n  static readonly ENCHANTMENT: StringPair = { label: \"Enchantment\", drain: 2 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSchool.FORTIFICATION.label.toLowerCase():\n        return SpellSchool.FORTIFICATION;\n      case SpellSchool.HEX.label.toLowerCase():\n        return SpellSchool.HEX;\n      case SpellSchool.ILLUSION.label.toLowerCase():\n        return SpellSchool.ILLUSION;\n      case SpellSchool.NECROMANCY.label.toLowerCase():\n        return SpellSchool.NECROMANCY;\n      case SpellSchool.TRANSMUTATION.label.toLowerCase():\n        return SpellSchool.TRANSMUTATION;\n      case SpellSchool.CONJURATION.label.toLowerCase():\n        return SpellSchool.CONJURATION;\n      case SpellSchool.EVOCATION.label.toLowerCase():\n        return SpellSchool.EVOCATION;\n      case SpellSchool.ENCHANTMENT.label.toLowerCase():\n        return SpellSchool.ENCHANTMENT;\n      default:\n        return SpellSchool.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSchool.NONE.label,\n      SpellSchool.CONJURATION.label,\n      SpellSchool.EVOCATION.label,\n      SpellSchool.FORTIFICATION.label,\n      SpellSchool.HEX.label,\n      SpellSchool.ILLUSION.label,\n      SpellSchool.NECROMANCY.label,\n      SpellSchool.TRANSMUTATION.label,\n      SpellSchool.ENCHANTMENT.label,\n    ];\n  };\n}\n\nexport class SpellDrainType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly STUN: StringPair = { label: \"Stun\", drain: 0 };\n  static readonly PHYSICAL: StringPair = { label: \"Physical\", drain: -7 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDrainType.STUN.label.toLowerCase():\n        return SpellDrainType.STUN;\n      case SpellDrainType.PHYSICAL.label.toLowerCase():\n        return SpellDrainType.PHYSICAL;\n      default:\n        return SpellDrainType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDrainType.NONE.label,\n      SpellDrainType.STUN.label,\n      SpellDrainType.PHYSICAL.label,\n    ];\n  };\n}\n"],"sourceRoot":""}