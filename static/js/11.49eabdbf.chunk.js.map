{"version":3,"sources":["../node_modules/peerjs/dist sync","../../src/index.tsx","services/OptionService.tsx","components/p2p/P2PReciver.tsx","components/options/GeneralOptions.tsx","components/options/TalentsOptions.tsx","components/form_elements/FileField.tsx","components/form_elements/ImportField.tsx","components/options/DiscordOptions.tsx","components/options/Options.tsx","components/form_elements/TextButton.tsx","components/form_elements/StringField.tsx","components/general_elements/TabBar.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","ProgressBar","alignmentOption","bgcolor","completed","baseBgColor","height","width","margin","padding","borderRadius","labelAlignment","labelColor","labelSize","isLabelVisible","alignment","containerStyles","backgroundColor","fillerStyles","transition","display","alignItems","justifyContent","labelStyles","color","fontWeight","fontSize","outsideStyles","React.createElement","style","propTypes","PropTypes.oneOfType","PropTypes.string","PropTypes.number","isRequired","PropTypes.oneOf","PropTypes.bool","defaultProps","scanImportFileTest","json","fileName","callback","a","promList","Array","isArray","forEach","obj","isTalent","push","saveNew","Promise","all","exportAll","filename","reciveAllPromise","spells","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","type","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","P2PReciver","changeData","reload","useState","peerId","setId","loading","isLoading","error","setError","state","setState","Peer","undefined","host","secure","peer","useEffect","conn","connect","on","data","console","log","Loading","StringField","value","label","onChange","Icon","icon","faExclamationCircle","TextButton","text","faCheck","onClick","styled","FontAwesomeIcon","theme","main","highlight","GeneralOptions","useTheme","setTheme","General","OptionSection","SelectionTitle","Button","darkTheme","lightTheme","localStorage","setItem","div","tile","boxShadow","button","buttons","input","TalentsOptions","amount","triggerDeleteAll","send","setSend","OptionTab","SectionRow","SectionText","IconButton","faFileExport","tableName","reciveAll","entity","faTrashAlt","faPaperPlane","P2PSender","mode","ImportModus","FileField","accept","isMulti","transform","Field","LabelText","Input","files","multiple","ImportField","modus","setFiles","Files","faFileImport","file","fileList","from","changeFile","map","index","key","FileTile","succCount","setSucc","maxCount","setMax","scanImportFile","listOfNew","newMax","length","NORMAL","newEntitiy","Object","entries","newTableName","bulkList","filter","saveNewFromList","name","fileReader","FileReader","onloadend","content","result","parse","toString","readAsText","FileWrapper","Math","round","DiscordOptions","getItem","webhook","setWebhook","webhookUser","setWebhookUser","Options","activeTab","setTab","talentAmount","setTalentAmount","isReload","setData","reciveCount","returnTile","TalentTile","talent","TabBar","children","tab","deleteAll","OptionSectionLarge","disabled","SimpleButton","hoverColor","placeholder","Bar","child","Tab","isActive","props","setName","setPeer","brokerId","min","max","password","characters","i","floor","random","generateBrokerId","newPeer","errorData","disconnected","destroyed","reconnect","then","results"],"mappings":"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","file":"static/js/11.49eabdbf.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 101;","import * as React from \"react\";\r\nimport * as PropTypes from \"prop-types\";\r\n\r\nexport type ProgressBarProps = {\r\n  completed: string | number;\r\n  bgcolor?: string;\r\n  baseBgColor?: string;\r\n  height?: string;\r\n  width?: string;\r\n  borderRadius?: string;\r\n  margin?: string;\r\n  padding?: string;\r\n  labelAlignment?: \"left\" | \"center\" | \"right\" | \"outside\";\r\n  labelColor?: string;\r\n  labelSize?: string;\r\n  isLabelVisible?: boolean;\r\n};\r\n\r\nconst ProgressBar: React.FC<ProgressBarProps> = ({\r\n  bgcolor,\r\n  completed,\r\n  baseBgColor,\r\n  height,\r\n  width,\r\n  margin,\r\n  padding,\r\n  borderRadius,\r\n  labelAlignment,\r\n  labelColor,\r\n  labelSize,\r\n  isLabelVisible,\r\n}) => {\r\n  const getAlignment = (\r\n    alignmentOption: ProgressBarProps[\"labelAlignment\"]\r\n  ) => {\r\n    if (alignmentOption === \"left\") {\r\n      return \"flex-start\";\r\n    } else if (alignmentOption === \"center\") {\r\n      return \"center\";\r\n    } else if (alignmentOption === \"right\") {\r\n      return \"flex-end\";\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const alignment = getAlignment(labelAlignment);\r\n\r\n  const containerStyles: React.CSSProperties = {\r\n    height: height,\r\n    backgroundColor: baseBgColor,\r\n    borderRadius: borderRadius,\r\n    padding: padding,\r\n    width: width,\r\n    margin: margin,\r\n  };\r\n\r\n  const fillerStyles: React.CSSProperties = {\r\n    height: height,\r\n    width:\r\n      typeof completed === \"string\" || completed > 100\r\n        ? `100%`\r\n        : `${completed}%`,\r\n    backgroundColor: bgcolor,\r\n    transition: \"width 1s ease-in-out\",\r\n    borderRadius: \"inherit\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent:\r\n      labelAlignment !== \"outside\" && alignment ? alignment : \"normal\",\r\n  };\r\n\r\n  const labelStyles: React.CSSProperties = {\r\n    padding: labelAlignment === \"outside\" ? \"0 0 0 5px\" : \"5px\",\r\n    color: labelColor,\r\n    fontWeight: \"bold\",\r\n    fontSize: labelSize,\r\n    display: !isLabelVisible ? \"none\" : \"initial\",\r\n  };\r\n\r\n  const outsideStyles = {\r\n    display: labelAlignment === \"outside\" ? \"flex\" : \"initial\",\r\n    alignItems: labelAlignment === \"outside\" ? \"center\" : \"initial\",\r\n  };\r\n\r\n  return (\r\n    <div style={outsideStyles}>\r\n      <div style={containerStyles}>\r\n        <div style={fillerStyles}>\r\n          {labelAlignment !== \"outside\" && (\r\n            <span style={labelStyles}>\r\n              {typeof completed === \"number\" ? `${completed}%` : `${completed}`}\r\n            </span>\r\n          )}\r\n        </div>\r\n      </div>\r\n      {labelAlignment === \"outside\" && (\r\n        <span style={labelStyles}>\r\n          {typeof completed === \"number\" ? `${completed}%` : `${completed}`}\r\n        </span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nProgressBar.propTypes = {\r\n  completed: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n    .isRequired,\r\n  bgcolor: PropTypes.string,\r\n  baseBgColor: PropTypes.string,\r\n  height: PropTypes.string,\r\n  width: PropTypes.string,\r\n  borderRadius: PropTypes.string,\r\n  margin: PropTypes.string,\r\n  padding: PropTypes.string,\r\n  labelAlignment: PropTypes.oneOf([\"left\", \"center\", \"right\", \"outside\"]),\r\n  labelColor: PropTypes.string,\r\n  labelSize: PropTypes.string,\r\n  isLabelVisible: PropTypes.bool,\r\n};\r\n\r\nProgressBar.defaultProps = {\r\n  bgcolor: \"#6a1b9a\",\r\n  height: \"20px\",\r\n  width: \"100%\",\r\n  borderRadius: \"50px\",\r\n  labelAlignment: \"right\",\r\n  baseBgColor: \"#e0e0de\",\r\n  labelColor: \"#fff\",\r\n  labelSize: \"15px\",\r\n  isLabelVisible: true,\r\n};\r\n\r\nexport default ProgressBar;\r\n","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Talent, { isTalent } from \"../data/Talent\";\n\nexport const scanImportFileTest = async (json: any, fileName: string, callback: () => void) => {\n  let promList: Promise<any>[] = [];\n\n  if (!Array.isArray(json)) {\n    json = [json];\n  }\n\n  json.forEach((obj: any) => {\n    if (isTalent(obj)) {\n      promList.push(saveNew(\"talents\", obj as Talent, fileName));\n    }\n  });\n  await Promise.all(promList);\n  callback();\n};\n\n// const scanForFormatErrors = (obj: any) => {\n//   const itemFormatErrors = findItemFromattError(obj);\n//   let itemFailCount: number = 0;\n//   for (const value of Object.entries(itemFormatErrors)) {\n//     if (!value[1]) itemFailCount++;\n//   }\n//   const gearFormatErrors = findGearFormattError(obj);\n//   let gearFailCount: number = 0;\n//   for (const value of Object.entries(gearFormatErrors)) {\n//     if (!value[1]) gearFailCount++;\n//   }\n//   const spellFormatErrors = findSpellFormattError(obj);\n//   let spellFailCount: number = 0;\n//   for (const value of Object.entries(spellFormatErrors)) {\n//     if (!value[1]) spellFailCount++;\n//   }\n//   const monsterFormatErrors = findMonsterFormattError(obj);\n//   let monsterFailCount: number = 0;\n//   for (const value of Object.entries(monsterFormatErrors)) {\n//     if (!value[1]) monsterFailCount++;\n//   }\n//   const raceFormatErrors = findRaceFormattError(obj);\n//   let raceFailCount: number = 0;\n//   for (const value of Object.entries(raceFormatErrors)) {\n//     if (!value[1]) raceFailCount++;\n//   }\n//   const subraceFormatErrors = findSubraceFormattError(obj);\n//   let subraceFailCount: number = 0;\n//   for (const value of Object.entries(subraceFormatErrors)) {\n//     if (!value[1]) subraceFailCount++;\n//   }\n//   const classFormatErrors = findClassFormattError(obj);\n//   let classFailCount: number = 0;\n//   for (const value of Object.entries(classFormatErrors)) {\n//     if (!value[1]) classFailCount++;\n//   }\n//   const subclassFormatErrors = formattSubclassFromattError(obj);\n//   let subclassFailCount: number = 0;\n//   for (const value of Object.entries(subclassFormatErrors)) {\n//     if (!value[1]) subclassFailCount++;\n//   }\n//   const selectionFormatErrors = findSelectionFormattError(obj);\n//   let selectionFailCount: number = 0;\n//   for (const value of Object.entries(selectionFormatErrors)) {\n//     if (!value[1]) selectionFailCount++;\n//   }\n\n//   let errors: any[] = [];\n//   if (\n//     itemFailCount <= gearFailCount &&\n//     itemFailCount <= spellFailCount &&\n//     itemFailCount <= raceFailCount &&\n//     itemFailCount <= subraceFailCount &&\n//     itemFailCount <= classFailCount &&\n//     itemFailCount <= subclassFailCount &&\n//     itemFailCount <= selectionFailCount &&\n//     itemFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ item: itemFormatErrors });\n//   }\n//   if (\n//     gearFailCount <= itemFailCount &&\n//     gearFailCount <= spellFailCount &&\n//     gearFailCount <= raceFailCount &&\n//     gearFailCount <= subraceFailCount &&\n//     gearFailCount <= classFailCount &&\n//     gearFailCount <= subclassFailCount &&\n//     gearFailCount <= selectionFailCount &&\n//     gearFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ gear: gearFormatErrors });\n//   }\n//   if (\n//     spellFailCount <= itemFailCount &&\n//     spellFailCount <= gearFailCount &&\n//     spellFailCount <= raceFailCount &&\n//     spellFailCount <= subraceFailCount &&\n//     spellFailCount <= classFailCount &&\n//     spellFailCount <= subclassFailCount &&\n//     spellFailCount <= selectionFailCount &&\n//     spellFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ spell: spellFormatErrors });\n//   }\n//   if (\n//     monsterFailCount <= itemFailCount &&\n//     monsterFailCount <= gearFailCount &&\n//     monsterFailCount <= raceFailCount &&\n//     monsterFailCount <= subraceFailCount &&\n//     monsterFailCount <= classFailCount &&\n//     monsterFailCount <= subclassFailCount &&\n//     monsterFailCount <= selectionFailCount &&\n//     monsterFailCount <= spellFailCount\n//   ) {\n//     errors.push({ monster: monsterFormatErrors });\n//   }\n//   if (\n//     raceFailCount <= itemFailCount &&\n//     raceFailCount <= gearFailCount &&\n//     raceFailCount <= monsterFailCount &&\n//     raceFailCount <= subraceFailCount &&\n//     raceFailCount <= classFailCount &&\n//     raceFailCount <= subclassFailCount &&\n//     raceFailCount <= selectionFailCount &&\n//     raceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ race: raceFormatErrors });\n//   }\n//   if (\n//     subraceFailCount <= itemFailCount &&\n//     subraceFailCount <= gearFailCount &&\n//     subraceFailCount <= monsterFailCount &&\n//     subraceFailCount <= raceFailCount &&\n//     subraceFailCount <= classFailCount &&\n//     subraceFailCount <= subclassFailCount &&\n//     subraceFailCount <= selectionFailCount &&\n//     subraceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subrace: subraceFormatErrors });\n//   }\n//   if (\n//     classFailCount <= itemFailCount &&\n//     classFailCount <= gearFailCount &&\n//     classFailCount <= monsterFailCount &&\n//     classFailCount <= raceFailCount &&\n//     classFailCount <= subraceFailCount &&\n//     classFailCount <= subclassFailCount &&\n//     classFailCount <= selectionFailCount &&\n//     classFailCount <= spellFailCount\n//   ) {\n//     errors.push({ class: classFormatErrors });\n//   }\n//   if (\n//     subclassFailCount <= itemFailCount &&\n//     subclassFailCount <= gearFailCount &&\n//     subclassFailCount <= monsterFailCount &&\n//     subclassFailCount <= raceFailCount &&\n//     subclassFailCount <= subraceFailCount &&\n//     subclassFailCount <= classFailCount &&\n//     subclassFailCount <= selectionFailCount &&\n//     subclassFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subclass: subclassFormatErrors });\n//   }\n//   if (\n//     selectionFailCount <= itemFailCount &&\n//     selectionFailCount <= gearFailCount &&\n//     selectionFailCount <= monsterFailCount &&\n//     selectionFailCount <= raceFailCount &&\n//     selectionFailCount <= subraceFailCount &&\n//     selectionFailCount <= classFailCount &&\n//     selectionFailCount <= subclassFailCount &&\n//     selectionFailCount <= spellFailCount\n//   ) {\n//     errors.push({ selection: selectionFormatErrors });\n//   }\n//   return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n// };\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let entity = { [tableName]: all };\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(entity)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(entity));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  const spells = await reciveAllPromise(\"spells\");\n\n  let all: any = {\n    spells: spells,\n  };\n\n  let contentType = \"application/json;charset=utf-8;\";\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n      type: contentType,\n    });\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../services/OptionService\";\nimport IEntity from \"../../data/IEntity\";\n\nimport {\n  faCheck,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thedndtome.com\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField\n        value={peerId}\n        label={\"ID to recive from\"}\n        onChange={(id) => setId(id)}\n      />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton\n            text={\"Accept\"}\n            icon={faCheck}\n            onClick={() => acceptData()}\n          />\n          <TextButton\n            text={\"Decline\"}\n            icon={faCheck}\n            onClick={() => declineData()}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../theme/Theme\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst TalentsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Talents?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"talents\", \"SkirmishTome_talents.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Talents?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"talents\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all talents`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"talents\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default TalentsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({\n  label,\n  accept,\n  isMulti,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          accept={accept}\n          type=\"file\"\n        ></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport FileField from \"./FileField\";\nimport IEntity from \"../../data/IEntity\";\nimport { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport { saveNewFromList } from \"../../services/DatabaseService\";\n\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nexport enum ImportModus {\n  NORMAL,\n}\n\ninterface $Props {\n  modus: ImportModus;\n}\n\nconst ImportField = ({ modus }: $Props) => {\n  const [files, setFiles] = useState<File[]>([]);\n\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      setFiles(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\".json\"}\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n      <Files>\n        {files &&\n          files.map((file: File, index: number) => (\n            <FileTile key={index} modus={modus} file={file} />\n          ))}\n      </Files>\n    </>\n  );\n};\n\nexport default ImportField;\n\ninterface $FileProps {\n  file: File;\n  modus: ImportModus;\n}\n\nconst FileTile = ({ file, modus }: $FileProps) => {\n  const [succCount, setSucc] = useState<number>(0);\n  const [maxCount, setMax] = useState<number>(0);\n\n  const scanImportFile = async (json: any, fileName: string) => {\n    console.log(\"Start 5eTools Json interpreting \" + fileName);\n\n    let listOfNew: { tableName: string; newEntitiy: IEntity }[] = [];\n\n    let newMax: number = 0;\n    for (const [key, value] of Object.entries(json)) {\n      if (Array.isArray(value)) {\n        newMax += value.length;\n        if (modus === ImportModus.NORMAL) {\n          // eslint-disable-next-line\n          value.forEach((obj: any) => listOfNew.push({ tableName: key, newEntitiy: obj }));\n        }\n      }\n    }\n    setMax(newMax);\n\n    while (listOfNew.length > 0) {\n      let newTableName = listOfNew[0].tableName;\n      let bulkList: IEntity[] = listOfNew\n        .filter((newEntitiy) => newEntitiy.tableName === newTableName)\n        .map((entity: { tableName: string; newEntitiy: IEntity }) => {\n          return entity.newEntitiy;\n        });\n      await saveNewFromList(newTableName, bulkList, fileName);\n      listOfNew = listOfNew.filter((entity) => entity.tableName !== newTableName);\n      setSucc(newMax - listOfNew.length);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Start Filereader \" + file.name);\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        let json = JSON.parse(content.toString());\n        console.log(\"Json loaded from \" + file.name);\n        scanImportFile(json, file.name);\n      }\n    };\n    fileReader.readAsText(file);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file]);\n\n  return (\n    <FileWrapper>\n      {file.name} {succCount}/{maxCount}\n      <ProgressBar\n        completed={Math.round((succCount / maxCount) * 100)}\n        isLabelVisible={false}\n        bgcolor={\"#F55C5C\"}\n        height={\"5px\"}\n        margin={\"5px\"}\n      />\n    </FileWrapper>\n  );\n};\n\nconst Files = styled.div`\n  flex: 1 1 100%;\n`;\n\nconst FileWrapper = styled.div`\n  width: clac(100% - 20px);\n  height: 50px;\n  padding: 10px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport StringField from \"../form_elements/StringField\";\n\nconst DiscordOptions = () => {\n  const [webhook, setWebhook] = useState<string>(localStorage.getItem(\"webhook\") + \"\");\n  const [webhookUser, setWebhookUser] = useState<string>(localStorage.getItem(\"webhook_user\") + \"\");\n\n  useEffect(() => {\n    if (webhook !== localStorage.getItem(\"webhook\")) localStorage.setItem(\"webhook\", webhook);\n  }, [webhook]);\n\n  useEffect(() => {\n    if (webhookUser !== localStorage.getItem(\"webhook_user\"))\n      localStorage.setItem(\"webhook_user\", webhookUser);\n  }, [webhookUser]);\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Discord Webhook</SelectionTitle>\n        <StringField value={webhookUser} label=\"PlayerName\" onChange={setWebhookUser} />\n        <StringField value={webhook} label=\"Webhook\" onChange={setWebhook} />\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default DiscordOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { exportAll } from \"../../services/OptionService\";\nimport { deleteAll, reciveCount } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport P2PReciver from \"../p2p/P2PReciver\";\n\nimport { isTalent } from \"../../data/Talent\";\n\nimport { faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../general_elements/TabBar\";\nimport IconButton from \"../form_elements/IconButton\";\nimport TalentTile from \"../entities/talents/TalentTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport TalentsOptions from \"./TalentsOptions\";\nimport ImportField, { ImportModus } from \"../form_elements/ImportField\";\nimport DiscordOptions from \"./DiscordOptions\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [talentAmount, setTalentAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"talents\", (result: number) => {\n        setTalentAmount(result);\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isTalent(entity)) {\n      return <TalentTile key={index} talent={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  return (\n    <>\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <ImportField modus={ImportModus.NORMAL} />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton icon={faFileExport} onClick={() => exportAll(\"SkirmishTome_all.json\")} />\n        </SectionRow>\n      </OptionSection>\n      <TabBar\n        children={[\"General\", \"Talents\", \"Discord\", \"Receive\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Talents\" && (\n        <TalentsOptions amount={talentAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Discord\" && <DiscordOptions />}\n      {activeTab === \"Receive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {/* {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })} */}\n    </>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  style?: any;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, style, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled} style={style}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n"],"sourceRoot":""}