{"version":3,"sources":["components/general_elements/SmallFormatedText.tsx","components/entities/talents/TalentTile.tsx","../node_modules/peerjs/dist sync","services/OptionService.tsx","components/p2p/P2PReciver.tsx","components/options/GeneralOptions.tsx","components/options/TalentsOptions.tsx","components/form_elements/FileField.tsx","components/form_elements/ImportField.tsx","components/options/DiscordOptions.tsx","services/CsvService.tsx","components/options/SpellsOptions.tsx","components/options/RacesOptions.tsx","components/options/Options.tsx","database/SkirmishDB.tsx","services/DatabaseService.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","hooks/webhookHook.tsx","services/DiscordService.tsx","components/form_elements/StringField.tsx","data/SpellValues.tsx","services/DiceService.tsx","components/general_elements/LinkCheck.tsx","data/Talent.tsx","data/Spell.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","data/Race.tsx","components/general_elements/TabBar.tsx"],"names":["SmallFormatedText","text","webhook","useWebhook","useState","formatedText","setFormatedText","history","useHistory","cut","str","cutStart","cutEnd","substr","rollDiscord","useCallback","command","includes","rollCommand","result","undefined","sendMessage","newCommand","value","parseInt","replaceAll","krit","fail","rollString","formatLink","parts","split","formattedParts","forEach","part","index","codePart","linkParts","linkEntity","push","TextPart","key","DiscordPart","onClick","LinkCheck","type","name","link","Link","formatTable","textPart","table","tableRows","isHead","map","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","useEffect","FormatedTextContainer","styled","div","span","theme","tile","backgroundColorLink","color","th","input","backgroundColor","td","TalentTile","talent","Tile","to","id","$isflaw","isFlaw","Cost","cost","Name","PropWrapper","Prop","stress","prerequisite","props","boxShadow","main","highlight","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","scanImportFileTest","json","fileName","callback","a","promList","Array","isArray","obj","isTalent","saveNew","Promise","all","exportAllFromTable","tableName","filename","reciveAll","entity","document","createElement","download","href","encodeURIComponent","JSON","stringify","target","body","appendChild","click","removeChild","exportAll","reciveAllPromise","spells","P2PReciver","changeData","reload","peerId","setId","loading","isLoading","error","setError","state","setState","Peer","host","secure","peer","conn","connect","on","data","console","log","Loading","StringField","label","onChange","Icon","icon","faExclamationCircle","TextButton","faCheck","FontAwesomeIcon","GeneralOptions","useTheme","setTheme","General","OptionSection","SelectionTitle","Button","darkTheme","lightTheme","localStorage","setItem","button","buttons","TalentsOptions","amount","triggerDeleteAll","send","setSend","OptionTab","SectionRow","SectionText","IconButton","faFileExport","faTrashAlt","faPaperPlane","P2PSender","mode","ImportModus","FileField","accept","isMulti","transform","Field","LabelText","Input","files","multiple","ImportField","modus","setFiles","Files","faFileImport","file","fileList","from","changeFile","FileTile","succCount","setSucc","maxCount","setMax","scanImportFile","listOfNew","newMax","length","NORMAL","newEntitiy","Object","entries","newTableName","bulkList","filter","saveNewFromList","fileReader","FileReader","onloadend","content","parse","toString","readAsText","FileWrapper","completed","Math","round","isLabelVisible","bgcolor","height","margin","DiscordOptions","getItem","setWebhook","webhookUser","setWebhookUser","saveInDB","tablename","listOfIEntity","SpellsOptions","RacesOptions","Options","activeTab","setTab","talentAmount","setTalentAmount","spellAmount","setSpellAmount","raceAmount","setRaceAmount","isReload","setData","readString","usePapaParse","useCSVDownloader","CSVDownloader","Type","csvBackup","setBackup","handleSpellCsvUpload","worker","complete","results","csv","listOfSpells","slice","newSpell","Spell","SpellSource","find","SpellCastTime","SpellRite","SpellDuration","SpellRange","SpellSchool","SpellScalingEffect","SpellTarget","SpellAoeRadius","SpellDamage","SpellDirectEffects","NONE","SpellLevel","SpellProjectileType","SpellProjectileNumber","SpellDamageType","SpellTargetingType","SpellLosRange","SpellDrainType","SpellPureDamage","SpellSize","SpellHp","toLowerCase","drain","calcDrain","scanImportedSpellCsv","reciveCount","backup","concat","spell","makeCsv","Talent","Race","race","deleteAll","returnTile","TabBar","children","tab","OptionSectionLarge","Date","getFullYear","getMonth","bom","config","delimiter","SkirmishDB","randomTables","talents","races","version","stores","Dexie","updateWithCallback","db","open","then","update","finally","close","put","prom","entities","refinedEntities","bulkPut","remove","delete","toArray","array","count","reciveCountPromise","recivePromiseByAttribute","where","equalsIgnoreCase","recivePromise","get","recivePromiseByAttributeCount","equals","applyFilters","filters","test","fieldName","hasTag","fieldPart","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAllFilteredPromise","reciveAttributeSelectionPromise","attribute","orderBy","uniqueKeys","createNewWithId","clear","exportFilteredFromTable","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","floatLeft","disabled","style","SimpleButton","left","DisabledSimpleButton","hoverColor","hook","avatar","request","XMLHttpRequest","setRequestHeader","params","username","avatar_url","sendEmbedMessage","formatDiscordText","placeholder","ACID","NECROTIC","FROST","FIRE","LIGHTNING","RADIANT","ARCANE","POISON","trim","getAll","HALFMAGICSTRUCTUREHP","HALFMAGICSTRUCTUREDOUBLEHP","HALFMAGICSTRUCTURETRIPPLEHP","MAGICSTRUCTUREHP","MAGICSTRUCTUREDOUBLEHP","DOUBLEMAGICESTRUCTUREHP","MAGICHP","MAGICDOUBLEHP","MAGICTRIPPLEHP","MAGICQUADRUPLEHP","HALFMAGICSQUARED","MAGICSQUARED","DOUBLEMAGICSQUARED","TRIPPLEMAGICSQUARED","HALFMAGICQUBED","MAGICQUBED","DOUBLEMAGICQUBED","TRIPPLEMAGICQUBED","DIFFICULTTERRAIN","LIFELEECH","COMMUNICATE","CONFUSIONSTUNBLIND","HEX","IMPAIRMOVEMENTVISION","MOVEFEARROOT","DOT","INCAPACITATE","SPHERE","KNOCKDOWN","WALLBARRIERCONSTRUCTSUMMON","TELEPORT","HEAL","BUFFILLUSIONSHIELD","CHARMCONTROLINFLUENCE","TRANSFORM","MYSTBRADIUS","MYSTBPROJECTILES","PROJECTILERADIUSPERVARIABLE","PROJECTILEPERVARIABLE","PROJECTILEPERTHREEMAGIC","PROJECTILEPERTWOMAGIC","PROJECTILERADIUSPERTWOMAGIC","PROJECTILERADIUSPERTHREEMAGIC","PLUSPROJECTILEPERTWOMAGIC","PLUSPROJECTILEPERFOURMAGIC","PLUSPROJECTILEPERTHREEMAGIC","MYSTBRADIUSEFFECT","PLUSHALFMYSTBRADIUSEFFECT","PLUSHALFMYSTBRADIUS","PLUSMYSTBRADIUS","PLUSMYSTBRADIUSEFFECT","COMBINED","PHYSICAL","STUN","PURE","FATIGUE","AGONY","ONEPRMAGIC","TWOPRMAGIC","THREEPRMAGIC","FOURPRMAGIC","FIVEPRMAGIC","ONE","TWO","THREE","FOUR","FIVE","ONEDFOUR","ONEDSIX","ONEDEIGHT","ONEDTEN","ONEDTWELVE","ONEDTWENTY","TWODFOUR","TWODSIX","TWODEIGHT","TWODTEN","TWODTWELVE","TWODTWENTY","THREEDFOUR","THREEDSIX","THREEDEIGHT","THREEDTEN","THREEDTWELVE","FOURDFOUR","FOURDSIX","FOURDEIGHT","FOURDTEN","FIVEDFOUR","FIVEDSIX","FIVEDEIGHT","SIXDFOUR","MYSTB","MYSTBDOUBLE","QUARTERMAGIC","HALFMAGIC","MAGIC","COLLETERAL","ONEMETER","TWOMETER","THREEMETER","FOURMETER","FIVEMETER","SIXMETER","SEVENMETER","EIGHTMETER","NINEMETER","TENMETER","HALFMAGICMETER","MAGICMETER","DOUBLEMAGICMETER","VARIABLE","ONEMAGIC","TWOMAGIC","THREEMAGIC","FOURMAGIC","FIVEMAGIC","SCALING","BALL","MISSILE","BOLT","RAY","SPRAY","LASSO","DIRECTTARGET","AURATARGETING","INDIRECTTARGETING","SIXMINUSMYSTBROUNDS","NINETHREE","NINETHREECHANNEL","SEVENTHREE","FIVETHREE","DRAINCHENNEL","DRAINTHREE","MAGIFAITHHOURS","getAllPhysical","getAllStun","SIX","SEVEN","EIGHT","NINE","EARTH","AIR","DIVINE","DEMONIC","DRUIDIC","PSYCHIC","TOUCH","SONIC","RADIUS90","RADIUS360","LOSAURA","LOSMANIPULATE","LOSPOINT","VERBAL","SOMATIC","MENTAL","RITUAL","SINGLE","DAOE","MULTI","AOE","CASTER","TARGET","LINE","CONCENTRATION","INSTANTANEOUS","PERMANENT","FIXEDTICKS","FIXEDROUNDS","FIXEDHOURS","CHANNEL","TRANSMUTATION","EVOCATION","FORTIFICATION","ILLUSION","CONJURATION","NECROMANCY","ENCHANTMENT","commands","newCommands","rolls","fullCommand","commandSplits","multiplier","startsWith","com","i","newRoll","rollDie","size","max","random","setLoading","entitiyFound","setEntity","newType","catch","formatIcon","TalentCategory","category","effect","trigger","triggerFrequency","ticks","this","magical","arg","nameCheck","costCheck","isFlawCheck","prerequisiteCheck","effectCheck","typeCheck","stressCheck","triggerCheck","triggerFrequencyCheck","ticksCheck","source","castTime","rite","duration","durationText","range","school","mastery","resist","masteryDrain","scalingEffect","spellTarget","aoeRadius","damage","directEffects","level","projectileType","projectileNumber","damageType","targetingType","losRange","drainType","pureDamage","hp","chargeable","needsMaterial","setName","setPeer","brokerId","min","password","characters","floor","generateBrokerId","newPeer","errorData","disconnected","destroyed","reconnect","abilityModifier","stamina","flaws","Bar","child","Tab","isActive"],"mappings":"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","file":"static/js/9.d14b8035.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { sendMessage } from \"../../services/DiscordService\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst SmallFormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20(`\" + (result - value) + \"`)\" + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <Link onClick={() => history.push(link)}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </Link>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <FormatedTextContainer>{formatedText}</FormatedTextContainer>;\n};\n\nexport default SmallFormatedText;\n\nconst FormatedTextContainer = styled.div`\n  padding: 5px;\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Talent from \"../../../data/Talent\";\nimport SmallFormatedText from \"../../general_elements/SmallFormatedText\";\n\ninterface $Props {\n  talent: Talent;\n}\n\nconst TalentTile = ({ talent }: $Props) => {\n  return (\n    <Tile to={\"/talent-detail/id/\" + talent.id} $isflaw={talent.isFlaw}>\n      <Cost>\n        <b>{talent.cost}</b>\n      </Cost>\n\n      <Name>\n        <b>{talent.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <Prop>{talent.type ? talent.stress : \"Passive\"}</Prop>\n        <SmallFormatedText text={talent.prerequisite} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default TalentTile;\n\ntype type = {\n  $isflaw: boolean;\n};\n\nconst Tile = styled(Link)<type>`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  ${(props) => {\n    if (props.$isflaw) {\n      return `background-color: ${props.theme.input.backgroundColor};`;\n    } else {\n      return `background-color: ${props.theme.tile.backgroundColor};`;\n    }\n  }}\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n`;\n\nconst Cost = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: white;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 105;","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Talent, { isTalent } from \"../data/Talent\";\n\nexport const scanImportFileTest = async (\n  json: any,\n  fileName: string,\n  callback: () => void\n) => {\n  let promList: Promise<any>[] = [];\n\n  if (!Array.isArray(json)) {\n    json = [json];\n  }\n\n  json.forEach((obj: any) => {\n    if (isTalent(obj)) {\n      promList.push(saveNew(\"talents\", obj as Talent, fileName));\n    }\n  });\n  await Promise.all(promList);\n  callback();\n};\n\n// const scanForFormatErrors = (obj: any) => {\n//   const itemFormatErrors = findItemFromattError(obj);\n//   let itemFailCount: number = 0;\n//   for (const value of Object.entries(itemFormatErrors)) {\n//     if (!value[1]) itemFailCount++;\n//   }\n//   const gearFormatErrors = findGearFormattError(obj);\n//   let gearFailCount: number = 0;\n//   for (const value of Object.entries(gearFormatErrors)) {\n//     if (!value[1]) gearFailCount++;\n//   }\n//   const spellFormatErrors = findSpellFormattError(obj);\n//   let spellFailCount: number = 0;\n//   for (const value of Object.entries(spellFormatErrors)) {\n//     if (!value[1]) spellFailCount++;\n//   }\n//   const monsterFormatErrors = findMonsterFormattError(obj);\n//   let monsterFailCount: number = 0;\n//   for (const value of Object.entries(monsterFormatErrors)) {\n//     if (!value[1]) monsterFailCount++;\n//   }\n//   const raceFormatErrors = findRaceFormattError(obj);\n//   let raceFailCount: number = 0;\n//   for (const value of Object.entries(raceFormatErrors)) {\n//     if (!value[1]) raceFailCount++;\n//   }\n//   const subraceFormatErrors = findSubraceFormattError(obj);\n//   let subraceFailCount: number = 0;\n//   for (const value of Object.entries(subraceFormatErrors)) {\n//     if (!value[1]) subraceFailCount++;\n//   }\n//   const classFormatErrors = findClassFormattError(obj);\n//   let classFailCount: number = 0;\n//   for (const value of Object.entries(classFormatErrors)) {\n//     if (!value[1]) classFailCount++;\n//   }\n//   const subclassFormatErrors = formattSubclassFromattError(obj);\n//   let subclassFailCount: number = 0;\n//   for (const value of Object.entries(subclassFormatErrors)) {\n//     if (!value[1]) subclassFailCount++;\n//   }\n//   const selectionFormatErrors = findSelectionFormattError(obj);\n//   let selectionFailCount: number = 0;\n//   for (const value of Object.entries(selectionFormatErrors)) {\n//     if (!value[1]) selectionFailCount++;\n//   }\n\n//   let errors: any[] = [];\n//   if (\n//     itemFailCount <= gearFailCount &&\n//     itemFailCount <= spellFailCount &&\n//     itemFailCount <= raceFailCount &&\n//     itemFailCount <= subraceFailCount &&\n//     itemFailCount <= classFailCount &&\n//     itemFailCount <= subclassFailCount &&\n//     itemFailCount <= selectionFailCount &&\n//     itemFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ item: itemFormatErrors });\n//   }\n//   if (\n//     gearFailCount <= itemFailCount &&\n//     gearFailCount <= spellFailCount &&\n//     gearFailCount <= raceFailCount &&\n//     gearFailCount <= subraceFailCount &&\n//     gearFailCount <= classFailCount &&\n//     gearFailCount <= subclassFailCount &&\n//     gearFailCount <= selectionFailCount &&\n//     gearFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ gear: gearFormatErrors });\n//   }\n//   if (\n//     spellFailCount <= itemFailCount &&\n//     spellFailCount <= gearFailCount &&\n//     spellFailCount <= raceFailCount &&\n//     spellFailCount <= subraceFailCount &&\n//     spellFailCount <= classFailCount &&\n//     spellFailCount <= subclassFailCount &&\n//     spellFailCount <= selectionFailCount &&\n//     spellFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ spell: spellFormatErrors });\n//   }\n//   if (\n//     monsterFailCount <= itemFailCount &&\n//     monsterFailCount <= gearFailCount &&\n//     monsterFailCount <= raceFailCount &&\n//     monsterFailCount <= subraceFailCount &&\n//     monsterFailCount <= classFailCount &&\n//     monsterFailCount <= subclassFailCount &&\n//     monsterFailCount <= selectionFailCount &&\n//     monsterFailCount <= spellFailCount\n//   ) {\n//     errors.push({ monster: monsterFormatErrors });\n//   }\n//   if (\n//     raceFailCount <= itemFailCount &&\n//     raceFailCount <= gearFailCount &&\n//     raceFailCount <= monsterFailCount &&\n//     raceFailCount <= subraceFailCount &&\n//     raceFailCount <= classFailCount &&\n//     raceFailCount <= subclassFailCount &&\n//     raceFailCount <= selectionFailCount &&\n//     raceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ race: raceFormatErrors });\n//   }\n//   if (\n//     subraceFailCount <= itemFailCount &&\n//     subraceFailCount <= gearFailCount &&\n//     subraceFailCount <= monsterFailCount &&\n//     subraceFailCount <= raceFailCount &&\n//     subraceFailCount <= classFailCount &&\n//     subraceFailCount <= subclassFailCount &&\n//     subraceFailCount <= selectionFailCount &&\n//     subraceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subrace: subraceFormatErrors });\n//   }\n//   if (\n//     classFailCount <= itemFailCount &&\n//     classFailCount <= gearFailCount &&\n//     classFailCount <= monsterFailCount &&\n//     classFailCount <= raceFailCount &&\n//     classFailCount <= subraceFailCount &&\n//     classFailCount <= subclassFailCount &&\n//     classFailCount <= selectionFailCount &&\n//     classFailCount <= spellFailCount\n//   ) {\n//     errors.push({ class: classFormatErrors });\n//   }\n//   if (\n//     subclassFailCount <= itemFailCount &&\n//     subclassFailCount <= gearFailCount &&\n//     subclassFailCount <= monsterFailCount &&\n//     subclassFailCount <= raceFailCount &&\n//     subclassFailCount <= subraceFailCount &&\n//     subclassFailCount <= classFailCount &&\n//     subclassFailCount <= selectionFailCount &&\n//     subclassFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subclass: subclassFormatErrors });\n//   }\n//   if (\n//     selectionFailCount <= itemFailCount &&\n//     selectionFailCount <= gearFailCount &&\n//     selectionFailCount <= monsterFailCount &&\n//     selectionFailCount <= raceFailCount &&\n//     selectionFailCount <= subraceFailCount &&\n//     selectionFailCount <= classFailCount &&\n//     selectionFailCount <= subclassFailCount &&\n//     selectionFailCount <= spellFailCount\n//   ) {\n//     errors.push({ selection: selectionFormatErrors });\n//   }\n//   return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n// };\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let entity = { [tableName]: all };\n    let contentType = \"application/json;charset=utf-8;\";\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href =\n      \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(entity));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  const spells = await reciveAllPromise(\"spells\");\n\n  let all: any = {\n    spells: spells,\n  };\n\n  let contentType = \"application/json;charset=utf-8;\";\n\n  var a = document.createElement(\"a\");\n  a.download = filename;\n  a.href =\n    \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n  a.target = \"_blank\";\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../services/OptionService\";\nimport IEntity from \"../../data/IEntity\";\n\nimport {\n  faCheck,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thedndtome.com\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField\n        value={peerId}\n        label={\"ID to recive from\"}\n        onChange={(id) => setId(id)}\n      />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton\n            text={\"Accept\"}\n            icon={faCheck}\n            onClick={() => acceptData()}\n          />\n          <TextButton\n            text={\"Decline\"}\n            icon={faCheck}\n            onClick={() => declineData()}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../theme/Theme\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst TalentsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Talents?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"talents\", \"SkirmishTome_talents.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Talents?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"talents\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all talents`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"talents\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default TalentsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, accept, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} accept={accept} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport FileField from \"./FileField\";\nimport IEntity from \"../../data/IEntity\";\nimport { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport { saveNewFromList } from \"../../services/DatabaseService\";\n\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nexport enum ImportModus {\n  NORMAL,\n}\n\ninterface $Props {\n  modus: ImportModus;\n}\n\nconst ImportField = ({ modus }: $Props) => {\n  const [files, setFiles] = useState<File[]>([]);\n\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      setFiles(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\".json\"}\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n      <Files>\n        {files &&\n          files.map((file: File, index: number) => (\n            <FileTile key={index} modus={modus} file={file} />\n          ))}\n      </Files>\n    </>\n  );\n};\n\nexport default ImportField;\n\ninterface $FileProps {\n  file: File;\n  modus: ImportModus;\n}\n\nconst FileTile = ({ file, modus }: $FileProps) => {\n  const [succCount, setSucc] = useState<number>(0);\n  const [maxCount, setMax] = useState<number>(0);\n\n  const scanImportFile = async (json: any, fileName: string) => {\n    console.log(\"Start 5eTools Json interpreting \" + fileName);\n\n    let listOfNew: { tableName: string; newEntitiy: IEntity }[] = [];\n\n    let newMax: number = 0;\n    for (const [key, value] of Object.entries(json)) {\n      if (Array.isArray(value)) {\n        newMax += value.length;\n        if (modus === ImportModus.NORMAL) {\n          // eslint-disable-next-line\n          value.forEach((obj: any) => listOfNew.push({ tableName: key, newEntitiy: obj }));\n        }\n      }\n    }\n    setMax(newMax);\n\n    while (listOfNew.length > 0) {\n      let newTableName = listOfNew[0].tableName;\n      let bulkList: IEntity[] = listOfNew\n        .filter((newEntitiy) => newEntitiy.tableName === newTableName)\n        .map((entity: { tableName: string; newEntitiy: IEntity }) => {\n          return entity.newEntitiy;\n        });\n      await saveNewFromList(newTableName, bulkList, fileName);\n      listOfNew = listOfNew.filter((entity) => entity.tableName !== newTableName);\n      setSucc(newMax - listOfNew.length);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Start Filereader \" + file.name);\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        let json = JSON.parse(content.toString());\n        console.log(\"Json loaded from \" + file.name);\n        scanImportFile(json, file.name);\n      }\n    };\n    fileReader.readAsText(file);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file]);\n\n  return (\n    <FileWrapper>\n      {file.name} {succCount}/{maxCount}\n      <ProgressBar\n        completed={Math.round((succCount / maxCount) * 100)}\n        isLabelVisible={false}\n        bgcolor={\"#F55C5C\"}\n        height={\"5px\"}\n        margin={\"5px\"}\n      />\n    </FileWrapper>\n  );\n};\n\nconst Files = styled.div`\n  flex: 1 1 100%;\n`;\n\nconst FileWrapper = styled.div`\n  width: clac(100% - 20px);\n  height: 50px;\n  padding: 10px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport StringField from \"../form_elements/StringField\";\n\nconst DiscordOptions = () => {\n  const [webhook, setWebhook] = useState<string>(localStorage.getItem(\"webhook\") + \"\");\n  const [webhookUser, setWebhookUser] = useState<string>(localStorage.getItem(\"webhook_user\") + \"\");\n\n  useEffect(() => {\n    if (webhook !== localStorage.getItem(\"webhook\")) localStorage.setItem(\"webhook\", webhook);\n  }, [webhook]);\n\n  useEffect(() => {\n    if (webhookUser !== localStorage.getItem(\"webhook_user\"))\n      localStorage.setItem(\"webhook_user\", webhookUser);\n  }, [webhookUser]);\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Discord Webhook</SelectionTitle>\n        <StringField value={webhookUser} label=\"PlayerName\" onChange={setWebhookUser} />\n        <StringField value={webhook} label=\"Webhook\" onChange={setWebhook} />\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default DiscordOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import IEntity from \"../data/IEntity\";\nimport Spell from \"../data/Spell\";\nimport {\n  SpellSource,\n  SpellRite,\n  SpellDuration,\n  SpellRange,\n  SpellSchool,\n  SpellTarget,\n  SpellDrainType,\n  SpellLevel,\n  SpellCastTime,\n  SpellDamage,\n  SpellScalingEffect,\n  SpellAoeRadius,\n  SpellDirectEffects,\n  SpellProjectileType,\n  SpellProjectileNumber,\n  SpellDamageType,\n  SpellTargetingType,\n  SpellLosRange,\n  SpellSize,\n  SpellPureDamage,\n  SpellHp,\n} from \"../data/SpellValues\";\nimport { saveNewFromList } from \"./DatabaseService\";\n\nexport const scanImportedSpellCsv = (csv: Array<any>, filename: string) => {\n  let listOfSpells: Array<Spell> = [];\n  console.log(\"Raw\", csv);\n  csv.slice(1).forEach((row: Array<string>) => {\n    let newSpell = new Spell(\n      0,\n      row[0],\n      SpellSource.find(row[1]),\n      SpellCastTime.find(row[24]),\n      SpellRite.find(row[4]),\n      SpellDuration.find(row[23]),\n      \"\",\n      SpellRange.find(row[7]),\n      SpellSchool.find(row[25]),\n      row[27],\n      row[28],\n      row[31],\n      0,\n      +row[29],\n      SpellScalingEffect.find(row[14]),\n      SpellTarget.find(row[3]),\n      SpellAoeRadius.find(row[9]),\n      [\n        SpellDamage.find(row[13]),\n        SpellDamage.find(row[14]),\n        SpellDamage.find(row[15]),\n      ],\n      SpellDirectEffects.NONE,\n      SpellLevel.find(row[2]),\n      SpellProjectileType.find(row[10]),\n      SpellProjectileNumber.find(row[11]),\n      SpellDamageType.find(row[17]),\n      SpellTargetingType.find(row[16]),\n      SpellLosRange.find(row[8]),\n      SpellDrainType.find(row[22]),\n      SpellPureDamage.find(row[18]),\n      SpellSize.find(row[21]),\n      SpellHp.find(row[20]),\n      row[30]?.toLowerCase() === \"yes\" ? true : false,\n      row[6]?.toLowerCase() === \"yes\" ? true : false\n    );\n    newSpell.drain = Spell.calcDrain(newSpell);\n    listOfSpells.push(newSpell);\n  });\n  console.log(\"Processed Spells\", listOfSpells);\n  saveInDB(\"spells\", listOfSpells, filename);\n};\n\nexport const saveInDB = async (\n  tablename: string,\n  listOfIEntity: Array<IEntity>,\n  filename: string\n) => {\n  let listOfNew = [...listOfIEntity];\n  await saveNewFromList(tablename, listOfNew, filename);\n  console.log(\"Done saving\");\n};\n\n// export const parseRowEntry = (entry: string): number => {\n//   return parseInt(\n//     entry.replaceAll(\"€\", \"\").trim().replaceAll(\".\", \"\").replaceAll(\",\", \"\")\n//   );\n// };\n\n// export const updateListsWith = (bookeeEntryJson: BookeeEntry[]) => {\n//   bookeeEntryJson.forEach((entry: BookeeEntry) => {\n//     reciveAllByAttributes(\n//       \"[dateDay+dateMonth+dateYear]\",\n//       [[entry.dateDay, entry.dateMonth, entry.dateYear]],\n//       (data: any[]) => {\n//         let isPresent = false;\n//         data.forEach((dat: any) => {\n//           const compDat = { ...dat };\n//           delete compDat[\"id\"];\n//           if (JSON.stringify(compDat) === JSON.stringify(entry))\n//             isPresent = true;\n//         });\n//         if (!isPresent) {\n//           console.log(\n//             `New Entry on ${\n//               (entry.dateDay, entry.dateMonth, entry.dateYear)\n//             } will be saved.`\n//           );\n//           saveNew(entry);\n//         }\n//       }\n//     );\n//   });\n// };\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst SpellsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Spells?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"spells\", \"SkirmishTome_Spells.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Spells?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"spells\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all Spells`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"Spells\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SpellsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst RacesOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Races?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"races\", \"SkirmishTome_Races.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Races?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"races\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all Races`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"Races\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default RacesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { exportAll } from \"../../services/OptionService\";\nimport {\n  deleteAll,\n  reciveAll,\n  reciveCount,\n} from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport P2PReciver from \"../p2p/P2PReciver\";\n\nimport Talent, { isTalent } from \"../../data/Talent\";\n\nimport { faFileExport, faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../general_elements/TabBar\";\nimport IconButton from \"../form_elements/IconButton\";\nimport TalentTile from \"../entities/talents/TalentTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport TalentsOptions from \"./TalentsOptions\";\nimport ImportField, { ImportModus } from \"../form_elements/ImportField\";\nimport DiscordOptions from \"./DiscordOptions\";\nimport { useCSVDownloader, usePapaParse } from \"react-papaparse\";\nimport FileField from \"../form_elements/FileField\";\nimport { scanImportedSpellCsv } from \"../../services/CsvService\";\nimport Spell from \"../../data/Spell\";\nimport Race from \"../../data/Race\";\nimport SpellsOptions from \"./SpellsOptions\";\nimport RacesOptions from \"./RacesOptions\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [talentAmount, setTalentAmount] = useState<number>(0);\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  const { readString } = usePapaParse();\n  const { CSVDownloader, Type } = useCSVDownloader();\n  const [csvBackup, setBackup] = useState<any>();\n\n  const handleSpellCsvUpload = (files: any) => {\n    const file: File = files[0];\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        readString(content.toString(), {\n          worker: true,\n          complete: (results) => {\n            console.log(\"Csv loaded from \" + file.name);\n            const csv: Array<any> = results.data;\n            console.log(csv);\n            scanImportedSpellCsv(csv, file.name);\n            console.log(\"---------\");\n          },\n        });\n      }\n    };\n    fileReader.readAsText(file);\n  };\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"talents\", (result: number) => {\n        setTalentAmount(result);\n      });\n      let backup: any[] = [];\n      reciveAll(\"spells\", (result: any[]) => {\n        setSpellAmount(result.length);\n        backup.push([\"Spell\"].concat(Object.keys(new Spell())));\n        result.forEach((spell: Spell) => {\n          backup.push([\"\"].concat(Spell.makeCsv(spell)));\n        });\n      });\n      reciveAll(\"talents\", (result: any[]) => {\n        setTalentAmount(result.length);\n        backup.push([\"Talent\"].concat(Object.keys(new Talent())));\n        result.forEach((talent: Talent) => {\n          backup.push([\"\"].concat(Talent.makeCsv(talent)));\n        });\n      });\n      reciveAll(\"races\", (result: any[]) => {\n        setRaceAmount(result.length);\n        backup.push([\"Race\"].concat(Object.keys(new Race())));\n        result.forEach((race: Race) => {\n          backup.push([\"\"].concat(Race.makeCsv(race)));\n        });\n      });\n      setBackup(backup);\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isTalent(entity)) {\n      return <TalentTile key={index} talent={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  return (\n    <>\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <ImportField modus={ImportModus.NORMAL} />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAll(\"SkirmishTome_all.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <TabBar\n        children={[\n          \"General\",\n          \"Spells\",\n          \"Races\",\n          \"Talents\",\n          \"Discord\",\n          \"Receive\",\n          \"CSV Imports\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Spells\" && (\n        <SpellsOptions\n          amount={spellAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Races\" && (\n        <RacesOptions amount={raceAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Talents\" && (\n        <TalentsOptions\n          amount={talentAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Discord\" && <DiscordOptions />}\n      {activeTab === \"Receive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {activeTab === \"CSV Imports\" && (\n        <OptionTab>\n          <OptionSection>\n            <CSVDownloader\n              type={Type.Button}\n              filename={\n                \"CsvBackup_\" +\n                new Date().getFullYear() +\n                \".\" +\n                (new Date().getMonth() + 1)\n              }\n              bom={true}\n              config={{\n                delimiter: \";\",\n              }}\n              data={csvBackup}\n            >\n              Download\n            </CSVDownloader>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import Spell CSV</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              accept={\".csv\"}\n              icon={faFileImport}\n              onChange={(file) => handleSpellCsvUpload(file)}\n            />\n          </OptionSection>\n        </OptionTab>\n      )}\n      {/* {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })} */}\n    </>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-align: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import Dexie from \"dexie\";\nimport Race from \"../data/Race\";\nimport RandomTable from \"../data/RandomTable\";\nimport Spell from \"../data/Spell\";\nimport Talent from \"../data/Talent\";\n\nexport class SkirmishDB extends Dexie {\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  talents: Dexie.Table<Talent, number>;\n  races: Dexie.Table<Race, number>;\n  spells: Dexie.Table<Spell, number>;\n\n  constructor() {\n    super(\"SkirmishTomeDB\");\n    this.version(1).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(2).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(3).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery,resist, drain\",\n    });\n    this.version(4).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n    });\n\n    this.talents = this.table(\"talents\");\n    this.spells = this.table(\"spells\");\n    this.races = this.table(\"races\");\n    this.randomTables = this.table(\"randomTables\");\n  }\n}\n","import { SkirmishDB } from \"../database/SkirmishDB\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\n// export const saveNewFromList = (tableName: string, entities: BookeeEntry[]) => {\n//   const db = new BookeeDB();\n//   db.open()\n//     .then(async function () {\n//       const refinedEntities = (entities as BookeeEntry[]).map(\n//         (entity: BookeeEntry) => {\n//           delete entity[\"id\"];\n//           return entity;\n//         }\n//       );\n//       const prom = await db.table(tableName).bulkPut(refinedEntities);\n//       return prom;\n//     })\n//     .finally(function () {\n//       db.close();\n//     });\n// };\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new SkirmishDB();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new SkirmishDB();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  style?: any;\n  onClick?: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, style, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick} style={style}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton style={style}>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  style?: any;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, style, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled} style={style}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","export function useWebhook(): { hook: string; name: string } | undefined {\n  if (localStorage.getItem(\"webhook\") !== null && localStorage.getItem(\"webhook\") !== \"\") {\n    let name = \"SkirmishTome\";\n    if (localStorage.getItem(\"webhook_user\") !== null)\n      name = localStorage.getItem(\"webhook_user\") + \"\";\n    return { hook: localStorage.getItem(\"webhook\") + \"\", name: name };\n  } else return undefined;\n}\n","export const sendMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  content: string,\n  avatar?: string\n) => {\n  if (webhook !== undefined) {\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    let params = {\n      username: webhook.name !== \"\" ? webhook.name : \"SkirmishTome\",\n      avatar_url: avatar !== undefined ? avatar : \"\",\n      content: content,\n    };\n    request.send(JSON.stringify(params));\n  }\n};\n\nexport const sendEmbedMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  params: string\n) => {\n  if (webhook !== undefined) {\n    console.log(params);\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.send(params);\n  }\n};\n\nexport const formatDiscordText = (text: string): string => {\n  if (text.includes(\"[[\")) {\n    return text.replaceAll(\"[[\", \"*\").replaceAll(\"]]\", \"*\");\n  } else {\n    return text;\n  }\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","export interface StringPair {\n  label: string;\n  drain: number;\n}\nexport interface NumberPair {\n  label: number;\n  drain: number;\n}\n\n// export class Dummy {\n//   static readonly NONE: StringPair = { label: \"\", drain: 0,};\n//   static readonly DUMMY: StringPair = { label: , drain: 0 };\n\n//   private constructor(\n//     private readonly label: string,\n//     public readonly drain: number\n//   ) {}\n\n//   static find = (label: string): StringPair => {\n//     switch (label?.toLowerCase().trim()) {\n//       case Dummy.DUMMY.label.toLowerCase():\n//         return Dummy.DUMMY;\n//       default:\n//         return Dummy.NONE;\n//     }\n//   };\n//   static getAll = (): string[] => {\n//     return [Dummy.DUMMY.label];\n//   };\n// }\n\nexport class SpellPureDamage {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ACID: StringPair = { label: \"Acid\", drain: 0 };\n  static readonly NECROTIC: StringPair = { label: \"Necrotic\", drain: 0 };\n  static readonly FROST: StringPair = { label: \"Frost\", drain: 0 };\n  static readonly FIRE: StringPair = { label: \"Fire\", drain: 0 };\n  static readonly LIGHTNING: StringPair = { label: \"Lightning\", drain: 0 };\n  static readonly RADIANT: StringPair = { label: \"Radiant\", drain: 0 };\n  static readonly ARCANE: StringPair = { label: \"Arcane\", drain: 1 };\n  static readonly POISON: StringPair = { label: \"Poison\", drain: 0 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellPureDamage.ACID.label.toLowerCase():\n        return SpellPureDamage.ACID;\n      case SpellPureDamage.NECROTIC.label.toLowerCase():\n        return SpellPureDamage.NECROTIC;\n      case SpellPureDamage.FROST.label.toLowerCase():\n        return SpellPureDamage.FROST;\n      case SpellPureDamage.FIRE.label.toLowerCase():\n        return SpellPureDamage.FIRE;\n      case SpellPureDamage.LIGHTNING.label.toLowerCase():\n        return SpellPureDamage.LIGHTNING;\n      case SpellPureDamage.RADIANT.label.toLowerCase():\n        return SpellPureDamage.RADIANT;\n      case SpellPureDamage.ARCANE.label.toLowerCase():\n        return SpellPureDamage.ARCANE;\n      case SpellPureDamage.POISON.label.toLowerCase():\n        return SpellPureDamage.POISON;\n      default:\n        return SpellPureDamage.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellPureDamage.NONE.label,\n      SpellPureDamage.ACID.label,\n      SpellPureDamage.NECROTIC.label,\n      SpellPureDamage.FROST.label,\n      SpellPureDamage.FIRE.label,\n      SpellPureDamage.LIGHTNING.label,\n      SpellPureDamage.RADIANT.label,\n      SpellPureDamage.ARCANE.label,\n      SpellPureDamage.POISON.label,\n    ];\n  };\n}\n\nexport class SpellHp {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSTRUCTUREHP: StringPair = {\n    label: \"1/2 Magic/Faith armor/structure rating and Magic/Faith *1 hit points\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSTRUCTUREDOUBLEHP: StringPair = {\n    label: \"1/2 Magic/Faith armor/structure rating and Magic/Faith *2 hit points\",\n    drain: 1,\n  };\n  static readonly HALFMAGICSTRUCTURETRIPPLEHP: StringPair = {\n    label: \"1/2 Magic/Faith armor/structure rating and Magic/Faith *3 hit points\",\n    drain: 2,\n  };\n  static readonly MAGICSTRUCTUREHP: StringPair = {\n    label: \"Magic/Faith *1 armor/structure rating and Magic/Faith *1 hit points\",\n    drain: 1,\n  };\n  static readonly MAGICSTRUCTUREDOUBLEHP: StringPair = {\n    label: \"Magic/Faith *1 armor/structure rating and Magic/Faith *2 hit points\",\n    drain: 3,\n  };\n  static readonly DOUBLEMAGICESTRUCTUREHP: StringPair = {\n    label: \"Magic/Faith *2 armor/structure rating and Magic/Faith hit points\",\n    drain: 4,\n  };\n  static readonly MAGICHP: StringPair = {\n    label: \"Magic/Faith *1 hit points\",\n    drain: 1,\n  };\n  static readonly MAGICDOUBLEHP: StringPair = {\n    label: \"Magic/Faith *2 hit points\",\n    drain: 2,\n  };\n  static readonly MAGICTRIPPLEHP: StringPair = {\n    label: \"Magic/Faith *3 hit points\",\n    drain: 3,\n  };\n  static readonly MAGICQUADRUPLEHP: StringPair = {\n    label: \"Magic/Faith *4 hit points\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellHp.HALFMAGICSTRUCTUREHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTUREHP;\n      case SpellHp.HALFMAGICSTRUCTUREDOUBLEHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTUREDOUBLEHP;\n      case SpellHp.HALFMAGICSTRUCTURETRIPPLEHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTURETRIPPLEHP;\n      case SpellHp.MAGICSTRUCTUREHP.label.toLowerCase():\n        return SpellHp.MAGICSTRUCTUREHP;\n      case SpellHp.MAGICSTRUCTUREDOUBLEHP.label.toLowerCase():\n        return SpellHp.MAGICSTRUCTUREDOUBLEHP;\n      case SpellHp.DOUBLEMAGICESTRUCTUREHP.label.toLowerCase():\n        return SpellHp.DOUBLEMAGICESTRUCTUREHP;\n      case SpellHp.MAGICHP.label.toLowerCase():\n        return SpellHp.MAGICHP;\n      case SpellHp.MAGICDOUBLEHP.label.toLowerCase():\n        return SpellHp.MAGICDOUBLEHP;\n      case SpellHp.MAGICTRIPPLEHP.label.toLowerCase():\n        return SpellHp.MAGICTRIPPLEHP;\n      case SpellHp.MAGICQUADRUPLEHP.label.toLowerCase():\n        return SpellHp.MAGICQUADRUPLEHP;\n      default:\n        return SpellHp.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellHp.NONE.label,\n      SpellHp.HALFMAGICSTRUCTUREHP.label,\n      SpellHp.HALFMAGICSTRUCTUREDOUBLEHP.label,\n      SpellHp.HALFMAGICSTRUCTURETRIPPLEHP.label,\n      SpellHp.MAGICSTRUCTUREHP.label,\n      SpellHp.MAGICSTRUCTUREDOUBLEHP.label,\n      SpellHp.DOUBLEMAGICESTRUCTUREHP.label,\n      SpellHp.MAGICHP.label,\n      SpellHp.MAGICDOUBLEHP.label,\n      SpellHp.MAGICTRIPPLEHP.label,\n      SpellHp.MAGICQUADRUPLEHP.label,\n    ];\n  };\n}\n\nexport class SpellSize {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSQUARED: StringPair = {\n    label: \"1/2 Magic/Faith M²\",\n    drain: 0,\n  };\n  static readonly MAGICSQUARED: StringPair = {\n    label: \"Magic/Faith M²\",\n    drain: 1,\n  };\n  static readonly DOUBLEMAGICSQUARED: StringPair = {\n    label: \"Magic/Faith *2 M²\",\n    drain: 2,\n  };\n  static readonly TRIPPLEMAGICSQUARED: StringPair = {\n    label: \"Magic/Faith *3 M²\",\n    drain: 4,\n  };\n  static readonly HALFMAGICQUBED: StringPair = {\n    label: \"1/2 Magic/Faith M³\",\n    drain: 0,\n  };\n  static readonly MAGICQUBED: StringPair = {\n    label: \"Magic/Faith M³\",\n    drain: 1,\n  };\n  static readonly DOUBLEMAGICQUBED: StringPair = {\n    label: \"Magic/Faith *2 M³\",\n    drain: 2,\n  };\n  static readonly TRIPPLEMAGICQUBED: StringPair = {\n    label: \"Magic/Faith *3 M³\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSize.HALFMAGICSQUARED.label.toLowerCase():\n        return SpellSize.HALFMAGICSQUARED;\n      case SpellSize.MAGICSQUARED.label.toLowerCase():\n        return SpellSize.MAGICSQUARED;\n      case SpellSize.DOUBLEMAGICSQUARED.label.toLowerCase():\n        return SpellSize.DOUBLEMAGICSQUARED;\n      case SpellSize.TRIPPLEMAGICSQUARED.label.toLowerCase():\n        return SpellSize.TRIPPLEMAGICSQUARED;\n      case SpellSize.HALFMAGICQUBED.label.toLowerCase():\n        return SpellSize.HALFMAGICQUBED;\n      case SpellSize.MAGICQUBED.label.toLowerCase():\n        return SpellSize.MAGICQUBED;\n      case SpellSize.DOUBLEMAGICQUBED.label.toLowerCase():\n        return SpellSize.DOUBLEMAGICQUBED;\n      case SpellSize.TRIPPLEMAGICQUBED.label.toLowerCase():\n        return SpellSize.TRIPPLEMAGICQUBED;\n      default:\n        return SpellSize.HALFMAGICSQUARED;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSize.NONE.label,\n      SpellSize.HALFMAGICSQUARED.label,\n      SpellSize.MAGICSQUARED.label,\n      SpellSize.DOUBLEMAGICSQUARED.label,\n      SpellSize.TRIPPLEMAGICSQUARED.label,\n      SpellSize.HALFMAGICQUBED.label,\n      SpellSize.MAGICQUBED.label,\n      SpellSize.DOUBLEMAGICQUBED.label,\n      SpellSize.TRIPPLEMAGICQUBED.label,\n    ];\n  };\n}\n\nexport class SpellDirectEffects {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly DIFFICULTTERRAIN: StringPair = {\n    label: \"Difficult Terrain\",\n    drain: 1,\n  };\n  static readonly LIFELEECH: StringPair = { label: \"Life Leech\", drain: 2 };\n  static readonly COMMUNICATE: StringPair = { label: \"Communicate\", drain: 2 };\n  static readonly CONFUSIONSTUNBLIND: StringPair = {\n    label: \"Confusion / Stun / Blind\",\n    drain: 3,\n  };\n  static readonly HEX: StringPair = { label: \"Hex\", drain: 4 };\n  static readonly IMPAIRMOVEMENTVISION: StringPair = {\n    label: \"Impair Movement / Vision\",\n    drain: 4,\n  };\n  static readonly MOVEFEARROOT: StringPair = {\n    label: \"Move / Fear / Root\",\n    drain: 4,\n  };\n  static readonly DOT: StringPair = { label: \"Damage Over Time\", drain: 3 };\n  static readonly INCAPACITATE: StringPair = {\n    label: \"Incapacitate\",\n    drain: 5,\n  };\n  static readonly SPHERE: StringPair = { label: \"Shield\", drain: 5 };\n  static readonly KNOCKDOWN: StringPair = { label: \"Knockdown\", drain: 2 };\n  static readonly WALLBARRIERCONSTRUCTSUMMON: StringPair = {\n    label: \"Wall / Barrier / Sphere / Summon\",\n    drain: 5,\n  };\n  static readonly TELEPORT: StringPair = { label: \"Teleport\", drain: 6 };\n  static readonly HEAL: StringPair = { label: \"Heal\", drain: 5 };\n  static readonly BUFFILLUSIONSHIELD: StringPair = {\n    label: \"Buff / Illusion\",\n    drain: 5,\n  };\n  static readonly CHARMCONTROLINFLUENCE: StringPair = {\n    label: \"Charm / Control / Influence\",\n    drain: 5,\n  };\n  static readonly TRANSFORM: StringPair = { label: \"Transform\", drain: 4 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDirectEffects.DIFFICULTTERRAIN.label.toLowerCase():\n        return SpellDirectEffects.DIFFICULTTERRAIN;\n      case SpellDirectEffects.LIFELEECH.label.toLowerCase():\n        return SpellDirectEffects.LIFELEECH;\n      case SpellDirectEffects.COMMUNICATE.label.toLowerCase():\n        return SpellDirectEffects.COMMUNICATE;\n      case SpellDirectEffects.CONFUSIONSTUNBLIND.label.toLowerCase():\n        return SpellDirectEffects.CONFUSIONSTUNBLIND;\n      case SpellDirectEffects.HEX.label.toLowerCase():\n        return SpellDirectEffects.HEX;\n      case SpellDirectEffects.IMPAIRMOVEMENTVISION.label.toLowerCase():\n        return SpellDirectEffects.IMPAIRMOVEMENTVISION;\n      case SpellDirectEffects.MOVEFEARROOT.label.toLowerCase():\n        return SpellDirectEffects.MOVEFEARROOT;\n      case SpellDirectEffects.DOT.label.toLowerCase():\n        return SpellDirectEffects.DOT;\n      case SpellDirectEffects.INCAPACITATE.label.toLowerCase():\n        return SpellDirectEffects.INCAPACITATE;\n      case SpellDirectEffects.SPHERE.label.toLowerCase():\n        return SpellDirectEffects.SPHERE;\n      case SpellDirectEffects.KNOCKDOWN.label.toLowerCase():\n        return SpellDirectEffects.KNOCKDOWN;\n      case SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON.label.toLowerCase():\n        return SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON;\n      case SpellDirectEffects.TELEPORT.label.toLowerCase():\n        return SpellDirectEffects.TELEPORT;\n      case SpellDirectEffects.HEAL.label.toLowerCase():\n        return SpellDirectEffects.HEAL;\n      case SpellDirectEffects.BUFFILLUSIONSHIELD.label.toLowerCase():\n        return SpellDirectEffects.BUFFILLUSIONSHIELD;\n      case SpellDirectEffects.CHARMCONTROLINFLUENCE.label.toLowerCase():\n        return SpellDirectEffects.CHARMCONTROLINFLUENCE;\n      case SpellDirectEffects.TRANSFORM.label.toLowerCase():\n        return SpellDirectEffects.TRANSFORM;\n      default:\n        return SpellDirectEffects.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDirectEffects.NONE.label,\n      SpellDirectEffects.DIFFICULTTERRAIN.label,\n      SpellDirectEffects.LIFELEECH.label,\n      SpellDirectEffects.COMMUNICATE.label,\n      SpellDirectEffects.CONFUSIONSTUNBLIND.label,\n      SpellDirectEffects.HEX.label,\n      SpellDirectEffects.IMPAIRMOVEMENTVISION.label,\n      SpellDirectEffects.MOVEFEARROOT.label,\n      SpellDirectEffects.DOT.label,\n      SpellDirectEffects.INCAPACITATE.label,\n      SpellDirectEffects.SPHERE.label,\n      SpellDirectEffects.KNOCKDOWN.label,\n      SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON.label,\n      SpellDirectEffects.TELEPORT.label,\n      SpellDirectEffects.HEAL.label,\n      SpellDirectEffects.BUFFILLUSIONSHIELD.label,\n      SpellDirectEffects.CHARMCONTROLINFLUENCE.label,\n      SpellDirectEffects.TRANSFORM.label,\n    ];\n  };\n}\n\nexport class SpellScalingEffect {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly MYSTBRADIUS: StringPair = {\n    label: \"MystB Meters Radius\",\n    drain: 3,\n  };\n  static readonly MYSTBPROJECTILES: StringPair = {\n    label: \"MystB Projectiles / Effects\",\n    drain: 4,\n  };\n  static readonly PROJECTILERADIUSPERVARIABLE: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per Variable Factor\",\n    drain: 4,\n  };\n  static readonly PROJECTILEPERVARIABLE: StringPair = {\n    label: \"1 Projectile/Effect per Variable Factor\",\n    drain: 3,\n  };\n  static readonly PROJECTILEPERTHREEMAGIC: StringPair = {\n    label: \"1 Projectile/Effect per 3 Magic/Faith Rating\",\n    drain: 2,\n  };\n  static readonly PROJECTILEPERTWOMAGIC: StringPair = {\n    label: \"1 Projectile/Effect per 2 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PROJECTILERADIUSPERTWOMAGIC: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per 2 Magic/Faith Rating\",\n    drain: 5,\n  };\n  static readonly PROJECTILERADIUSPERTHREEMAGIC: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per 3 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PLUSPROJECTILEPERTWOMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 2 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PLUSPROJECTILEPERFOURMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 4 Magic/Faith Rating\",\n    drain: 2,\n  };\n  static readonly PLUSPROJECTILEPERTHREEMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 3 Magic/Faith Rating\",\n    drain: 3,\n  };\n  static readonly MYSTBRADIUSEFFECT: StringPair = {\n    label: \"MystB Meters Radius & Effect\",\n    drain: 5,\n  };\n  static readonly PLUSHALFMYSTBRADIUSEFFECT: StringPair = {\n    label: \"plus 1/2 MystB Meters Radius & Effect\",\n    drain: 4,\n  };\n  static readonly PLUSHALFMYSTBRADIUS: StringPair = {\n    label: \"plus 1/2 MystB Meters Radius\",\n    drain: 2,\n  };\n  static readonly PLUSMYSTBRADIUS: StringPair = {\n    label: \"plus MystB Meters Radius\",\n    drain: 3,\n  };\n  static readonly PLUSMYSTBRADIUSEFFECT: StringPair = {\n    label: \"plus MystB Meters Radius & Effect\",\n    drain: 6,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellScalingEffect.MYSTBRADIUS.label.toLowerCase():\n        return SpellScalingEffect.MYSTBRADIUS;\n      case SpellScalingEffect.MYSTBPROJECTILES.label.toLowerCase():\n        return SpellScalingEffect.MYSTBPROJECTILES;\n      case SpellScalingEffect.PROJECTILERADIUSPERVARIABLE.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILERADIUSPERVARIABLE;\n      case SpellScalingEffect.PROJECTILEPERVARIABLE.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILEPERVARIABLE;\n      case SpellScalingEffect.PROJECTILEPERTHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILEPERTHREEMAGIC;\n      case SpellScalingEffect.PROJECTILEPERTWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILEPERTWOMAGIC;\n      case SpellScalingEffect.PROJECTILERADIUSPERTWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILERADIUSPERTWOMAGIC;\n      case SpellScalingEffect.PROJECTILERADIUSPERTHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILERADIUSPERTHREEMAGIC;\n      case SpellScalingEffect.PLUSPROJECTILEPERTWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PLUSPROJECTILEPERTWOMAGIC;\n      case SpellScalingEffect.PLUSPROJECTILEPERFOURMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PLUSPROJECTILEPERFOURMAGIC;\n      case SpellScalingEffect.PLUSPROJECTILEPERTHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PLUSPROJECTILEPERTHREEMAGIC;\n      case SpellScalingEffect.MYSTBRADIUSEFFECT.label.toLowerCase():\n        return SpellScalingEffect.MYSTBRADIUSEFFECT;\n      case SpellScalingEffect.PLUSHALFMYSTBRADIUSEFFECT.label.toLowerCase():\n        return SpellScalingEffect.PLUSHALFMYSTBRADIUSEFFECT;\n      case SpellScalingEffect.PLUSHALFMYSTBRADIUS.label.toLowerCase():\n        return SpellScalingEffect.PLUSHALFMYSTBRADIUS;\n      case SpellScalingEffect.PLUSMYSTBRADIUS.label.toLowerCase():\n        return SpellScalingEffect.PLUSMYSTBRADIUS;\n      case SpellScalingEffect.PLUSMYSTBRADIUSEFFECT.label.toLowerCase():\n        return SpellScalingEffect.PLUSMYSTBRADIUSEFFECT;\n      default:\n        return SpellScalingEffect.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellScalingEffect.NONE.label,\n      SpellScalingEffect.MYSTBRADIUS.label,\n      SpellScalingEffect.MYSTBPROJECTILES.label,\n      SpellScalingEffect.PROJECTILERADIUSPERVARIABLE.label,\n      SpellScalingEffect.PROJECTILEPERVARIABLE.label,\n      SpellScalingEffect.PROJECTILEPERTHREEMAGIC.label,\n      SpellScalingEffect.PROJECTILEPERTWOMAGIC.label,\n      SpellScalingEffect.PROJECTILERADIUSPERTWOMAGIC.label,\n      SpellScalingEffect.PROJECTILERADIUSPERTHREEMAGIC.label,\n      SpellScalingEffect.PLUSPROJECTILEPERTWOMAGIC.label,\n      SpellScalingEffect.PLUSPROJECTILEPERFOURMAGIC.label,\n      SpellScalingEffect.PLUSPROJECTILEPERTHREEMAGIC.label,\n      SpellScalingEffect.MYSTBRADIUSEFFECT.label,\n      SpellScalingEffect.PLUSHALFMYSTBRADIUSEFFECT.label,\n      SpellScalingEffect.PLUSHALFMYSTBRADIUS.label,\n      SpellScalingEffect.PLUSMYSTBRADIUS.label,\n      SpellScalingEffect.PLUSMYSTBRADIUSEFFECT.label,\n    ];\n  };\n}\n\nexport class SpellDamageType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly COMBINED: StringPair = { label: \"Combined\", drain: 0 };\n  static readonly PHYSICAL: StringPair = { label: \"Physical\", drain: 0 };\n  static readonly STUN: StringPair = { label: \"Stun\", drain: 1 };\n  static readonly PURE: StringPair = { label: \"Pure\", drain: 2 };\n  static readonly FATIGUE: StringPair = { label: \"Fatigue\", drain: 3 };\n  static readonly AGONY: StringPair = { label: \"Agony\", drain: 5 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDamageType.COMBINED.label.toLowerCase():\n        return SpellDamageType.COMBINED;\n      case SpellDamageType.PHYSICAL.label.toLowerCase():\n        return SpellDamageType.PHYSICAL;\n      case SpellDamageType.STUN.label.toLowerCase():\n        return SpellDamageType.STUN;\n      case SpellDamageType.PURE.label.toLowerCase():\n        return SpellDamageType.PURE;\n      case SpellDamageType.FATIGUE.label.toLowerCase():\n        return SpellDamageType.FATIGUE;\n      case SpellDamageType.AGONY.label.toLowerCase():\n        return SpellDamageType.AGONY;\n      default:\n        return SpellDamageType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDamageType.NONE.label,\n      SpellDamageType.COMBINED.label,\n      SpellDamageType.PHYSICAL.label,\n      SpellDamageType.STUN.label,\n      SpellDamageType.PURE.label,\n      SpellDamageType.FATIGUE.label,\n      SpellDamageType.AGONY.label,\n    ];\n  };\n}\n\nexport class SpellDamage {\n  static readonly NONE: StringPair = { label: \"\", drain: 0, };\n  static readonly ONEPRMAGIC: StringPair = { label: \"1 PR Magic/Faith\", drain: 3, };\n  static readonly TWOPRMAGIC: StringPair = { label: \"2 PR Magic/Faith\", drain: 4, };\n  static readonly THREEPRMAGIC: StringPair = { label: \"3 PR Magic/Faith\", drain: 6, };\n  static readonly FOURPRMAGIC: StringPair = { label: \"4 PR Magic/Faith\", drain: 9, };\n  static readonly FIVEPRMAGIC: StringPair = { label: \"5 PR Magic/Faith\", drain: 12, };\n  static readonly ONE: StringPair = { label: \"1\", drain: 1 };\n  static readonly TWO: StringPair = { label: \"2\", drain: 2 };\n  static readonly THREE: StringPair = { label: \"3\", drain: 3 };\n  static readonly FOUR: StringPair = { label: \"4\", drain: 4 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 5 };\n  static readonly ONEDFOUR: StringPair = { label: \"1d4\", drain: 1 };\n  static readonly ONEDSIX: StringPair = { label: \"1d6\", drain: 1 };\n  static readonly ONEDEIGHT: StringPair = { label: \"1d8\", drain: 2 };\n  static readonly ONEDTEN: StringPair = { label: \"1d10\", drain: 3 };\n  static readonly ONEDTWELVE: StringPair = { label: \"1d12\", drain: 3 };\n  static readonly ONEDTWENTY: StringPair = { label: \"1d20\", drain: 5 };\n  static readonly TWODFOUR: StringPair = { label: \"2d4\", drain: 2 };\n  static readonly TWODSIX: StringPair = { label: \"2d6\", drain: 3 };\n  static readonly TWODEIGHT: StringPair = { label: \"2d8\", drain: 4 };\n  static readonly TWODTEN: StringPair = { label: \"2d10\", drain: 5 };\n  static readonly TWODTWELVE: StringPair = { label: \"2d12\", drain: 5 };\n  static readonly TWODTWENTY: StringPair = { label: \"2d20\", drain: 10 };\n  static readonly THREEDFOUR: StringPair = { label: \"3d4\", drain: 3 };\n  static readonly THREEDSIX: StringPair = { label: \"3d6\", drain: 5 };\n  static readonly THREEDEIGHT: StringPair = { label: \"3d8\", drain: 6 };\n  static readonly THREEDTEN: StringPair = { label: \"3d10\", drain: 7 };\n  static readonly THREEDTWELVE: StringPair = { label: \"3d12\", drain: 9 };\n  static readonly FOURDFOUR: StringPair = { label: \"4d4\", drain: 4 };\n  static readonly FOURDSIX: StringPair = { label: \"4d6\", drain: 6 };\n  static readonly FOURDEIGHT: StringPair = { label: \"4d8\", drain: 8 };\n  static readonly FOURDTEN: StringPair = { label: \"4d10\", drain: 11 };\n  static readonly FIVEDFOUR: StringPair = { label: \"5d4\", drain: 5 };\n  static readonly FIVEDSIX: StringPair = { label: \"5d6\", drain: 8 };\n  static readonly FIVEDEIGHT: StringPair = { label: \"5d8\", drain: 12 };\n  static readonly SIXDFOUR: StringPair = { label: \"6d4\", drain: 7 };\n  static readonly MYSTB: StringPair = { label: \"MystB\", drain: 1 };\n  static readonly MYSTBDOUBLE: StringPair = { label: \"MystB *2\", drain: 2 };\n  static readonly QUARTERMAGIC: StringPair = { label: \"1/4 Magic/Faith\", drain: 2, };\n  static readonly HALFMAGIC: StringPair = { label: \"1/2 Magic/Faith\", drain: 3, };\n  static readonly MAGIC: StringPair = { label: \"Magic/Faith\", drain: 4 };\n  static readonly COLLETERAL: StringPair = { label: \"Collateral damage based on environment\", drain: 1, };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDamage.ONEPRMAGIC.label.toLowerCase():\n        return SpellDamage.ONEPRMAGIC;\n      case SpellDamage.TWOPRMAGIC.label.toLowerCase():\n        return SpellDamage.TWOPRMAGIC;\n      case SpellDamage.THREEPRMAGIC.label.toLowerCase():\n        return SpellDamage.THREEPRMAGIC;\n      case SpellDamage.FOURPRMAGIC.label.toLowerCase():\n        return SpellDamage.FOURPRMAGIC;\n      case SpellDamage.FIVEPRMAGIC.label.toLowerCase():\n        return SpellDamage.FIVEPRMAGIC;\n      case SpellDamage.ONE.label.toLowerCase():\n        return SpellDamage.ONE;\n      case SpellDamage.TWO.label.toLowerCase():\n        return SpellDamage.TWO;\n      case SpellDamage.THREE.label.toLowerCase():\n        return SpellDamage.THREE;\n      case SpellDamage.FOUR.label.toLowerCase():\n        return SpellDamage.FOUR;\n      case SpellDamage.FIVE.label.toLowerCase():\n        return SpellDamage.FIVE;\n      case SpellDamage.ONEDFOUR.label.toLowerCase():\n        return SpellDamage.ONEDFOUR;\n      case SpellDamage.ONEDSIX.label.toLowerCase():\n        return SpellDamage.ONEDSIX;\n      case SpellDamage.ONEDEIGHT.label.toLowerCase():\n        return SpellDamage.ONEDEIGHT;\n      case SpellDamage.ONEDTEN.label.toLowerCase():\n        return SpellDamage.ONEDTEN;\n      case SpellDamage.ONEDTWELVE.label.toLowerCase():\n        return SpellDamage.ONEDTWELVE;\n      case SpellDamage.ONEDTWENTY.label.toLowerCase():\n        return SpellDamage.ONEDTWENTY;\n      case SpellDamage.TWODFOUR.label.toLowerCase():\n        return SpellDamage.TWODFOUR;\n      case SpellDamage.TWODSIX.label.toLowerCase():\n        return SpellDamage.TWODSIX;\n      case SpellDamage.TWODEIGHT.label.toLowerCase():\n        return SpellDamage.TWODEIGHT;\n      case SpellDamage.TWODTEN.label.toLowerCase():\n        return SpellDamage.TWODTEN;\n      case SpellDamage.TWODTWELVE.label.toLowerCase():\n        return SpellDamage.TWODTWELVE;\n      case SpellDamage.TWODTWENTY.label.toLowerCase():\n        return SpellDamage.TWODTWENTY;\n      case SpellDamage.THREEDFOUR.label.toLowerCase():\n        return SpellDamage.THREEDFOUR;\n      case SpellDamage.THREEDSIX.label.toLowerCase():\n        return SpellDamage.THREEDSIX;\n      case SpellDamage.THREEDEIGHT.label.toLowerCase():\n        return SpellDamage.THREEDEIGHT;\n      case SpellDamage.THREEDTEN.label.toLowerCase():\n        return SpellDamage.THREEDTEN;\n      case SpellDamage.THREEDTWELVE.label.toLowerCase():\n        return SpellDamage.THREEDTWELVE;\n      case SpellDamage.FOURDFOUR.label.toLowerCase():\n        return SpellDamage.FOURDFOUR;\n      case SpellDamage.FOURDSIX.label.toLowerCase():\n        return SpellDamage.FOURDSIX;\n      case SpellDamage.FOURDEIGHT.label.toLowerCase():\n        return SpellDamage.FOURDEIGHT;\n      case SpellDamage.FOURDTEN.label.toLowerCase():\n        return SpellDamage.FOURDTEN;\n      case SpellDamage.FIVEDFOUR.label.toLowerCase():\n        return SpellDamage.FIVEDFOUR;\n      case SpellDamage.FIVEDSIX.label.toLowerCase():\n        return SpellDamage.FIVEDSIX;\n      case SpellDamage.FIVEDEIGHT.label.toLowerCase():\n        return SpellDamage.FIVEDEIGHT;\n      case SpellDamage.SIXDFOUR.label.toLowerCase():\n        return SpellDamage.SIXDFOUR;\n      case SpellDamage.MYSTB.label.toLowerCase():\n        return SpellDamage.MYSTB;\n      case SpellDamage.MYSTBDOUBLE.label.toLowerCase():\n        return SpellDamage.MYSTBDOUBLE;\n      case SpellDamage.QUARTERMAGIC.label.toLowerCase():\n        return SpellDamage.QUARTERMAGIC;\n      case SpellDamage.HALFMAGIC.label.toLowerCase():\n        return SpellDamage.HALFMAGIC;\n      case SpellDamage.MAGIC.label.toLowerCase():\n        return SpellDamage.MAGIC;\n      case SpellDamage.COLLETERAL.label.toLowerCase():\n        return SpellDamage.COLLETERAL;\n      default:\n        return SpellDamage.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDamage.NONE.label,\n      SpellDamage.ONEPRMAGIC.label,\n      SpellDamage.TWOPRMAGIC.label,\n      SpellDamage.THREEPRMAGIC.label,\n      SpellDamage.FOURPRMAGIC.label,\n      SpellDamage.FIVEPRMAGIC.label,\n      SpellDamage.ONE.label,\n      SpellDamage.TWO.label,\n      SpellDamage.THREE.label,\n      SpellDamage.FOUR.label,\n      SpellDamage.FIVE.label,\n      SpellDamage.ONEDFOUR.label,\n      SpellDamage.ONEDSIX.label,\n      SpellDamage.ONEDEIGHT.label,\n      SpellDamage.ONEDTEN.label,\n      SpellDamage.ONEDTWELVE.label,\n      SpellDamage.ONEDTWENTY.label,\n      SpellDamage.TWODFOUR.label,\n      SpellDamage.TWODSIX.label,\n      SpellDamage.TWODEIGHT.label,\n      SpellDamage.TWODTEN.label,\n      SpellDamage.TWODTWELVE.label,\n      SpellDamage.TWODTWENTY.label,\n      SpellDamage.THREEDFOUR.label,\n      SpellDamage.THREEDSIX.label,\n      SpellDamage.THREEDEIGHT.label,\n      SpellDamage.THREEDTEN.label,\n      SpellDamage.THREEDTWELVE.label,\n      SpellDamage.FOURDFOUR.label,\n      SpellDamage.FOURDSIX.label,\n      SpellDamage.FOURDEIGHT.label,\n      SpellDamage.FOURDTEN.label,\n      SpellDamage.FIVEDFOUR.label,\n      SpellDamage.FIVEDSIX.label,\n      SpellDamage.FIVEDEIGHT.label,\n      SpellDamage.SIXDFOUR.label,\n      SpellDamage.MYSTB.label,\n      SpellDamage.MYSTBDOUBLE.label,\n      SpellDamage.QUARTERMAGIC.label,\n      SpellDamage.HALFMAGIC.label,\n      SpellDamage.MAGIC.label,\n      SpellDamage.COLLETERAL.label,\n    ];\n  };\n}\n\nexport class SpellAoeRadius {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONEMETER: StringPair = { label: \"1 Meter\", drain: -1 };\n  static readonly TWOMETER: StringPair = { label: \"2 Meter\", drain: 0 };\n  static readonly THREEMETER: StringPair = { label: \"3 Meter\", drain: 1 };\n  static readonly FOURMETER: StringPair = { label: \"4 Meter\", drain: 2 };\n  static readonly FIVEMETER: StringPair = { label: \"5 Meter\", drain: 2 };\n  static readonly SIXMETER: StringPair = { label: \"6 Meter\", drain: 3 };\n  static readonly SEVENMETER: StringPair = { label: \"7 Meter\", drain: 3 };\n  static readonly EIGHTMETER: StringPair = { label: \"8 Meter\", drain: 4 };\n  static readonly NINEMETER: StringPair = { label: \"9 Meter\", drain: 4 };\n  static readonly TENMETER: StringPair = { label: \"10 Meter\", drain: 5 };\n  static readonly HALFMAGICMETER: StringPair = { label: \"1/2 Magic/Faith Meter\", drain: 2, };\n  static readonly MAGICMETER: StringPair = { label: \"Magic/Faith Meters\", drain: 3, };\n  static readonly DOUBLEMAGICMETER: StringPair = { label: \"Magic/Faith *2 Meters\", drain: 4, };\n  static readonly VARIABLE: StringPair = { label: \"Variable\", drain: 1, };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellAoeRadius.ONEMETER.label.toLowerCase():\n        return SpellAoeRadius.ONEMETER;\n      case SpellAoeRadius.TWOMETER.label.toLowerCase():\n        return SpellAoeRadius.TWOMETER;\n      case SpellAoeRadius.THREEMETER.label.toLowerCase():\n        return SpellAoeRadius.THREEMETER;\n      case SpellAoeRadius.FOURMETER.label.toLowerCase():\n        return SpellAoeRadius.FOURMETER;\n      case SpellAoeRadius.FIVEMETER.label.toLowerCase():\n        return SpellAoeRadius.FIVEMETER;\n      case SpellAoeRadius.SIXMETER.label.toLowerCase():\n        return SpellAoeRadius.SIXMETER;\n      case SpellAoeRadius.SEVENMETER.label.toLowerCase():\n        return SpellAoeRadius.SEVENMETER;\n      case SpellAoeRadius.EIGHTMETER.label.toLowerCase():\n        return SpellAoeRadius.EIGHTMETER;\n      case SpellAoeRadius.NINEMETER.label.toLowerCase():\n        return SpellAoeRadius.NINEMETER;\n      case SpellAoeRadius.TENMETER.label.toLowerCase():\n        return SpellAoeRadius.TENMETER;\n      case SpellAoeRadius.HALFMAGICMETER.label.toLowerCase():\n        return SpellAoeRadius.HALFMAGICMETER;\n      case SpellAoeRadius.MAGICMETER.label.toLowerCase():\n        return SpellAoeRadius.MAGICMETER;\n      case SpellAoeRadius.DOUBLEMAGICMETER.label.toLowerCase():\n        return SpellAoeRadius.DOUBLEMAGICMETER;\n      case SpellAoeRadius.VARIABLE.label.toLowerCase():\n        return SpellAoeRadius.VARIABLE;\n      default:\n        return SpellAoeRadius.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellAoeRadius.NONE.label,\n      SpellAoeRadius.ONEMETER.label,\n      SpellAoeRadius.TWOMETER.label,\n      SpellAoeRadius.THREEMETER.label,\n      SpellAoeRadius.FOURMETER.label,\n      SpellAoeRadius.FIVEMETER.label,\n      SpellAoeRadius.SIXMETER.label,\n      SpellAoeRadius.SEVENMETER.label,\n      SpellAoeRadius.EIGHTMETER.label,\n      SpellAoeRadius.NINEMETER.label,\n      SpellAoeRadius.TENMETER.label,\n      SpellAoeRadius.HALFMAGICMETER.label,\n      SpellAoeRadius.MAGICMETER.label,\n      SpellAoeRadius.DOUBLEMAGICMETER.label,\n      SpellAoeRadius.VARIABLE.label,\n    ];\n  };\n}\n\nexport class SpellLosRange {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGIC: StringPair = {\n    label: \"1/2 Magic/Faith meters\",\n    drain: -1,\n  };\n  static readonly ONEMAGIC: StringPair = {\n    label: \"Magic/Faith meters\",\n    drain: -1,\n  };\n  static readonly TWOMAGIC: StringPair = {\n    label: \"Magic/Faith *2 meters\",\n    drain: 0,\n  };\n  static readonly THREEMAGIC: StringPair = {\n    label: \"Magic/Faith *3 meters\",\n    drain: 1,\n  };\n  static readonly FOURMAGIC: StringPair = {\n    label: \"Magic/Faith *4 meters\",\n    drain: 2,\n  };\n  static readonly FIVEMAGIC: StringPair = {\n    label: \"Magic/Faith *5 meters\",\n    drain: 3,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellLosRange.HALFMAGIC.label.toLowerCase():\n        return SpellLosRange.HALFMAGIC;\n      case SpellLosRange.ONEMAGIC.label.toLowerCase():\n        return SpellLosRange.ONEMAGIC;\n      case SpellLosRange.TWOMAGIC.label.toLowerCase():\n        return SpellLosRange.TWOMAGIC;\n      case SpellLosRange.THREEMAGIC.label.toLowerCase():\n        return SpellLosRange.THREEMAGIC;\n      case SpellLosRange.FOURMAGIC.label.toLowerCase():\n        return SpellLosRange.FOURMAGIC;\n      case SpellLosRange.FIVEMAGIC.label.toLowerCase():\n        return SpellLosRange.FIVEMAGIC;\n      default:\n        return SpellLosRange.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellLosRange.NONE.label,\n      SpellLosRange.HALFMAGIC.label,\n      SpellLosRange.ONEMAGIC.label,\n      SpellLosRange.TWOMAGIC.label,\n      SpellLosRange.THREEMAGIC.label,\n      SpellLosRange.FOURMAGIC.label,\n      SpellLosRange.FIVEMAGIC.label,\n    ];\n  };\n}\n\nexport class SpellProjectileNumber {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONE: StringPair = { label: \"1\", drain: 1 };\n  static readonly TWO: StringPair = { label: \"2\", drain: 2 };\n  static readonly THREE: StringPair = { label: \"3\", drain: 4 };\n  static readonly FOUR: StringPair = { label: \"4\", drain: 6 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 8 };\n  static readonly SCALING: StringPair = {\n    label: \"Scaling / Variable\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellProjectileNumber.ONE.label.toLowerCase():\n        return SpellProjectileNumber.ONE;\n      case SpellProjectileNumber.TWO.label.toLowerCase():\n        return SpellProjectileNumber.TWO;\n      case SpellProjectileNumber.THREE.label.toLowerCase():\n        return SpellProjectileNumber.THREE;\n      case SpellProjectileNumber.FOUR.label.toLowerCase():\n        return SpellProjectileNumber.FOUR;\n      case SpellProjectileNumber.FIVE.label.toLowerCase():\n        return SpellProjectileNumber.FIVE;\n      case SpellProjectileNumber.SCALING.label.toLowerCase():\n        return SpellProjectileNumber.SCALING;\n      default:\n        return SpellProjectileNumber.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellProjectileNumber.NONE.label,\n      SpellProjectileNumber.ONE.label,\n      SpellProjectileNumber.TWO.label,\n      SpellProjectileNumber.THREE.label,\n      SpellProjectileNumber.FOUR.label,\n      SpellProjectileNumber.FIVE.label,\n      SpellProjectileNumber.SCALING.label,\n    ];\n  };\n}\n\nexport class SpellProjectileType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly BALL: StringPair = { label: \"Ball\", drain: -1 };\n  static readonly MISSILE: StringPair = { label: \"Missile\", drain: 0 };\n  static readonly BOLT: StringPair = { label: \"Bolt\", drain: 0 };\n  static readonly RAY: StringPair = { label: \"Ray\", drain: 1 };\n  static readonly SPRAY: StringPair = { label: \"Spray\", drain: 0 };\n  static readonly LASSO: StringPair = { label: \"Lasso\", drain: 1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellProjectileType.BALL.label.toLowerCase():\n        return SpellProjectileType.BALL;\n      case SpellProjectileType.MISSILE.label.toLowerCase():\n        return SpellProjectileType.MISSILE;\n      case SpellProjectileType.BOLT.label.toLowerCase():\n        return SpellProjectileType.BOLT;\n      case SpellProjectileType.RAY.label.toLowerCase():\n        return SpellProjectileType.RAY;\n      case SpellProjectileType.SPRAY.label.toLowerCase():\n        return SpellProjectileType.SPRAY;\n      case SpellProjectileType.LASSO.label.toLowerCase():\n        return SpellProjectileType.LASSO;\n      default:\n        return SpellProjectileType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellProjectileType.NONE.label,\n      SpellProjectileType.BALL.label,\n      SpellProjectileType.MISSILE.label,\n      SpellProjectileType.BOLT.label,\n      SpellProjectileType.RAY.label,\n      SpellProjectileType.SPRAY.label,\n      SpellProjectileType.LASSO.label,\n    ];\n  };\n}\n\nexport class SpellTargetingType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly DIRECTTARGET: StringPair = {\n    label: \"Direct Target\",\n    drain: 0,\n  };\n  static readonly AURATARGETING: StringPair = {\n    label: \"Aura Targeting\",\n    drain: 2,\n  };\n  static readonly INDIRECTTARGETING: StringPair = {\n    label: \"Indirect Targeting\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellTargetingType.DIRECTTARGET.label.toLowerCase():\n        return SpellTargetingType.DIRECTTARGET;\n      case SpellTargetingType.AURATARGETING.label.toLowerCase():\n        return SpellTargetingType.AURATARGETING;\n      case SpellTargetingType.INDIRECTTARGETING.label.toLowerCase():\n        return SpellTargetingType.INDIRECTTARGETING;\n      default:\n        return SpellTargetingType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellTargetingType.NONE.label,\n      SpellTargetingType.DIRECTTARGET.label,\n      SpellTargetingType.AURATARGETING.label,\n      SpellTargetingType.INDIRECTTARGETING.label,\n    ];\n  };\n}\n\nexport class SpellCastTime {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly SIXMINUSMYSTBROUNDS: StringPair = { label: \"6 - Mystb Rounds\", drain: 2, };\n  static readonly NINETHREE: StringPair = { label: \"9 + 3\", drain: -4 };\n  static readonly NINETHREECHANNEL: StringPair = { label: \"9 + 3 (Channel)\", drain: -3, };\n  static readonly SEVENTHREE: StringPair = { label: \"7 + 3\", drain: -1 };\n  static readonly FIVETHREE: StringPair = { label: \"5 + 3\", drain: 1 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 4 };\n  static readonly DRAINCHENNEL: StringPair = { label: \"Drain (Channel)\", drain: -3, };\n  static readonly DRAINTHREE: StringPair = { label: \"Drain + 3\", drain: -2 };\n  static readonly MAGIFAITHHOURS: StringPair = { label: \"24 / Magic/Faith Hours\", drain: 0, };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellCastTime.SIXMINUSMYSTBROUNDS.label.toLowerCase():\n        return SpellCastTime.SIXMINUSMYSTBROUNDS;\n      case SpellCastTime.NINETHREE.label.toLowerCase():\n        return SpellCastTime.NINETHREE;\n      case SpellCastTime.NINETHREECHANNEL.label.toLowerCase():\n        return SpellCastTime.NINETHREECHANNEL;\n      case SpellCastTime.SEVENTHREE.label.toLowerCase():\n        return SpellCastTime.SEVENTHREE;\n      case SpellCastTime.FIVETHREE.label.toLowerCase():\n        return SpellCastTime.FIVETHREE;\n      case SpellCastTime.FIVE.label.toLowerCase():\n        return SpellCastTime.FIVE;\n      case SpellCastTime.DRAINCHENNEL.label.toLowerCase():\n        return SpellCastTime.DRAINCHENNEL;\n      case SpellCastTime.DRAINTHREE.label.toLowerCase():\n        return SpellCastTime.DRAINTHREE;\n      case SpellCastTime.MAGIFAITHHOURS.label.toLowerCase():\n        return SpellCastTime.MAGIFAITHHOURS;\n      default:\n        return SpellCastTime.NONE;\n    }\n  };\n  static getAllPhysical = (): string[] => {\n    return [\n      SpellCastTime.NONE.label,\n      SpellCastTime.SIXMINUSMYSTBROUNDS.label,\n      SpellCastTime.NINETHREE.label,\n      SpellCastTime.NINETHREECHANNEL.label,\n      SpellCastTime.SEVENTHREE.label,\n      SpellCastTime.FIVETHREE.label,\n      SpellCastTime.FIVE.label,\n      SpellCastTime.DRAINCHENNEL.label,\n      SpellCastTime.DRAINTHREE.label,\n      SpellCastTime.MAGIFAITHHOURS.label,\n    ];\n  };\n  static getAllStun = (): string[] => {\n    return [\n      SpellCastTime.NONE.label,\n      SpellCastTime.SIXMINUSMYSTBROUNDS.label,\n      SpellCastTime.NINETHREE.label,\n      SpellCastTime.NINETHREECHANNEL.label,\n      SpellCastTime.SEVENTHREE.label,\n      SpellCastTime.FIVETHREE.label,\n      SpellCastTime.FIVE.label,\n      SpellCastTime.MAGIFAITHHOURS.label,\n    ];\n  };\n}\n\nexport class SpellLevel {\n  static readonly NONE: NumberPair = {\n    label: 0,\n    drain: 0,\n  };\n  static readonly ONE: NumberPair = { label: 1, drain: -4 };\n  static readonly TWO: NumberPair = { label: 2, drain: -3 };\n  static readonly THREE: NumberPair = { label: 3, drain: -2 };\n  static readonly FOUR: NumberPair = { label: 4, drain: -1 };\n  static readonly FIVE: NumberPair = { label: 5, drain: 0 };\n  static readonly SIX: NumberPair = { label: 6, drain: 1 };\n  static readonly SEVEN: NumberPair = { label: 7, drain: 2 };\n  static readonly EIGHT: NumberPair = { label: 8, drain: 3 };\n  static readonly NINE: NumberPair = { label: 9, drain: 4 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): NumberPair => {\n    switch (+label) {\n      case SpellLevel.ONE.label:\n        return SpellLevel.ONE;\n      case SpellLevel.TWO.label:\n        return SpellLevel.TWO;\n      case SpellLevel.THREE.label:\n        return SpellLevel.THREE;\n      case SpellLevel.FOUR.label:\n        return SpellLevel.FOUR;\n      case SpellLevel.FIVE.label:\n        return SpellLevel.FIVE;\n      case SpellLevel.SIX.label:\n        return SpellLevel.SIX;\n      case SpellLevel.SEVEN.label:\n        return SpellLevel.SEVEN;\n      case SpellLevel.EIGHT.label:\n        return SpellLevel.EIGHT;\n      case SpellLevel.NINE.label:\n        return SpellLevel.NINE;\n      default:\n        return SpellLevel.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellLevel.NONE.label + \"\",\n      SpellLevel.ONE.label + \"\",\n      SpellLevel.TWO.label + \"\",\n      SpellLevel.THREE.label + \"\",\n      SpellLevel.FOUR.label + \"\",\n      SpellLevel.FIVE.label + \"\",\n      SpellLevel.SIX.label + \"\",\n      SpellLevel.SEVEN.label + \"\",\n      SpellLevel.EIGHT.label + \"\",\n      SpellLevel.NINE.label + \"\",\n    ];\n  };\n}\n\nexport class SpellSource {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly EARTH: StringPair = { label: \"earth\", drain: 0 };\n  static readonly FROST: StringPair = { label: \"frost\", drain: 0 };\n  static readonly AIR: StringPair = { label: \"air\", drain: 0 };\n  static readonly FIRE: StringPair = { label: \"fire\", drain: 0 };\n  static readonly ARCANE: StringPair = { label: \"arcane\", drain: 1 };\n  static readonly DIVINE: StringPair = { label: \"divine\", drain: 0 };\n  static readonly DEMONIC: StringPair = { label: \"demonic\", drain: 0 };\n  static readonly DRUIDIC: StringPair = { label: \"druidic\", drain: 0 };\n  static readonly PSYCHIC: StringPair = { label: \"psychic\", drain: 0 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSource.EARTH.label.toLowerCase():\n        return SpellSource.EARTH;\n      case SpellSource.FROST.label.toLowerCase():\n        return SpellSource.FROST;\n      case SpellSource.AIR.label.toLowerCase():\n        return SpellSource.AIR;\n      case SpellSource.FIRE.label.toLowerCase():\n        return SpellSource.FIRE;\n      case SpellSource.ARCANE.label.toLowerCase():\n        return SpellSource.ARCANE;\n      case SpellSource.DIVINE.label.toLowerCase():\n        return SpellSource.DIVINE;\n      case SpellSource.DEMONIC.label.toLowerCase():\n        return SpellSource.DEMONIC;\n      case SpellSource.DRUIDIC.label.toLowerCase():\n        return SpellSource.DRUIDIC;\n      case SpellSource.PSYCHIC.label.toLowerCase():\n        return SpellSource.PSYCHIC;\n      default:\n        return SpellSource.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSource.NONE.label,\n      SpellSource.EARTH.label,\n      SpellSource.FROST.label,\n      SpellSource.AIR.label,\n      SpellSource.FIRE.label,\n      SpellSource.ARCANE.label,\n      SpellSource.DIVINE.label,\n      SpellSource.DEMONIC.label,\n      SpellSource.DRUIDIC.label,\n      SpellSource.PSYCHIC.label,\n    ];\n  };\n}\n\nexport class SpellRange {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly TOUCH: StringPair = { label: \"touch\", drain: 1 };\n  static readonly SONIC: StringPair = { label: \"sonic\", drain: 1 };\n  static readonly RADIUS90: StringPair = {\n    label: \"Radius 90° around Caster\",\n    drain: 1,\n  };\n  static readonly RADIUS360: StringPair = {\n    label: \"Radius 90°+ around Caster\",\n    drain: 2,\n  };\n  static readonly LOSAURA: StringPair = {\n    label: \"Line of Sight Aura or Projectile\",\n    drain: 1,\n  };\n  static readonly LOSMANIPULATE: StringPair = {\n    label: \"Line of Sight Manipulate\",\n    drain: 3,\n  };\n  static readonly LOSPOINT: StringPair = {\n    label: \"Line of Sight Spawn At Point\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellRange.TOUCH.label.toLowerCase():\n        return SpellRange.TOUCH;\n      case SpellRange.SONIC.label.toLowerCase():\n        return SpellRange.SONIC;\n      case SpellRange.RADIUS90.label.toLowerCase():\n        return SpellRange.RADIUS90;\n      case SpellRange.RADIUS360.label.toLowerCase():\n        return SpellRange.RADIUS360;\n      case SpellRange.LOSAURA.label.toLowerCase():\n        return SpellRange.LOSAURA;\n      case SpellRange.LOSMANIPULATE.label.toLowerCase():\n        return SpellRange.LOSMANIPULATE;\n      case SpellRange.LOSPOINT.label.toLowerCase():\n        return SpellRange.LOSPOINT;\n      default:\n        return SpellRange.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellRange.NONE.label,\n      SpellRange.TOUCH.label,\n      SpellRange.SONIC.label,\n      SpellRange.RADIUS90.label,\n      SpellRange.RADIUS360.label,\n      SpellRange.LOSAURA.label,\n      SpellRange.LOSMANIPULATE.label,\n      SpellRange.LOSPOINT.label,\n    ];\n  };\n}\n\nexport class SpellRite {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly VERBAL: StringPair = { label: \"verbal\", drain: 2 };\n  static readonly SOMATIC: StringPair = { label: \"somatic\", drain: 1 };\n  static readonly MENTAL: StringPair = { label: \"mental\", drain: 3 };\n  static readonly RITUAL: StringPair = { label: \"ritual\", drain: 3 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellRite.VERBAL.label.toLowerCase():\n        return SpellRite.VERBAL;\n      case SpellRite.SOMATIC.label.toLowerCase():\n        return SpellRite.SOMATIC;\n      case SpellRite.MENTAL.label.toLowerCase():\n        return SpellRite.MENTAL;\n      case SpellRite.RITUAL.label.toLowerCase():\n        return SpellRite.RITUAL;\n      default:\n        return SpellRite.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellRite.NONE.label,\n      SpellRite.VERBAL.label,\n      SpellRite.SOMATIC.label,\n      SpellRite.MENTAL.label,\n      SpellRite.RITUAL.label,\n    ];\n  };\n}\n\nexport class SpellTarget {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly SINGLE: StringPair = { label: \"Single Target\", drain: 1 };\n  static readonly DAOE: StringPair = { label: \"Diminishing Area Of Effect \", drain: 1, };\n  static readonly MULTI: StringPair = { label: \"Multiple Targets\", drain: 4, };\n  static readonly AOE: StringPair = { label: \"Area Of Effect\", drain: 2, };\n  static readonly CASTER: StringPair = { label: \"Caster\", drain: 3, };\n  static readonly TARGET: StringPair = { label: \"Caster Or Target\", drain: 3, };\n  static readonly LINE: StringPair = { label: \"Straight Line\", drain: 2, };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellTarget.SINGLE.label.toLowerCase():\n        return SpellTarget.SINGLE;\n      case SpellTarget.DAOE.label.toLowerCase():\n        return SpellTarget.DAOE;\n      case SpellTarget.MULTI.label.toLowerCase():\n        return SpellTarget.MULTI;\n      case SpellTarget.AOE.label.toLowerCase():\n        return SpellTarget.AOE;\n      case SpellTarget.CASTER.label.toLowerCase():\n        return SpellTarget.CASTER;\n      case SpellTarget.TARGET.label.toLowerCase():\n        return SpellTarget.TARGET;\n      case SpellTarget.LINE.label.toLowerCase():\n        return SpellTarget.LINE;\n      default:\n        return SpellTarget.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellTarget.NONE.label,\n      SpellTarget.SINGLE.label,\n      SpellTarget.MULTI.label,\n      SpellTarget.AOE.label,\n      SpellTarget.DAOE.label,\n      SpellTarget.TARGET.label,\n      SpellTarget.CASTER.label,\n      SpellTarget.LINE.label,\n    ];\n  };\n}\n\nexport class SpellDuration {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly CONCENTRATION: StringPair = { label: \"concentration\", drain: 0, };\n  static readonly INSTANTANEOUS: StringPair = { label: \"instantaneous\", drain: 1, };\n  static readonly PERMANENT: StringPair = { label: \"permanent\", drain: 1 };\n  static readonly FIXEDTICKS: StringPair = { label: \"fixed # of ticks\", drain: 1, };\n  static readonly FIXEDROUNDS: StringPair = { label: \"fixed # of rounds\", drain: 2, };\n  static readonly FIXEDHOURS: StringPair = { label: \"fixed # of hours\", drain: 2, };\n  static readonly CHANNEL: StringPair = { label: \"channel\", drain: -1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDuration.CONCENTRATION.label.toLowerCase():\n        return SpellDuration.CONCENTRATION;\n      case SpellDuration.INSTANTANEOUS.label.toLowerCase():\n        return SpellDuration.INSTANTANEOUS;\n      case SpellDuration.PERMANENT.label.toLowerCase():\n        return SpellDuration.PERMANENT;\n      case SpellDuration.FIXEDTICKS.label.toLowerCase():\n        return SpellDuration.FIXEDTICKS;\n      case SpellDuration.FIXEDROUNDS.label.toLowerCase():\n        return SpellDuration.FIXEDROUNDS;\n      case SpellDuration.FIXEDHOURS.label.toLowerCase():\n        return SpellDuration.FIXEDHOURS;\n      case SpellDuration.CHANNEL.label.toLowerCase():\n        return SpellDuration.CHANNEL;\n      default:\n        return SpellDuration.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDuration.NONE.label,\n      SpellDuration.CONCENTRATION.label,\n      SpellDuration.FIXEDTICKS.label,\n      SpellDuration.FIXEDROUNDS.label,\n      SpellDuration.FIXEDHOURS.label,\n      SpellDuration.CHANNEL.label,\n      SpellDuration.INSTANTANEOUS.label,\n      SpellDuration.PERMANENT.label,\n    ];\n  };\n}\n\nexport class SpellSchool {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly TRANSMUTATION: StringPair = { label: \"Transmutation\", drain: 1, };\n  static readonly EVOCATION: StringPair = { label: \"Evocation\", drain: 0 };\n  static readonly FORTIFICATION: StringPair = { label: \"Fortification\", drain: 1, };\n  static readonly HEX: StringPair = { label: \"Hex\", drain: 1 };\n  static readonly ILLUSION: StringPair = { label: \"Illusion\", drain: 1 };\n  static readonly CONJURATION: StringPair = { label: \"Conjuration\", drain: 2 };\n  static readonly NECROMANCY: StringPair = { label: \"Necromancy\", drain: 1 };\n  static readonly ENCHANTMENT: StringPair = { label: \"Enchantment\", drain: 2 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSchool.FORTIFICATION.label.toLowerCase():\n        return SpellSchool.FORTIFICATION;\n      case SpellSchool.HEX.label.toLowerCase():\n        return SpellSchool.HEX;\n      case SpellSchool.ILLUSION.label.toLowerCase():\n        return SpellSchool.ILLUSION;\n      case SpellSchool.NECROMANCY.label.toLowerCase():\n        return SpellSchool.NECROMANCY;\n      case SpellSchool.TRANSMUTATION.label.toLowerCase():\n        return SpellSchool.TRANSMUTATION;\n      case SpellSchool.CONJURATION.label.toLowerCase():\n        return SpellSchool.CONJURATION;\n      case SpellSchool.EVOCATION.label.toLowerCase():\n        return SpellSchool.EVOCATION;\n      case SpellSchool.ENCHANTMENT.label.toLowerCase():\n        return SpellSchool.ENCHANTMENT;\n      default:\n        return SpellSchool.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSchool.NONE.label,\n      SpellSchool.CONJURATION.label,\n      SpellSchool.EVOCATION.label,\n      SpellSchool.FORTIFICATION.label,\n      SpellSchool.HEX.label,\n      SpellSchool.ILLUSION.label,\n      SpellSchool.NECROMANCY.label,\n      SpellSchool.TRANSMUTATION.label,\n      SpellSchool.ENCHANTMENT.label,\n    ];\n  };\n}\n\nexport class SpellDrainType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly STUN: StringPair = { label: \"Stun\", drain: 0 };\n  static readonly PHYSICAL: StringPair = { label: \"Physical\", drain: -7 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDrainType.STUN.label.toLowerCase():\n        return SpellDrainType.STUN;\n      case SpellDrainType.PHYSICAL.label.toLowerCase():\n        return SpellDrainType.PHYSICAL;\n      default:\n        return SpellDrainType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDrainType.NONE.label,\n      SpellDrainType.STUN.label,\n      SpellDrainType.PHYSICAL.label,\n    ];\n  };\n}\n","export const rollCommand = (\n  commands: string,\n  krit?: boolean\n): { result: number; text: string; rolls: string } => {\n  let result = 0;\n  let text = \"\";\n\n  let newCommands = \"\";\n  commands.split(\" \").forEach((command) => {\n    if (/\\d+/g.test(command)) {\n      newCommands += command;\n    } else {\n      text += \" \" + command;\n    }\n  });\n  newCommands = newCommands.trim();\n\n  let rolls: string = \"(`\";\n  newCommands.split(\" \").forEach((fullCommand: string) => {\n    let commandSplits: string[] = [];\n    fullCommand.split(\"+\").forEach((part) => {\n      let split = part.split(\"-\");\n      commandSplits = commandSplits.concat(split);\n    });\n\n    commandSplits.forEach((command: string) => {\n      let multiplier: number = 1;\n      if (command.includes(\"d\")) {\n        if (!command.startsWith(\"d\")) {\n          multiplier = parseInt(command.split(\"d\")[0]);\n          command = command.split(\"d\")[1];\n        }\n        command = command.replaceAll(\"d\", \"\");\n        if (krit) multiplier = multiplier * 2;\n\n        if (command.includes(\"+\")) {\n          const com = command.split(\"+\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result += parseInt(com[1]);\n        } else if (command.includes(\"-\")) {\n          const com = command.split(\"-\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result -= parseInt(com[1]);\n        } else {\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(command));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n        }\n      } else {\n        result += parseInt(command);\n        rolls += command + \",\";\n      }\n    });\n    rolls = rolls.slice(0, -1) + \"`)\";\n  });\n\n  return { result: result, text: text, rolls: rolls };\n};\n\nexport const rollDie = (size: number): number => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory } from \"react-icons/bi\";\nimport { GiDiceTwentyFacesTwenty, GiSwordsPower } from \"react-icons/gi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name)\n        .then((count: number) => {\n          setEntity(count > 0);\n          setLoading(false);\n        })\n        .catch(() => {\n          setEntity(false);\n          setLoading(false);\n        });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"talent\":\n        return <GiSwordsPower />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import IEntity from \"./IEntity\";\n\nexport enum TalentCategory {\n  physical = \"physical\",\n  mental = \"mental\",\n  social = \"social\",\n  magical = \"magical\",\n}\n\nexport default class Talent implements IEntity {\n  id?: number;\n  name: string;\n  category: string;\n  isFlaw: boolean;\n  cost: number;\n  prerequisite: string;\n  effect: string;\n  type: boolean;\n  stress: string;\n  trigger: string;\n  triggerFrequency: string;\n  ticks: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    category?: string,\n    isFlaw?: boolean,\n    cost?: number,\n    prerequisite?: string,\n    effect?: string,\n    type?: boolean,\n    stress?: string,\n    trigger?: string,\n    triggerFrequency?: string,\n    ticks?: number\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.category = category || TalentCategory.magical;\n    this.isFlaw = isFlaw || false;\n    this.cost = cost || 0;\n    this.prerequisite = prerequisite || \"\";\n    this.effect = effect || \"\";\n    this.type = type || false;\n    this.stress = stress || \"\";\n    this.trigger = trigger || \"\";\n    this.triggerFrequency = triggerFrequency || \"\";\n    this.ticks = ticks || 0;\n  }\n\n  static makeCsv = (talent: Talent): any[] => {\n    return [\n      talent.id,\n      talent.name,\n      talent.category,\n      talent.isFlaw,\n      talent.cost,\n      talent.prerequisite,\n      talent.effect,\n      talent.type,\n      talent.stress,\n      talent.trigger,\n      talent.triggerFrequency,\n      talent.ticks,\n    ];\n  };\n}\n\nexport function isTalent(arg: any): arg is Talent {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"number\";\n  const isFlawCheck =\n    arg.isFlaw !== undefined && typeof arg.isFlaw == \"boolean\";\n  const prerequisiteCheck =\n    arg.prerequisite !== undefined && typeof arg.prerequisite == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"boolean\";\n  const stressCheck = arg.stress !== undefined && typeof arg.stress == \"string\";\n  const triggerCheck =\n    arg.trigger !== undefined && typeof arg.trigger == \"string\";\n  const triggerFrequencyCheck =\n    arg.triggerFrequency !== undefined &&\n    typeof arg.triggerFrequency == \"string\";\n  const ticksCheck = arg.ticks !== undefined && typeof arg.ticks == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    costCheck &&\n    isFlawCheck &&\n    prerequisiteCheck &&\n    effectCheck &&\n    typeCheck &&\n    stressCheck &&\n    triggerCheck &&\n    triggerFrequencyCheck &&\n    ticksCheck\n  );\n}\n","import IEntity from \"./IEntity\";\nimport {\n  StringPair,\n  NumberPair,\n  SpellSource,\n  SpellRite,\n  SpellDuration,\n  SpellRange,\n  SpellSchool,\n  SpellTarget,\n  SpellDrainType,\n  SpellLevel,\n  SpellCastTime,\n  SpellScalingEffect,\n  SpellAoeRadius,\n  SpellDirectEffects,\n  SpellProjectileType,\n  SpellProjectileNumber,\n  SpellDamageType,\n  SpellTargetingType,\n  SpellLosRange,\n  SpellSize,\n  SpellPureDamage,\n  SpellHp,\n} from \"./SpellValues\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  source: StringPair;\n  castTime: StringPair;\n  rite: StringPair;\n  duration: StringPair;\n  durationText: string;\n  range: StringPair;\n  school: StringPair;\n  effect: string;\n  mastery: string;\n  resist: string;\n  drain: number;\n  masteryDrain: number;\n\n  drainType: StringPair;\n  scalingEffect: StringPair;\n  spellTarget: StringPair;\n  aoeRadius: StringPair;\n  damage: StringPair[];\n  directEffects: StringPair;\n  level: NumberPair;\n  projectileType: StringPair;\n  projectileNumber: StringPair;\n  damageType: StringPair;\n  targetingType: StringPair;\n  losRange: StringPair;\n  pureDamage: StringPair;\n  size: StringPair;\n  hp: StringPair;\n  chargeable: boolean;\n  needsMaterial: boolean;\n\n  constructor(\n    id?: number,\n    name?: string,\n    source?: StringPair,\n    castTime?: StringPair,\n    rite?: StringPair,\n    duration?: StringPair,\n    durationText?: string,\n    range?: StringPair,\n    school?: StringPair,\n    effect?: string,\n    mastery?: string,\n    resist?: string,\n    drain?: number,\n    masteryDrain?: number,\n\n    scalingEffect?: StringPair,\n    spellTarget?: StringPair,\n    aoeRadius?: StringPair,\n    damage?: StringPair[],\n    directEffects?: StringPair,\n    level?: NumberPair,\n    projectileType?: StringPair,\n    projectileNumber?: StringPair,\n    damageType?: StringPair,\n    targetingType?: StringPair,\n    losRange?: StringPair,\n    drainType?: StringPair,\n    pureDamage?: StringPair,\n    size?: StringPair,\n    hp?: StringPair,\n    chargeable?: boolean,\n    needsMaterial?: boolean\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.source = source || SpellSource.NONE;\n    this.castTime = castTime || SpellCastTime.NONE;\n    this.rite = rite || SpellRite.NONE;\n    this.duration = duration || SpellDuration.NONE;\n    this.durationText = durationText || \"\";\n    this.range = range || SpellRange.NONE;\n    this.school = school || SpellSchool.NONE;\n    this.effect = effect || \"\";\n    this.mastery = mastery || \"\";\n    this.resist = resist || \"\";\n    this.drain = drain || 0;\n    this.masteryDrain = masteryDrain || 0;\n\n    this.scalingEffect = scalingEffect || SpellScalingEffect.NONE;\n    this.spellTarget = spellTarget || SpellTarget.NONE;\n    this.aoeRadius = aoeRadius || SpellAoeRadius.NONE;\n    this.damage = damage || [];\n    this.directEffects = directEffects || SpellDirectEffects.NONE;\n    this.level = level || SpellLevel.NONE;\n    this.projectileType = projectileType || SpellProjectileType.NONE;\n    this.projectileNumber = projectileNumber || SpellProjectileNumber.NONE;\n    this.damageType = damageType || SpellDamageType.NONE;\n    this.targetingType = targetingType || SpellTargetingType.NONE;\n    this.losRange = losRange || SpellLosRange.NONE;\n    this.drainType = drainType || SpellDrainType.NONE;\n    this.pureDamage = pureDamage || SpellPureDamage.NONE;\n    this.size = size || SpellSize.NONE;\n    this.hp = hp || SpellHp.NONE;\n    this.chargeable = chargeable || false;\n    this.needsMaterial = needsMaterial || false;\n  }\n\n  static calcDrain = (spell: Spell): number => {\n    let drain = 0;\n    drain += spell.drainType ? spell.drainType.drain : 0;\n    drain += spell.school ? spell.school.drain : 0;\n    drain += spell.duration ? spell.duration.drain : 0;\n    drain += spell.spellTarget ? spell.spellTarget.drain : 0;\n    drain += spell.rite ? spell.rite.drain : 0;\n    drain += spell.range ? spell.range.drain : 0;\n    drain += spell.source ? spell.source.drain : 0;\n    drain += spell.level ? spell.level.drain : 0;\n    drain += spell.chargeable ? -1 : 0;\n    drain += spell.needsMaterial ? -1 : 0;\n    drain += spell.targetingType ? spell.targetingType.drain : 0;\n    drain += spell.projectileType ? spell.projectileType.drain : 0;\n    drain += spell.projectileNumber ? spell.projectileNumber.drain : 0;\n    drain += spell.losRange ? spell.losRange.drain : 0;\n    drain += spell.aoeRadius ? spell.aoeRadius.drain : 0;\n    drain += spell.damage[0] ? spell.damage[0].drain : 0;\n    drain += spell.damage[1] ? spell.damage[1].drain : 0;\n    drain += spell.damage[2] ? spell.damage[2].drain : 0;\n    drain += spell.damageType ? spell.damageType.drain : 0;\n    drain += spell.scalingEffect ? spell.scalingEffect.drain : 0;\n    drain += spell.directEffects ? spell.directEffects.drain : 0;\n    drain += spell.size ? spell.size.drain : 0;\n    drain += spell.hp ? spell.hp.drain : 0;\n    drain += spell.pureDamage ? spell.pureDamage.drain : 0;\n    return drain;\n  };\n\n  static makeCsv = (spell: Spell): any[] => {\n    return [\n      spell.id,\n      spell.name,\n      spell.source.label,\n      spell.castTime.label,\n      spell.rite.label,\n      spell.duration.label,\n      spell.durationText,\n      spell.range.label,\n      spell.school.label,\n      spell.effect,\n      spell.mastery,\n      spell.resist,\n      spell.drain,\n      spell.masteryDrain,\n      spell.scalingEffect.label,\n      spell.spellTarget.label,\n      spell.aoeRadius.label,\n      spell.damage[0].label + \", \" +spell.damage[1].label + \", \" +spell.damage[2].label,\n      spell.directEffects.label,\n      spell.level.label,\n      spell.projectileType.label,\n      spell.projectileNumber.label,\n      spell.damageType.label,\n      spell.targetingType.label,\n      spell.losRange.label,\n      spell.drainType.label,\n      spell.pureDamage.label,\n      spell.size.label,\n      spell.hp.label,\n      spell.chargeable,\n      spell.needsMaterial,\n    ];\n  };\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourceCheck = arg.source !== undefined && typeof arg.source == \"string\";\n  const castTimeCheck =\n    arg.castTime !== undefined && typeof arg.castTime == \"string\";\n  const riteCheck = arg.rite !== undefined && typeof arg.rite == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const masteryCheck =\n    arg.mastery !== undefined && typeof arg.mastery == \"string\";\n  const resistCheck = arg.resist !== undefined && typeof arg.resist == \"string\";\n  const drainCheck = arg.drain !== undefined && typeof arg.drain == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    sourceCheck &&\n    castTimeCheck &&\n    riteCheck &&\n    durationCheck &&\n    rangeCheck &&\n    schoolCheck &&\n    effectCheck &&\n    damageCheck &&\n    masteryCheck &&\n    resistCheck &&\n    drainCheck\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import IEntity from \"./IEntity\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  hp: number;\n  abilityModifier: string;\n  size: string;\n  stamina: number;\n  talents: string[];\n  flaws: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    hp?: number,\n    abilityModifier?: string,\n    size?: string,\n    stamina?: number,\n    talents?: string[],\n    flaws?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.abilityModifier = abilityModifier || \"\";\n    this.size = size || \"\";\n    this.stamina = stamina || 0;\n    this.talents = talents || [];\n    this.flaws = flaws || [];\n  }\n\n  static makeCsv = (race: Race): any[] => {\n    return [\n      race.id,\n      race.name,\n      race.hp,\n      race.abilityModifier,\n      race.size,\n      race.stamina,\n      race.talents,\n      race.flaws,\n    ];\n  };\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const abilityModifierCheck =\n    arg.abilityModifier !== undefined && typeof arg.abilityModifier == \"number\";\n  const talentsCheck = arg.talents !== undefined && Array.isArray(arg.talents);\n  const flawsCheck = arg.flaws !== undefined && Array.isArray(arg.flaws);\n\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    abilityModifierCheck &&\n    talentsCheck &&\n    flawsCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n"],"sourceRoot":""}