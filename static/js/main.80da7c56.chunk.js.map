{"version":3,"sources":["components/SearchbarStyle.tsx","components/theme/Theme.tsx","components/Loading.tsx","components/theme/MyThemeProvider.tsx","logo192.png","components/navigation/Header.tsx","components/navigation/NavButton.tsx","components/navigation/NavMenu.tsx","components/navigation/Navigation.tsx","components/AppWrapper.tsx","App.tsx","serviceWorker.js","index.js"],"names":["Tooltip","styled","span","theme","main","highlight","LeftTooltip","RightTooltip","Bar","div","open","backgroundColor","FixedBar","SearchBar","buttons","color","CreateButton","button","hoverColor","ExportButton","lightTheme","disabled","height","input","header","tile","backgroundColorLink","headerColor","boxShadow","nav","size","small","width","medium","large","darkTheme","LoadingSpinner","Spinner","Icon","icon","faDiceD20","id","r","cx","cy","stopColor","offset","CompleteLoadingSpinner","CompleteWrapper","LocalLoadingSpinner","Wrapper","LocalSpinner","FontAwesomeIcon","ctx","createContext","undefined","c","useContext","Error","Provider","createCtx","useTheme","CtxProvider","MyThemeProvider","children","useState","setTheme","useEffect","localTheme","localStorage","getItem","setItem","value","module","exports","Header","NameWrapper","Logo","src","LogoImg","Name","HomeCredits","packageJson","version","img","NavButton","setOpen","Button","onClick","NavMenu","location","useLocation","Menu","TopSide","to","className","pathname","faHome","MiddleSide","LeftSide","faTable","RightSide","faMeteor","BottomSide","Seperator","faChartPie","faCog","Navigation","Nav","AppWrapper","moveNav","mode","handlers","useSwipeable","onSwipedRight","onSwipedLeft","Content","App","ToEntity","lazy","EntityOverview","Help","Home","Options","Statistics","fallback","exact","path","component","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.80da7c56.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst Tooltip = styled.span`\n  visibility: hidden;\n  width: 120px;\n  font-size: 16px;\n  background-color: ${({ theme }) => theme.main.highlight};\n  color: #fff;\n  text-align: center;\n  border-radius: 10px;\n  padding: 5px 0;\n  margin-top: -5px;\n  position: absolute;\n  z-index: 1;\n  opacity: 0.6;\n  transition: 0.3s;\n`;\n\nexport const LeftTooltip = styled(Tooltip)`\n  right: 150%;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    left: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent transparent transparent ${({ theme }) => theme.main.highlight};\n  }\n`;\n\nexport const RightTooltip = styled(Tooltip)`\n  left: 150%;\n\n  &::after {\n    content: \"\";\n    position: absolute;\n    top: 50%;\n    right: 100%;\n    margin-top: -5px;\n    border-width: 5px;\n    border-style: solid;\n    border-color: transparent ${({ theme }) => theme.main.highlight} transparent transparent;\n  }\n`;\n\ntype SearchMode = {\n  open?: boolean;\n};\n\nexport const Bar = styled.div<SearchMode>`\n  position: absolute;\n  z-index: 50;\n\n  transition: transform 0.3s ease-in-out;\n  transform: ${({ open }) => (open ? \"translateY(0)\" : \"translateY(-100%)\")};\n\n  height: auto;\n  min-height: 30px;\n  min-width: calc(100% - 125px);\n  padding: 10px 10px 10px 10px;\n  background: ${({ theme }) => theme.main.backgroundColor};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nexport const FixedBar = styled(Bar)<SearchMode>`\n  position: fixed;\n  top: 40px;\n  left: 100px;\n  z-index: 900;\n\n  @media (max-width: 576px) {\n    min-width: calc(100% - 20px);\n    left: 0px;\n  }\n`;\n\nexport const SearchBar = styled.div<SearchMode>`\n  position: absolute;\n  bottom: -35px;\n  left: calc(50% - 17px);\n\n  height: 40px;\n  width: 40px;\n  transform: rotate(45deg);\n  color: ${({ theme }) => theme.buttons.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  text-align: center;\n  line-height: 40px;\n\n  @media (max-width: 576px) {\n    left: calc(50% - 20px);\n  }\n\n  svg {\n    transform: rotate(-45deg);\n  }\n`;\n\nexport const CreateButton = styled.button`\n    position: fixed;\n    bottom: 10px;\n    right: 10px;\n    top: auto;\n  \n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n    box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.75);\n    border: none;\n    padding 10px;\n    box-sizing:content-box;\n    line-height: 20px;\n    cursor: pointer;\n  \n    width: 30px;\n    height: 30px;\n    border-radius: 40px;\n    text-decoration: none;\n  \n    &:hover {\n      color: ${({ theme }) => theme.buttons.hoverColor};\n      ${LeftTooltip} {\n        opacity: 1;\n        visibility: visible;\n      }\n    }\n  `;\n\nexport const ExportButton = styled(CreateButton)`\n  bottom: 70px;\n`;\n\nexport const FieldGroup = styled.div`\n  flex: 2 1 auto;\n  display: flex;\n  flex-wrap: nowrap;\n  justify-content: space-around;\n`;\n","interface Theme {\n  buttons: {\n    color: string;\n    backgroundColor: string;\n    disabled: string;\n    hoverColor: string;\n    height: string;\n  };\n  input: {\n    color: string;\n    backgroundColor: string;\n  };\n  main: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  header: {\n    backgroundColor: string;\n    color: string;\n    highlight: string;\n  };\n  tile: {\n    backgroundColor: string;\n    backgroundColorLink: string;\n    color: string;\n    headerColor: string;\n    boxShadow: string;\n  };\n  nav: {\n    size: {\n      small: {\n        width: string;\n        height: string;\n      };\n      medium: {\n        width: string;\n        height: string;\n      };\n      large: {\n        width: string;\n        height: string;\n      };\n    };\n  };\n}\n\nexport const lightTheme: Theme = {\n  buttons: {\n    color: \"white\",\n    backgroundColor: \"#7033FF\",\n    disabled: \"#E1D0E5\",\n    hoverColor: \"darkgrey\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"inherit\",\n    backgroundColor: \"white\",\n  },\n  main: {\n    backgroundColor: \"#F3F5F8\",\n    color: \"\",\n    highlight: \"#8000ff\",\n  },\n  header: {\n    color: \"white\",\n    backgroundColor: \"#7033FF\",\n    highlight: \"#8000ff\",\n  },\n  tile: {\n    backgroundColor: \"white\",\n    backgroundColorLink: \"lightslategray\",\n    color: \"darkgrey\",\n    headerColor: \"black\",\n    boxShadow: \"\",\n  },\n  nav: {\n    size: {\n      small: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      medium: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n      large: {\n        width: \"15em\",\n        height: \"15em\",\n      },\n    },\n  },\n};\n\nexport const darkTheme: Theme = {\n  buttons: {\n    color: \"#fff\",\n    backgroundColor: \"#202020\",\n    disabled: \"#E1D0E5\",\n    hoverColor: \"#191D38\",\n    height: \"20px\",\n  },\n  input: {\n    color: \"#435E70\",\n    backgroundColor: \"#202020\",\n  },\n  main: {\n    backgroundColor: \"#222222\",\n    color: \"\",\n    highlight: \"#435E70\",\n  },\n  header: {\n    color: \"white\",\n    backgroundColor: \"#222222\",\n    highlight: \"#435E70\",\n  },\n  tile: {\n    backgroundColor: \"#3E3E3E\",\n    backgroundColorLink: \"#435E70\",\n    headerColor: \"#2e2e2e\",\n    color: \"white\",\n    boxShadow: \"\",\n  },\n  nav: {\n    size: {\n      ...lightTheme.nav.size,\n    },\n  },\n};\n\nexport default Theme;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDiceD20 } from \"@fortawesome/free-solid-svg-icons\";\n\nexport const LoadingSpinner = () => (\n  <Spinner>\n    <Icon icon={faDiceD20} />\n    <svg width=\"0\" height=\"0\">\n      <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n        <stop stopColor=\"#350069\" offset=\"0\" />\n        <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n      </radialGradient>\n    </svg>\n  </Spinner>\n);\n\nexport const CompleteLoadingSpinner = () => (\n  <CompleteWrapper>\n    <Spinner>\n      <Icon icon={faDiceD20} />\n      <svg width=\"0\" height=\"0\">\n        <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n          <stop stopColor=\"#350069\" offset=\"0\" />\n          <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n        </radialGradient>\n      </svg>\n    </Spinner>\n  </CompleteWrapper>\n);\n\nexport const LocalLoadingSpinner = () => (\n  <Wrapper>\n    <LocalSpinner>\n      <Icon icon={faDiceD20} />\n      <svg width=\"0\" height=\"0\">\n        <radialGradient id=\"rg\" r=\"150%\" cx=\"30%\" cy=\"107%\">\n          <stop stopColor=\"#350069\" offset=\"0\" />\n          <stop stopColor=\"#B973FF\" offset=\"0.9\" />\n        </radialGradient>\n      </svg>\n    </LocalSpinner>\n  </Wrapper>\n);\n\nconst Wrapper = styled.div`\n  height: 100px;\n  width: 100px;\n  margin: 1em auto;\n`;\n\nconst CompleteWrapper = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n`;\n\nconst LocalSpinner = styled.div`\n  width: 40px;\n  height: 40px;\n  font-size: 40px;\n\n  svg * {\n    fill: url(#rg);\n  }\n`;\n\nconst Spinner = styled(LocalSpinner)`\n  position: fixed;\n  z-index: 940;\n  top: calc(50% - 20px);\n  right: calc(50% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  width: 100%;\n  height: 100%;\n  border-radius: 150px;\n  border: 5px solid ${({ theme }) => theme.main.backgroundColor};\n  animation: bounce 2s linear infinite;\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n\n  @-webkit-keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      -webkit-transform: translateY(0);\n    }\n    50% {\n      -webkit-transform: translateY(-5px);\n    }\n  }\n\n  @keyframes bounce {\n    0%,\n    20%,\n    40%,\n    60%,\n    80%,\n    100% {\n      transform: translateY(0);\n    }\n    50% {\n      transform: translateY(-5px);\n    }\n  }\n`;\n","import React, { useEffect, createContext, useContext, useState } from \"react\";\nimport Theme, { darkTheme, lightTheme } from \"./Theme\";\nimport { ThemeProvider } from \"styled-components\";\n\nexport function createCtx<ContextType>() {\n  const ctx = createContext<ContextType | undefined>(undefined);\n  function useCtx() {\n    const c = useContext(ctx);\n    if (!c) throw new Error(\"useCtx must be inside a Provider with a value\");\n    return c;\n  }\n  return [useCtx, ctx.Provider] as const;\n}\n\ntype ThemeContextType = {\n  theme: Theme;\n  setTheme: (value: Theme) => void;\n};\n\nexport const [useTheme, CtxProvider] = createCtx<ThemeContextType>();\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const MyThemeProvider = ({ children }: Props) => {\n  const [theme, setTheme] = useState(darkTheme);\n\n  useEffect(() => {\n    let localTheme = localStorage.getItem(\"theme\");\n    if (localTheme !== undefined) {\n      if (localTheme === \"light\") {\n        setTheme(lightTheme);\n        localStorage.setItem(\"theme\", \"light\");\n      } else {\n        setTheme(darkTheme);\n        localStorage.setItem(\"theme\", \"dark\");\n      }\n    } else {\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  }, []);\n\n  return (\n    <CtxProvider value={{ theme, setTheme }}>\n      <ThemeProvider theme={theme}>{children}</ThemeProvider>\n    </CtxProvider>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/media/logo192.a0b12edf.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport packageJson from \"../../../package.json\";\nimport LogoImg from \"../../logo192.png\";\n\nconst Header = () => {\n  return (\n    <Bar>\n      <NameWrapper>\n        <Logo src={LogoImg} />\n        <Name>SkirmishTome</Name>\n      </NameWrapper>\n      <HomeCredits>v{packageJson.version}</HomeCredits>\n    </Bar>\n  );\n};\n\nexport default Header;\n\nconst Bar = styled.div`\n  width: calc(100% - 20px);\n  height: 30px;\n  line-height: 30px;\n  padding: 10px 10px 10px 10px;\n  background-color: ${({ theme }) => theme.header.backgroundColor};\n  color: ${({ theme }) => theme.header.color};\n  box-shadow: 0px 5px 5px 0px rgba(0, 0, 0, 0.25);\n  display: flex;\n  position: fixed;\n  justify-content: space-between;\n  z-index: 1000;\n  top: 0px;\n  left: 0px;\n  right: 0px;\n\n  @media (max-width: 576px) {\n    width: calc(100% - 60px);\n    padding: 10px 10px 10px 50px;\n  }\n`;\n\nconst NameWrapper = styled.div`\n  width: 150px;\n  svg {\n    float: left;\n    font-size: 30px;\n    margin-right: 5px;\n  }\n`;\n\nconst Name = styled.div`\n  width: 95px;\n  height: 30px;\n  font-size: 20px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  float: left;\n`;\n\nconst HomeCredits = styled.div`\n  width: 60px;\n  height: 30px;\n  font-size: 10px;\n  font-family: \"Quicksand\", sans-serif;\n  -webkit-font-smoothing: antialiased;\n  text-shadow: none;\n  line-height: 30px;\n  text-align: center;\n`;\n\nconst Logo = styled.img`\n  height: 30px;\n  float: left;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst NavButton = ({ open, setOpen }: $Props) => {\n  return (\n    <Button open={open} onClick={() => setOpen(!open)}>\n      <div />\n      <div />\n      <div />\n    </Button>\n  );\n};\n\nexport default NavButton;\n\ntype ButtonType = {\n  open?: boolean;\n};\n\nconst Button = styled.button<ButtonType>`\n  position: fixed;\n  top: 15px;\n  left: 20px;\n  display: none;\n  flex-direction: column;\n  justify-content: space-around;\n  width: 20px;\n  height: 20px;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  padding: 0;\n  z-index: 1001;\n\n  &:focus {\n    outline: none;\n  }\n\n  div {\n    width: 20px;\n    height: 2px;\n    background: ${({ theme }) => theme.buttons.color};\n    border-radius: 10px;\n    transition: all 0.3s linear;\n    position: relative;\n    transform-origin: 1px;\n\n    :first-child {\n      transform: ${({ open }) => (open ? \"rotate(45deg)\" : \"rotate(0)\")};\n    }\n\n    :nth-child(2) {\n      opacity: ${({ open }) => (open ? \"0\" : \"1\")};\n      transform: ${({ open }) => (open ? \"translateX(20px)\" : \"translateX(0)\")};\n    }\n\n    :nth-child(3) {\n      transform: ${({ open }) => (open ? \"rotate(-45deg)\" : \"rotate(0)\")};\n    }\n  }\n\n  @media (max-width: 576px) {\n    display: flex;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCog, faChartPie, faHome, faTable, faMeteor } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { RightTooltip } from \"../SearchbarStyle\";\nimport { GiSwordsPower, GiWomanElfFace } from \"react-icons/gi\";\n\ninterface $Props {\n  open: boolean;\n}\n\nconst NavMenu = ({ open }: $Props) => {\n  const location = useLocation();\n\n  return (\n    <Menu open={open}>\n      <TopSide>\n        <Link\n          to=\"/home\"\n          className={\n            location.pathname === \"/home\" || location.pathname === \"/\" ? \"menuItemActiv\" : \"\"\n          }\n        >\n          <FontAwesomeIcon icon={faHome} />\n          <RightTooltip>Home</RightTooltip>\n        </Link>\n      </TopSide>\n      <MiddleSide>\n        <LeftSide>\n          <Link\n            to=\"/randomTable-overview\"\n            className={location.pathname === \"/randomTable-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faTable} />\n            <RightTooltip>Random Tables</RightTooltip>\n          </Link>\n        </LeftSide>\n        <RightSide>\n          <Link\n            to=\"/spell-overview\"\n            className={location.pathname === \"/spell-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <FontAwesomeIcon icon={faMeteor} />\n            <RightTooltip>Spells</RightTooltip>\n          </Link>\n          <Link\n            to=\"/talent-overview\"\n            className={location.pathname === \"/talent-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiSwordsPower />\n            <RightTooltip>Talents</RightTooltip>\n          </Link>\n          <Link\n            to=\"/race-overview\"\n            className={location.pathname === \"/race-overview\" ? \"menuItemActiv\" : \"\"}\n          >\n            <GiWomanElfFace />\n            <RightTooltip>Races</RightTooltip>\n          </Link>\n        </RightSide>\n      </MiddleSide>\n      <BottomSide>\n        <Seperator />\n        <Link\n          to=\"/statistics\"\n          className={location.pathname === \"/statistics\" ? \"menuItemActiv\" : \"\"}\n        >\n          <FontAwesomeIcon icon={faChartPie} />\n          <RightTooltip>Statistics</RightTooltip>\n        </Link>\n        <Link to=\"/options\" className={location.pathname === \"/options\" ? \"menuItemActiv\" : \"\"}>\n          <FontAwesomeIcon icon={faCog} />\n          <RightTooltip>Options</RightTooltip>\n        </Link>\n      </BottomSide>\n    </Menu>\n  );\n};\n\nexport default NavMenu;\n\ntype MenuType = {\n  open?: boolean;\n};\n\nexport const Menu = styled.div<MenuType>`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  background: ${({ theme }) => theme.main.backgroundColor};\n  height: calc(100vh - 1.5em - 55px);\n  text-align: center;\n  padding: 1rem;\n\n  overflow: visible;\n\n  position: fixed;\n  z-index: 950;\n  top: 50px;\n  left: 0;\n\n  @media (max-width: 576px) {\n    transition: transform 0.3s ease-in-out;\n    transform: ${({ open }) => (open ? \"translateX(0)\" : \"translateX(-100%)\")};\n  }\n`;\n\nconst Seperator = styled.div`\n  border-bottom: 2px solid ${({ theme }) => theme.tile.backgroundColor};\n  flex: 1 1 auto;\n  min-width: 100%;\n  max-height: 0px;\n  margin-top: -1px;\n  margin-bottom: -1px;\n`;\n\nconst TopSide = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  width: calc(100% - 10px);\n\n  svg {\n    margin-right: 5px;\n  }\n\n  a {\n    flex: 1 1 auto;\n    max-height: 20px;\n    font-size: 20px;\n    text-align: center;\n    padding: 0.75rem 0;\n    color: ${({ theme }) => theme.tile.color};\n    text-decoration: none;\n    transition: color 0.3s linear;\n\n    position: relative;\n    display: inline-block;\n\n    svg {\n      padding: 0px;\n      margin: 0px;\n    }\n  }\n\n  a:hover {\n    color: ${({ theme }) => theme.tile.color};\n    ${RightTooltip} {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n\n  a.menuItemActiv {\n    color: ${({ theme }) => theme.main.highlight};\n  }\n`;\nconst MiddleSide = styled.div``;\nconst BottomSide = styled(TopSide)``;\nconst LeftSide = styled(TopSide)`\n  width: 32px;\n  float: left;\n`;\nconst RightSide = styled(LeftSide)`\n  margin-left: 5px;\n  padding-left: 5px;\n  border-left: 2px solid ${({ theme }) => theme.tile.backgroundColor};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport NavButton from \"./NavButton\";\nimport NavMenu from \"./NavMenu\";\n\ninterface $Props {\n  open: boolean;\n  setOpen: (value: boolean) => void;\n}\n\nconst Navigation = ({ open, setOpen }: $Props) => {\n  return (\n    <Nav>\n      <NavButton open={open} setOpen={setOpen} />\n      <NavMenu open={open} />\n    </Nav>\n  );\n};\n\nexport default Navigation;\n\nconst Nav = styled.div`\n  max-width: 100px;\n  height: auto;\n  background-color: ${({ theme }) => theme.main.backgroundColor}\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import React, { ReactNode, useState } from \"react\";\nimport { useSwipeable } from \"react-swipeable\";\nimport styled from \"styled-components\";\nimport Header from \"./navigation/Header\";\nimport Navigation from \"./navigation/Navigation\";\n\ninterface $Props {\n  children: ReactNode;\n}\n\nconst AppWrapper = ({ children }: $Props) => {\n  const [open, setOpen] = useState(false);\n\n  const moveNav = (mode: string) => {\n    if (mode === \"open\") {\n      setOpen(true);\n    } else {\n      setOpen(false);\n    }\n  };\n\n  const handlers = useSwipeable({\n    onSwipedRight: () => moveNav(\"open\"),\n    onSwipedLeft: () => moveNav(\"close\"),\n  });\n\n  return (\n    <App {...handlers}>\n      <Header />\n      <Navigation open={open} setOpen={setOpen} />\n      <Content>{children}</Content>\n    </App>\n  );\n};\n\nexport default AppWrapper;\n\nconst App = styled.div`\n  padding-top: 4rem;\n  width: 100%;\n  height: 100%;\n  min-height: calc(100vh - 4rem);\n  background-color: ${({ theme }) => theme.main.backgroundColor};\n  display: flex;\n  flex-wrap: no-wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n  overflow-x: hidden;\n`;\n\nconst Content = styled.div`\n  margin-left: 105px;\n  width: 100%;\n\n  @media (max-width: 576px) {\n    margin-left: 0px;\n  }\n`;\n","import React, { lazy, Suspense } from \"react\";\nimport { Switch, Route } from \"react-router\";\nimport { MyThemeProvider } from \"./components/theme/MyThemeProvider\";\nimport { CompleteLoadingSpinner } from \"./components/Loading\";\nimport AppWrapper from \"./components/AppWrapper\";\nimport { HashRouter } from \"react-router-dom\";\n\nconst ToEntity = lazy(() => import(\"./components/general_elements/details/ToEntity\"));\nconst EntityOverview = lazy(() => import(\"./components/general_elements/EntityOverview\"));\n\nconst Help = lazy(() => import(\"./components/help/Help\"));\nconst Home = lazy(() => import(\"./components/home/Home\"));\nconst Options = lazy(() => import(\"./components/options/Options\"));\nconst Statistics = lazy(() => import(\"./components/statistics/Statistics\"));\n\nconst App = () => {\n  return (\n    <MyThemeProvider>\n      <HashRouter>\n        <AppWrapper>\n          <Suspense fallback={<CompleteLoadingSpinner />}>\n            <Switch>\n              <Route exact path=\"/\" component={Home}></Route>\n              <Route exact path=\"/home\" component={Home}></Route>\n              <Route path=\"/spell-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/spell-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/spell-overview\" component={EntityOverview}></Route>\n              <Route path=\"/race-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/race-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/race-overview\" component={EntityOverview}></Route>\n              <Route path=\"/talent-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/talent-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/talent-overview\" component={EntityOverview}></Route>\n              <Route path=\"/randomTable-detail/name/:name\" component={ToEntity}></Route>\n              <Route path=\"/randomTable-detail/id/:id\" component={ToEntity}></Route>\n              <Route path=\"/randomTable-overview\" component={EntityOverview}></Route>\n              <Route path=\"/statistics\" component={Statistics}></Route>\n              <Route path=\"/options\" component={Options}></Route>\n              <Route path=\"/help\" component={Help}></Route>\n            </Switch>\n          </Suspense>\n        </AppWrapper>\n      </HashRouter>\n    </MyThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n\n"],"sourceRoot":""}