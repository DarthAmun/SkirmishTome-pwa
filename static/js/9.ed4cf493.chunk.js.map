{"version":3,"sources":["components/general_elements/SmallFormatedText.tsx","components/entities/talents/TalentTile.tsx","../node_modules/peerjs/dist sync","services/OptionService.tsx","components/p2p/P2PReciver.tsx","components/options/GeneralOptions.tsx","components/options/TalentsOptions.tsx","components/form_elements/FileField.tsx","components/form_elements/ImportField.tsx","components/options/DiscordOptions.tsx","components/options/Options.tsx","database/SkirmishDB.tsx","services/DatabaseService.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","hooks/webhookHook.tsx","services/DiscordService.tsx","components/form_elements/StringField.tsx","services/DiceService.tsx","components/general_elements/LinkCheck.tsx","data/Talent.tsx","components/general_elements/TabBar.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx"],"names":["SmallFormatedText","text","webhook","useWebhook","useState","formatedText","setFormatedText","history","useHistory","cut","str","cutStart","cutEnd","substr","rollDiscord","useCallback","command","includes","rollCommand","result","undefined","sendMessage","newCommand","value","parseInt","replaceAll","krit","fail","rollString","formatLink","parts","split","formattedParts","forEach","part","index","codePart","linkParts","linkEntity","push","TextPart","key","DiscordPart","onClick","LinkCheck","type","name","link","Link","formatTable","textPart","table","tableRows","isHead","map","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","useEffect","FormatedTextContainer","styled","div","span","theme","tile","backgroundColorLink","color","th","input","backgroundColor","td","TalentTile","talent","Tile","to","id","$isflaw","isFlaw","Cost","cost","Name","PropWrapper","Prop","stress","prerequisite","props","boxShadow","main","highlight","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","scanImportFileTest","json","fileName","callback","a","promList","Array","isArray","obj","isTalent","saveNew","Promise","all","exportAll","filename","reciveAllPromise","spells","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","P2PReciver","changeData","reload","peerId","setId","loading","isLoading","error","setError","state","setState","Peer","host","secure","peer","conn","connect","on","data","console","log","Loading","StringField","label","onChange","Icon","icon","faExclamationCircle","TextButton","faCheck","FontAwesomeIcon","GeneralOptions","useTheme","setTheme","General","OptionSection","SelectionTitle","Button","darkTheme","lightTheme","localStorage","setItem","button","buttons","TalentsOptions","amount","triggerDeleteAll","send","setSend","OptionTab","SectionRow","SectionText","IconButton","faFileExport","tableName","reciveAll","entity","faTrashAlt","faPaperPlane","P2PSender","mode","ImportModus","FileField","accept","isMulti","transform","Field","LabelText","Input","files","multiple","ImportField","modus","setFiles","Files","faFileImport","file","fileList","from","changeFile","FileTile","succCount","setSucc","maxCount","setMax","scanImportFile","listOfNew","newMax","length","NORMAL","newEntitiy","Object","entries","newTableName","bulkList","filter","saveNewFromList","fileReader","FileReader","onloadend","content","parse","toString","readAsText","FileWrapper","completed","Math","round","isLabelVisible","bgcolor","height","margin","DiscordOptions","getItem","setWebhook","webhookUser","setWebhookUser","Options","activeTab","setTab","talentAmount","setTalentAmount","isReload","setData","readString","usePapaParse","useCSVDownloader","CSVDownloader","Type","csvBackup","setBackup","reciveCount","backup","returnTile","worker","complete","results","csv","handleCsvUpload","Date","getFullYear","getMonth","bom","config","delimiter","TabBar","children","tab","deleteAll","OptionSectionLarge","SkirmishDB","randomTables","talents","races","version","stores","Dexie","updateWithCallback","db","open","then","update","finally","close","put","prom","entities","refinedEntities","bulkPut","remove","delete","toArray","array","count","reciveCountPromise","recivePromiseByAttribute","where","equalsIgnoreCase","recivePromise","get","recivePromiseByAttributeCount","equals","applyFilters","filters","test","fieldName","hasTag","fieldPart","toLowerCase","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAllFilteredPromise","reciveAttributeSelectionPromise","attribute","orderBy","uniqueKeys","createNewWithId","clear","exportFilteredFromTable","floatLeft","disabled","style","SimpleButton","left","DisabledSimpleButton","hoverColor","hook","avatar","request","XMLHttpRequest","setRequestHeader","params","username","avatar_url","sendEmbedMessage","formatDiscordText","placeholder","commands","newCommands","trim","rolls","fullCommand","commandSplits","concat","multiplier","startsWith","com","i","newRoll","rollDie","slice","size","max","random","setLoading","entitiyFound","setEntity","newType","catch","formatIcon","TalentCategory","Talent","category","effect","trigger","triggerFrequency","ticks","this","magical","arg","nameCheck","costCheck","isFlawCheck","prerequisiteCheck","effectCheck","typeCheck","stressCheck","triggerCheck","triggerFrequencyCheck","ticksCheck","Bar","child","Tab","isActive","setName","setPeer","brokerId","min","password","characters","floor","generateBrokerId","newPeer","errorData","disconnected","destroyed","reconnect"],"mappings":"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","file":"static/js/9.ed4cf493.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { sendMessage } from \"../../services/DiscordService\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst SmallFormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20(`\" + (result - value) + \"`)\" + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <Link onClick={() => history.push(link)}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </Link>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <FormatedTextContainer>{formatedText}</FormatedTextContainer>;\n};\n\nexport default SmallFormatedText;\n\nconst FormatedTextContainer = styled.div`\n  padding: 5px;\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Talent from \"../../../data/Talent\";\nimport SmallFormatedText from \"../../general_elements/SmallFormatedText\";\n\ninterface $Props {\n  talent: Talent;\n}\n\nconst TalentTile = ({ talent }: $Props) => {\n  return (\n    <Tile to={\"/talent-detail/id/\" + talent.id} $isflaw={talent.isFlaw}>\n      <Cost>\n        <b>{talent.cost}</b>\n      </Cost>\n\n      <Name>\n        <b>{talent.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <Prop>{talent.type ? talent.stress : \"Passive\"}</Prop>\n        <SmallFormatedText text={talent.prerequisite} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default TalentTile;\n\ntype type = {\n  $isflaw: boolean;\n};\n\nconst Tile = styled(Link)<type>`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  ${(props) => {\n    if (props.$isflaw) {\n      return `background-color: ${props.theme.input.backgroundColor};`;\n    } else {\n      return `background-color: ${props.theme.tile.backgroundColor};`;\n    }\n  }}\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n`;\n\nconst Cost = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: white;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 104;","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Talent, { isTalent } from \"../data/Talent\";\n\nexport const scanImportFileTest = async (json: any, fileName: string, callback: () => void) => {\n  let promList: Promise<any>[] = [];\n\n  if (!Array.isArray(json)) {\n    json = [json];\n  }\n\n  json.forEach((obj: any) => {\n    if (isTalent(obj)) {\n      promList.push(saveNew(\"talents\", obj as Talent, fileName));\n    }\n  });\n  await Promise.all(promList);\n  callback();\n};\n\n// const scanForFormatErrors = (obj: any) => {\n//   const itemFormatErrors = findItemFromattError(obj);\n//   let itemFailCount: number = 0;\n//   for (const value of Object.entries(itemFormatErrors)) {\n//     if (!value[1]) itemFailCount++;\n//   }\n//   const gearFormatErrors = findGearFormattError(obj);\n//   let gearFailCount: number = 0;\n//   for (const value of Object.entries(gearFormatErrors)) {\n//     if (!value[1]) gearFailCount++;\n//   }\n//   const spellFormatErrors = findSpellFormattError(obj);\n//   let spellFailCount: number = 0;\n//   for (const value of Object.entries(spellFormatErrors)) {\n//     if (!value[1]) spellFailCount++;\n//   }\n//   const monsterFormatErrors = findMonsterFormattError(obj);\n//   let monsterFailCount: number = 0;\n//   for (const value of Object.entries(monsterFormatErrors)) {\n//     if (!value[1]) monsterFailCount++;\n//   }\n//   const raceFormatErrors = findRaceFormattError(obj);\n//   let raceFailCount: number = 0;\n//   for (const value of Object.entries(raceFormatErrors)) {\n//     if (!value[1]) raceFailCount++;\n//   }\n//   const subraceFormatErrors = findSubraceFormattError(obj);\n//   let subraceFailCount: number = 0;\n//   for (const value of Object.entries(subraceFormatErrors)) {\n//     if (!value[1]) subraceFailCount++;\n//   }\n//   const classFormatErrors = findClassFormattError(obj);\n//   let classFailCount: number = 0;\n//   for (const value of Object.entries(classFormatErrors)) {\n//     if (!value[1]) classFailCount++;\n//   }\n//   const subclassFormatErrors = formattSubclassFromattError(obj);\n//   let subclassFailCount: number = 0;\n//   for (const value of Object.entries(subclassFormatErrors)) {\n//     if (!value[1]) subclassFailCount++;\n//   }\n//   const selectionFormatErrors = findSelectionFormattError(obj);\n//   let selectionFailCount: number = 0;\n//   for (const value of Object.entries(selectionFormatErrors)) {\n//     if (!value[1]) selectionFailCount++;\n//   }\n\n//   let errors: any[] = [];\n//   if (\n//     itemFailCount <= gearFailCount &&\n//     itemFailCount <= spellFailCount &&\n//     itemFailCount <= raceFailCount &&\n//     itemFailCount <= subraceFailCount &&\n//     itemFailCount <= classFailCount &&\n//     itemFailCount <= subclassFailCount &&\n//     itemFailCount <= selectionFailCount &&\n//     itemFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ item: itemFormatErrors });\n//   }\n//   if (\n//     gearFailCount <= itemFailCount &&\n//     gearFailCount <= spellFailCount &&\n//     gearFailCount <= raceFailCount &&\n//     gearFailCount <= subraceFailCount &&\n//     gearFailCount <= classFailCount &&\n//     gearFailCount <= subclassFailCount &&\n//     gearFailCount <= selectionFailCount &&\n//     gearFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ gear: gearFormatErrors });\n//   }\n//   if (\n//     spellFailCount <= itemFailCount &&\n//     spellFailCount <= gearFailCount &&\n//     spellFailCount <= raceFailCount &&\n//     spellFailCount <= subraceFailCount &&\n//     spellFailCount <= classFailCount &&\n//     spellFailCount <= subclassFailCount &&\n//     spellFailCount <= selectionFailCount &&\n//     spellFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ spell: spellFormatErrors });\n//   }\n//   if (\n//     monsterFailCount <= itemFailCount &&\n//     monsterFailCount <= gearFailCount &&\n//     monsterFailCount <= raceFailCount &&\n//     monsterFailCount <= subraceFailCount &&\n//     monsterFailCount <= classFailCount &&\n//     monsterFailCount <= subclassFailCount &&\n//     monsterFailCount <= selectionFailCount &&\n//     monsterFailCount <= spellFailCount\n//   ) {\n//     errors.push({ monster: monsterFormatErrors });\n//   }\n//   if (\n//     raceFailCount <= itemFailCount &&\n//     raceFailCount <= gearFailCount &&\n//     raceFailCount <= monsterFailCount &&\n//     raceFailCount <= subraceFailCount &&\n//     raceFailCount <= classFailCount &&\n//     raceFailCount <= subclassFailCount &&\n//     raceFailCount <= selectionFailCount &&\n//     raceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ race: raceFormatErrors });\n//   }\n//   if (\n//     subraceFailCount <= itemFailCount &&\n//     subraceFailCount <= gearFailCount &&\n//     subraceFailCount <= monsterFailCount &&\n//     subraceFailCount <= raceFailCount &&\n//     subraceFailCount <= classFailCount &&\n//     subraceFailCount <= subclassFailCount &&\n//     subraceFailCount <= selectionFailCount &&\n//     subraceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subrace: subraceFormatErrors });\n//   }\n//   if (\n//     classFailCount <= itemFailCount &&\n//     classFailCount <= gearFailCount &&\n//     classFailCount <= monsterFailCount &&\n//     classFailCount <= raceFailCount &&\n//     classFailCount <= subraceFailCount &&\n//     classFailCount <= subclassFailCount &&\n//     classFailCount <= selectionFailCount &&\n//     classFailCount <= spellFailCount\n//   ) {\n//     errors.push({ class: classFormatErrors });\n//   }\n//   if (\n//     subclassFailCount <= itemFailCount &&\n//     subclassFailCount <= gearFailCount &&\n//     subclassFailCount <= monsterFailCount &&\n//     subclassFailCount <= raceFailCount &&\n//     subclassFailCount <= subraceFailCount &&\n//     subclassFailCount <= classFailCount &&\n//     subclassFailCount <= selectionFailCount &&\n//     subclassFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subclass: subclassFormatErrors });\n//   }\n//   if (\n//     selectionFailCount <= itemFailCount &&\n//     selectionFailCount <= gearFailCount &&\n//     selectionFailCount <= monsterFailCount &&\n//     selectionFailCount <= raceFailCount &&\n//     selectionFailCount <= subraceFailCount &&\n//     selectionFailCount <= classFailCount &&\n//     selectionFailCount <= subclassFailCount &&\n//     selectionFailCount <= spellFailCount\n//   ) {\n//     errors.push({ selection: selectionFormatErrors });\n//   }\n//   return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n// };\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let entity = { [tableName]: all };\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(entity)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(entity));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  const spells = await reciveAllPromise(\"spells\");\n\n  let all: any = {\n    spells: spells,\n  };\n\n  let contentType = \"application/json;charset=utf-8;\";\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n      type: contentType,\n    });\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../services/OptionService\";\nimport IEntity from \"../../data/IEntity\";\n\nimport {\n  faCheck,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thedndtome.com\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField\n        value={peerId}\n        label={\"ID to recive from\"}\n        onChange={(id) => setId(id)}\n      />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton\n            text={\"Accept\"}\n            icon={faCheck}\n            onClick={() => acceptData()}\n          />\n          <TextButton\n            text={\"Decline\"}\n            icon={faCheck}\n            onClick={() => declineData()}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../theme/Theme\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst TalentsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Talents?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"talents\", \"SkirmishTome_talents.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Talents?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"talents\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all talents`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"talents\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default TalentsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, accept, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} accept={accept} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport FileField from \"./FileField\";\nimport IEntity from \"../../data/IEntity\";\nimport { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport { saveNewFromList } from \"../../services/DatabaseService\";\n\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nexport enum ImportModus {\n  NORMAL,\n}\n\ninterface $Props {\n  modus: ImportModus;\n}\n\nconst ImportField = ({ modus }: $Props) => {\n  const [files, setFiles] = useState<File[]>([]);\n\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      setFiles(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\".json\"}\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n      <Files>\n        {files &&\n          files.map((file: File, index: number) => (\n            <FileTile key={index} modus={modus} file={file} />\n          ))}\n      </Files>\n    </>\n  );\n};\n\nexport default ImportField;\n\ninterface $FileProps {\n  file: File;\n  modus: ImportModus;\n}\n\nconst FileTile = ({ file, modus }: $FileProps) => {\n  const [succCount, setSucc] = useState<number>(0);\n  const [maxCount, setMax] = useState<number>(0);\n\n  const scanImportFile = async (json: any, fileName: string) => {\n    console.log(\"Start 5eTools Json interpreting \" + fileName);\n\n    let listOfNew: { tableName: string; newEntitiy: IEntity }[] = [];\n\n    let newMax: number = 0;\n    for (const [key, value] of Object.entries(json)) {\n      if (Array.isArray(value)) {\n        newMax += value.length;\n        if (modus === ImportModus.NORMAL) {\n          // eslint-disable-next-line\n          value.forEach((obj: any) => listOfNew.push({ tableName: key, newEntitiy: obj }));\n        }\n      }\n    }\n    setMax(newMax);\n\n    while (listOfNew.length > 0) {\n      let newTableName = listOfNew[0].tableName;\n      let bulkList: IEntity[] = listOfNew\n        .filter((newEntitiy) => newEntitiy.tableName === newTableName)\n        .map((entity: { tableName: string; newEntitiy: IEntity }) => {\n          return entity.newEntitiy;\n        });\n      await saveNewFromList(newTableName, bulkList, fileName);\n      listOfNew = listOfNew.filter((entity) => entity.tableName !== newTableName);\n      setSucc(newMax - listOfNew.length);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Start Filereader \" + file.name);\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        let json = JSON.parse(content.toString());\n        console.log(\"Json loaded from \" + file.name);\n        scanImportFile(json, file.name);\n      }\n    };\n    fileReader.readAsText(file);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file]);\n\n  return (\n    <FileWrapper>\n      {file.name} {succCount}/{maxCount}\n      <ProgressBar\n        completed={Math.round((succCount / maxCount) * 100)}\n        isLabelVisible={false}\n        bgcolor={\"#F55C5C\"}\n        height={\"5px\"}\n        margin={\"5px\"}\n      />\n    </FileWrapper>\n  );\n};\n\nconst Files = styled.div`\n  flex: 1 1 100%;\n`;\n\nconst FileWrapper = styled.div`\n  width: clac(100% - 20px);\n  height: 50px;\n  padding: 10px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport StringField from \"../form_elements/StringField\";\n\nconst DiscordOptions = () => {\n  const [webhook, setWebhook] = useState<string>(localStorage.getItem(\"webhook\") + \"\");\n  const [webhookUser, setWebhookUser] = useState<string>(localStorage.getItem(\"webhook_user\") + \"\");\n\n  useEffect(() => {\n    if (webhook !== localStorage.getItem(\"webhook\")) localStorage.setItem(\"webhook\", webhook);\n  }, [webhook]);\n\n  useEffect(() => {\n    if (webhookUser !== localStorage.getItem(\"webhook_user\"))\n      localStorage.setItem(\"webhook_user\", webhookUser);\n  }, [webhookUser]);\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Discord Webhook</SelectionTitle>\n        <StringField value={webhookUser} label=\"PlayerName\" onChange={setWebhookUser} />\n        <StringField value={webhook} label=\"Webhook\" onChange={setWebhook} />\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default DiscordOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { exportAll } from \"../../services/OptionService\";\nimport { deleteAll, reciveAll, reciveCount } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport P2PReciver from \"../p2p/P2PReciver\";\n\nimport { isTalent } from \"../../data/Talent\";\n\nimport { faFileExport, faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../general_elements/TabBar\";\nimport IconButton from \"../form_elements/IconButton\";\nimport TalentTile from \"../entities/talents/TalentTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport TalentsOptions from \"./TalentsOptions\";\nimport ImportField, { ImportModus } from \"../form_elements/ImportField\";\nimport DiscordOptions from \"./DiscordOptions\";\nimport { useCSVDownloader, usePapaParse } from \"react-papaparse\";\nimport FileField from \"../form_elements/FileField\";\n// import { scanImportedJson } from \"../../services/CsvService\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [talentAmount, setTalentAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  const { readString } = usePapaParse();\n  const { CSVDownloader, Type } = useCSVDownloader();\n  const [csvBackup, setBackup] = useState<any>();\n\n  const handleCsvUpload = (files: any) => {\n    const file = files[0];\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        readString(content.toString(), {\n          worker: true,\n          complete: (results) => {\n            console.log(\"Csv loaded from \" + file.name);\n            const csv: Array<any> = results.data;\n            console.log(csv);\n            // scanImportedJson(csv);\n            console.log(\"---------\");\n          },\n        });\n      }\n    };\n    fileReader.readAsText(file);\n  };\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"talents\", (result: number) => {\n        setTalentAmount(result);\n      });\n      let backup: any[] = [];\n      reciveAll(\"talents\", (result: any[]) => {\n        backup.push(result);\n      });\n      backup.push();\n      reciveAll(\"spells\", (result: any[]) => {\n        backup.push(result);\n      });\n      backup.push();\n      reciveAll(\"races\", (result: any[]) => {\n        backup.push(result);\n      });\n      setBackup(backup)\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isTalent(entity)) {\n      return <TalentTile key={index} talent={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  return (\n    <>\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <ImportField modus={ImportModus.NORMAL} />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Import Spell CSV</SelectionTitle>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\".csv\"}\n          icon={faFileImport}\n          onChange={(file) => handleCsvUpload(file)}\n        />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAll(\"SkirmishTome_all.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <CSVDownloader\n          type={Type.Button}\n          filename={\n            \"CsvBackup_\" +\n            new Date().getFullYear() +\n            \".\" +\n            (new Date().getMonth() + 1)\n          }\n          bom={true}\n          config={{\n            delimiter: \";\",\n          }}\n          data={csvBackup}\n        >\n          Download\n        </CSVDownloader>\n      </OptionSection>\n      <TabBar\n        children={[\"General\", \"Talents\", \"Discord\", \"Receive\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Talents\" && (\n        <TalentsOptions\n          amount={talentAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Discord\" && <DiscordOptions />}\n      {activeTab === \"Receive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {/* {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })} */}\n    </>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import Dexie from \"dexie\";\nimport Race from \"../data/Race\";\nimport RandomTable from \"../data/RandomTable\";\nimport Spell from \"../data/Spell\";\nimport Talent from \"../data/Talent\";\n\nexport class SkirmishDB extends Dexie {\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  talents: Dexie.Table<Talent, number>;\n  races: Dexie.Table<Race, number>;\n  spells: Dexie.Table<Spell, number>;\n\n  constructor() {\n    super(\"SkirmishTomeDB\");\n    this.version(1).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(2).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(3).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery,resist, drain\",\n    });\n    this.version(4).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n    });\n\n    this.talents = this.table(\"talents\");\n    this.spells = this.table(\"spells\");\n    this.races = this.table(\"races\");\n    this.randomTables = this.table(\"randomTables\");\n  }\n}\n","import { SkirmishDB } from \"../database/SkirmishDB\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\n// export const saveNewFromList = (tableName: string, entities: BookeeEntry[]) => {\n//   const db = new BookeeDB();\n//   db.open()\n//     .then(async function () {\n//       const refinedEntities = (entities as BookeeEntry[]).map(\n//         (entity: BookeeEntry) => {\n//           delete entity[\"id\"];\n//           return entity;\n//         }\n//       );\n//       const prom = await db.table(tableName).bulkPut(refinedEntities);\n//       return prom;\n//     })\n//     .finally(function () {\n//       db.close();\n//     });\n// };\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new SkirmishDB();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new SkirmishDB();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  style?: any;\n  onClick?: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, style, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick} style={style}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton style={style}>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  style?: any;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, style, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled} style={style}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","export function useWebhook(): { hook: string; name: string } | undefined {\n  if (localStorage.getItem(\"webhook\") !== null && localStorage.getItem(\"webhook\") !== \"\") {\n    let name = \"SkirmishTome\";\n    if (localStorage.getItem(\"webhook_user\") !== null)\n      name = localStorage.getItem(\"webhook_user\") + \"\";\n    return { hook: localStorage.getItem(\"webhook\") + \"\", name: name };\n  } else return undefined;\n}\n","export const sendMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  content: string,\n  avatar?: string\n) => {\n  if (webhook !== undefined) {\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    let params = {\n      username: webhook.name !== \"\" ? webhook.name : \"SkirmishTome\",\n      avatar_url: avatar !== undefined ? avatar : \"\",\n      content: content,\n    };\n    request.send(JSON.stringify(params));\n  }\n};\n\nexport const sendEmbedMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  params: string\n) => {\n  if (webhook !== undefined) {\n    console.log(params);\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.send(params);\n  }\n};\n\nexport const formatDiscordText = (text: string): string => {\n  if (text.includes(\"[[\")) {\n    return text.replaceAll(\"[[\", \"*\").replaceAll(\"]]\", \"*\");\n  } else {\n    return text;\n  }\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","export const rollCommand = (\n  commands: string,\n  krit?: boolean\n): { result: number; text: string; rolls: string } => {\n  let result = 0;\n  let text = \"\";\n\n  let newCommands = \"\";\n  commands.split(\" \").forEach((command) => {\n    if (/\\d+/g.test(command)) {\n      newCommands += command;\n    } else {\n      text += \" \" + command;\n    }\n  });\n  newCommands = newCommands.trim();\n\n  let rolls: string = \"(`\";\n  newCommands.split(\" \").forEach((fullCommand: string) => {\n    let commandSplits: string[] = [];\n    fullCommand.split(\"+\").forEach((part) => {\n      let split = part.split(\"-\");\n      commandSplits = commandSplits.concat(split);\n    });\n\n    commandSplits.forEach((command: string) => {\n      let multiplier: number = 1;\n      if (command.includes(\"d\")) {\n        if (!command.startsWith(\"d\")) {\n          multiplier = parseInt(command.split(\"d\")[0]);\n          command = command.split(\"d\")[1];\n        }\n        command = command.replaceAll(\"d\", \"\");\n        if (krit) multiplier = multiplier * 2;\n\n        if (command.includes(\"+\")) {\n          const com = command.split(\"+\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result += parseInt(com[1]);\n        } else if (command.includes(\"-\")) {\n          const com = command.split(\"-\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result -= parseInt(com[1]);\n        } else {\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(command));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n        }\n      } else {\n        result += parseInt(command);\n        rolls += command + \",\";\n      }\n    });\n    rolls = rolls.slice(0, -1) + \"`)\";\n  });\n\n  return { result: result, text: text, rolls: rolls };\n};\n\nexport const rollDie = (size: number): number => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory } from \"react-icons/bi\";\nimport { GiDiceTwentyFacesTwenty, GiSwordsPower } from \"react-icons/gi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name)\n        .then((count: number) => {\n          setEntity(count > 0);\n          setLoading(false);\n        })\n        .catch(() => {\n          setEntity(false);\n          setLoading(false);\n        });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"talent\":\n        return <GiSwordsPower />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import IEntity from \"./IEntity\";\n\nexport enum TalentCategory {\n  physical = \"physical\",\n  mental = \"mental\",\n  social = \"social\",\n  magical = \"magical\",\n}\n\nexport default class Talent implements IEntity {\n  id?: number;\n  name: string;\n  category: string;\n  isFlaw: boolean;\n  cost: number;\n  prerequisite: string;\n  effect: string;\n  type: boolean;\n  stress: string;\n  trigger: string;\n  triggerFrequency: string;\n  ticks: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    category?: string,\n    isFlaw?: boolean,\n    cost?: number,\n    prerequisite?: string,\n    effect?: string,\n    type?: boolean,\n    stress?: string,\n    trigger?: string,\n    triggerFrequency?: string,\n    ticks?: number\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.category = category || TalentCategory.magical;\n    this.isFlaw = isFlaw || false;\n    this.cost = cost || 0;\n    this.prerequisite = prerequisite || \"\";\n    this.effect = effect || \"\";\n    this.type = type || false;\n    this.stress = stress || \"\";\n    this.trigger = trigger || \"\";\n    this.triggerFrequency = triggerFrequency || \"\";\n    this.ticks = ticks || 0;\n  }\n}\n\nexport function isTalent(arg: any): arg is Talent {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"number\";\n  const isFlawCheck =\n    arg.isFlaw !== undefined && typeof arg.isFlaw == \"boolean\";\n  const prerequisiteCheck =\n    arg.prerequisite !== undefined && typeof arg.prerequisite == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"boolean\";\n  const stressCheck = arg.stress !== undefined && typeof arg.stress == \"string\";\n  const triggerCheck =\n    arg.trigger !== undefined && typeof arg.trigger == \"string\";\n  const triggerFrequencyCheck =\n    arg.triggerFrequency !== undefined &&\n    typeof arg.triggerFrequency == \"string\";\n  const ticksCheck = arg.ticks !== undefined && typeof arg.ticks == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    costCheck &&\n    isFlawCheck &&\n    prerequisiteCheck &&\n    effectCheck &&\n    typeCheck &&\n    stressCheck &&\n    triggerCheck &&\n    triggerFrequencyCheck &&\n    ticksCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n"],"sourceRoot":""}