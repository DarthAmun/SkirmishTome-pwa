{"version":3,"sources":["../node_modules/peerjs/dist sync","services/OptionService.tsx","components/p2p/P2PReciver.tsx","components/options/GeneralOptions.tsx","components/options/TalentsOptions.tsx","components/form_elements/FileField.tsx","components/form_elements/ImportField.tsx","components/options/DiscordOptions.tsx","services/CsvService.tsx","components/options/SpellsOptions.tsx","components/options/RacesOptions.tsx","components/options/Options.tsx","database/SkirmishDB.tsx","services/DatabaseService.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","hooks/webhookHook.tsx","services/DiscordService.tsx","components/form_elements/StringField.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","data/SpellValues.tsx","services/DiceService.tsx","components/general_elements/LinkCheck.tsx","data/Talent.tsx","data/Spell.tsx","data/Race.tsx","components/general_elements/TabBar.tsx","components/general_elements/SmallFormatedText.tsx","components/entities/talents/TalentTile.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","scanImportFileTest","json","fileName","callback","a","promList","Array","isArray","forEach","obj","isTalent","push","saveNew","Promise","all","exportAllFromTable","tableName","filename","reciveAll","entity","document","createElement","download","href","encodeURIComponent","JSON","stringify","target","body","appendChild","click","removeChild","exportAll","reciveAllPromise","spells","P2PReciver","changeData","reload","useState","peerId","setId","loading","isLoading","error","setError","state","setState","Peer","undefined","host","secure","peer","useEffect","conn","connect","on","data","console","log","Loading","StringField","value","label","onChange","Icon","icon","faExclamationCircle","TextButton","text","faCheck","onClick","styled","FontAwesomeIcon","theme","main","highlight","GeneralOptions","useTheme","setTheme","General","OptionSection","SelectionTitle","Button","darkTheme","lightTheme","localStorage","setItem","div","tile","color","backgroundColor","boxShadow","button","buttons","input","TalentsOptions","amount","triggerDeleteAll","send","setSend","OptionTab","SectionRow","SectionText","IconButton","faFileExport","faTrashAlt","faPaperPlane","P2PSender","mode","ImportModus","FileField","accept","isMulti","transform","Field","LabelText","Input","files","type","multiple","ImportField","modus","setFiles","Files","faFileImport","file","fileList","from","changeFile","map","index","key","FileTile","succCount","setSucc","maxCount","setMax","scanImportFile","listOfNew","newMax","length","NORMAL","newEntitiy","Object","entries","newTableName","bulkList","filter","saveNewFromList","name","fileReader","FileReader","onloadend","content","result","parse","toString","readAsText","FileWrapper","completed","Math","round","isLabelVisible","bgcolor","height","margin","DiscordOptions","getItem","webhook","setWebhook","webhookUser","setWebhookUser","saveInDB","tablename","listOfIEntity","SpellsOptions","RacesOptions","Options","activeTab","setTab","talentAmount","setTalentAmount","spellAmount","setSpellAmount","raceAmount","setRaceAmount","isReload","setData","readString","usePapaParse","useCSVDownloader","CSVDownloader","Type","csvBackup","setBackup","handleSpellCsvUpload","worker","complete","results","csv","listOfSpells","slice","row","newSpell","Spell","SpellSource","find","SpellCastTime","SpellRite","SpellDuration","SpellRange","SpellSchool","SpellScalingEffect","SpellTarget","SpellAoeRadius","SpellDamage","SpellDirectEffects","SpellLevel","SpellProjectileType","SpellProjectileNumber","SpellDamageType","SpellTargetingType","SpellLosRange","SpellDrainType","SpellPureDamage","SpellSize","SpellHp","toLowerCase","calcDrain","scanImportedSpellCsv","reciveCount","backup","concat","spell","makeCsv","Talent","talent","Race","race","deleteAll","returnTile","TalentTile","TabBar","children","tab","OptionSectionLarge","Date","getFullYear","getMonth","bom","config","delimiter","SkirmishDB","randomTables","talents","races","powers","skills","version","stores","table","Dexie","updateWithCallback","db","open","then","update","finally","close","put","prom","entities","refinedEntities","bulkPut","remove","delete","toArray","array","count","reciveCountPromise","recivePromiseByAttribute","where","equalsIgnoreCase","recivePromise","get","recivePromiseByAttributeCount","equals","applyFilters","filters","test","fieldName","hasTag","fieldPart","includes","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAllFilteredPromise","reciveAttributeSelectionPromise","attribute","orderBy","uniqueKeys","createNewWithId","clear","exportFilteredFromTable","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","floatLeft","disabled","style","SimpleButton","left","DisabledSimpleButton","hoverColor","useWebhook","hook","sendMessage","avatar","request","XMLHttpRequest","setRequestHeader","params","username","avatar_url","sendEmbedMessage","formatDiscordText","replaceAll","placeholder","setName","setPeer","brokerId","min","max","password","characters","i","floor","random","generateBrokerId","newPeer","errorData","disconnected","destroyed","reconnect","drain","NONE","ACID","NECROTIC","FROST","FIRE","LIGHTNING","RADIANT","ARCANE","POISON","trim","getAll","HALFMAGICSTRUCTUREHP","HALFMAGICSTRUCTUREDOUBLEHP","HALFMAGICSTRUCTURETRIPPLEHP","MAGICSTRUCTUREHP","MAGICSTRUCTUREDOUBLEHP","DOUBLEMAGICESTRUCTUREHP","MAGICHP","MAGICDOUBLEHP","MAGICTRIPPLEHP","MAGICQUADRUPLEHP","HALFMAGICSQUARED","MAGICSQUARED","DOUBLEMAGICSQUARED","TRIPPLEMAGICSQUARED","HALFMAGICQUBED","MAGICQUBED","DOUBLEMAGICQUBED","TRIPPLEMAGICQUBED","DIFFICULTTERRAIN","LIFELEECH","COMMUNICATE","CONFUSIONSTUNBLIND","HEX","IMPAIRMOVEMENTVISION","MOVEFEARROOT","DOT","INCAPACITATE","SPHERE","KNOCKDOWN","WALLBARRIERCONSTRUCTSUMMON","TELEPORT","HEAL","BUFFILLUSIONSHIELD","CHARMCONTROLINFLUENCE","TRANSFORM","MYSTBRADIUS","MYSTBPROJECTILES","PROJECTILERADIUSPERVARIABLE","PROJECTILEPERVARIABLE","PROJECTILEPERTHREEMAGIC","PROJECTILEPERTWOMAGIC","PROJECTILERADIUSPERTWOMAGIC","PROJECTILERADIUSPERTHREEMAGIC","PLUSPROJECTILEPERTWOMAGIC","PLUSPROJECTILEPERFOURMAGIC","PLUSPROJECTILEPERTHREEMAGIC","MYSTBRADIUSEFFECT","PLUSHALFMYSTBRADIUSEFFECT","PLUSHALFMYSTBRADIUS","PLUSMYSTBRADIUS","PLUSMYSTBRADIUSEFFECT","COMBINED","PHYSICAL","STUN","PURE","FATIGUE","AGONY","ONEPRMAGIC","TWOPRMAGIC","THREEPRMAGIC","FOURPRMAGIC","FIVEPRMAGIC","ONE","TWO","THREE","FOUR","FIVE","ONEDFOUR","ONEDSIX","ONEDEIGHT","ONEDTEN","ONEDTWELVE","ONEDTWENTY","TWODFOUR","TWODSIX","TWODEIGHT","TWODTEN","TWODTWELVE","TWODTWENTY","THREEDFOUR","THREEDSIX","THREEDEIGHT","THREEDTEN","THREEDTWELVE","FOURDFOUR","FOURDSIX","FOURDEIGHT","FOURDTEN","FIVEDFOUR","FIVEDSIX","FIVEDEIGHT","SIXDFOUR","MYSTB","MYSTBDOUBLE","QUARTERMAGIC","HALFMAGIC","MAGIC","COLLETERAL","ONEMETER","TWOMETERS","THREEMETERS","HALFMAGMETERS","MAGMETERS","MAGTIMESTWOMETERS","VARIABLE","ONEMAGIC","TWOMAGIC","THREEMAGIC","FOURMAGIC","FIVEMAGIC","SCALING","BALL","MISSILE","BOLT","RAY","SPRAY","LASSO","getAllSingle","DIRECTTARGET","AURATARGETING","INDIRECTTARGETING","SIXMINUSMYSTBROUNDS","NINETHREE","NINETHREECHANNEL","SEVENTHREE","FIVETHREE","DRAINCHENNEL","DRAINTHREE","MAGIFAITHHOURS","getAllPhysical","getAllStun","SIX","SEVEN","EIGHT","NINE","EARTH","AIR","DIVINE","DEMONIC","DRUIDIC","PSYCHIC","TOUCH","SONIC","RADIUS90","RADIUS360","LOSAURA","LOSMANIPULATE","LOSPOINT","VERBAL","SOMATIC","MENTAL","RITUAL","SINGLE","DAOE","MULTI","AOE","CASTER","TARGET","LINE","CONCENTRATION","INSTANTANEOUS","PERMANENT","FIXEDTICKS","FIXEDROUNDS","FIXEDHOURS","CHANNEL","TRANSMUTATION","EVOCATION","FORTIFICATION","ILLUSION","CONJURATION","NECROMANCY","ENCHANTMENT","rollCommand","commands","krit","newCommands","split","command","rolls","fullCommand","commandSplits","part","multiplier","startsWith","parseInt","com","newRoll","rollDie","size","LinkCheck","setLoading","entitiyFound","setEntity","newType","catch","formatIcon","TalentCategory","category","isFlaw","cost","prerequisite","effect","stress","trigger","triggerFrequency","ticks","this","magical","arg","nameCheck","costCheck","isFlawCheck","prerequisiteCheck","effectCheck","typeCheck","stressCheck","triggerCheck","triggerFrequencyCheck","ticksCheck","source","castTime","rite","duration","durationText","range","school","mastery","resist","masteryDrain","scalingEffect","spellTarget","aoeRadius","damage","directEffects","level","projectileType","projectileNumber","damageType","targetingType","losRange","drainType","pureDamage","hp","chargeable","needsMaterial","glyph","abilityModifier","stamina","flaws","Bar","child","Tab","isActive","props","SmallFormatedText","formatedText","setFormatedText","history","useHistory","cut","str","cutStart","cutEnd","substr","rollDiscord","useCallback","newCommand","fail","rollString","formatLink","parts","formattedParts","codePart","linkParts","linkEntity","TextPart","DiscordPart","link","Link","formatTable","textPart","tableRows","isHead","cells","cell","TableHeadProp","TableProp","formatText","indexOf","FormatedTextContainer","span","backgroundColorLink","th","td","Tile","to","$isflaw","Cost","Name","PropWrapper","Prop"],"mappings":"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","file":"static/js/9.a465ce9d.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 107;","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Talent, { isTalent } from \"../data/Talent\";\n\nexport const scanImportFileTest = async (\n  json: any,\n  fileName: string,\n  callback: () => void\n) => {\n  let promList: Promise<any>[] = [];\n\n  if (!Array.isArray(json)) {\n    json = [json];\n  }\n\n  json.forEach((obj: any) => {\n    if (isTalent(obj)) {\n      promList.push(saveNew(\"talents\", obj as Talent, fileName));\n    }\n  });\n  await Promise.all(promList);\n  callback();\n};\n\n// const scanForFormatErrors = (obj: any) => {\n//   const itemFormatErrors = findItemFromattError(obj);\n//   let itemFailCount: number = 0;\n//   for (const value of Object.entries(itemFormatErrors)) {\n//     if (!value[1]) itemFailCount++;\n//   }\n//   const gearFormatErrors = findGearFormattError(obj);\n//   let gearFailCount: number = 0;\n//   for (const value of Object.entries(gearFormatErrors)) {\n//     if (!value[1]) gearFailCount++;\n//   }\n//   const spellFormatErrors = findSpellFormattError(obj);\n//   let spellFailCount: number = 0;\n//   for (const value of Object.entries(spellFormatErrors)) {\n//     if (!value[1]) spellFailCount++;\n//   }\n//   const monsterFormatErrors = findMonsterFormattError(obj);\n//   let monsterFailCount: number = 0;\n//   for (const value of Object.entries(monsterFormatErrors)) {\n//     if (!value[1]) monsterFailCount++;\n//   }\n//   const raceFormatErrors = findRaceFormattError(obj);\n//   let raceFailCount: number = 0;\n//   for (const value of Object.entries(raceFormatErrors)) {\n//     if (!value[1]) raceFailCount++;\n//   }\n//   const subraceFormatErrors = findSubraceFormattError(obj);\n//   let subraceFailCount: number = 0;\n//   for (const value of Object.entries(subraceFormatErrors)) {\n//     if (!value[1]) subraceFailCount++;\n//   }\n//   const classFormatErrors = findClassFormattError(obj);\n//   let classFailCount: number = 0;\n//   for (const value of Object.entries(classFormatErrors)) {\n//     if (!value[1]) classFailCount++;\n//   }\n//   const subclassFormatErrors = formattSubclassFromattError(obj);\n//   let subclassFailCount: number = 0;\n//   for (const value of Object.entries(subclassFormatErrors)) {\n//     if (!value[1]) subclassFailCount++;\n//   }\n//   const selectionFormatErrors = findSelectionFormattError(obj);\n//   let selectionFailCount: number = 0;\n//   for (const value of Object.entries(selectionFormatErrors)) {\n//     if (!value[1]) selectionFailCount++;\n//   }\n\n//   let errors: any[] = [];\n//   if (\n//     itemFailCount <= gearFailCount &&\n//     itemFailCount <= spellFailCount &&\n//     itemFailCount <= raceFailCount &&\n//     itemFailCount <= subraceFailCount &&\n//     itemFailCount <= classFailCount &&\n//     itemFailCount <= subclassFailCount &&\n//     itemFailCount <= selectionFailCount &&\n//     itemFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ item: itemFormatErrors });\n//   }\n//   if (\n//     gearFailCount <= itemFailCount &&\n//     gearFailCount <= spellFailCount &&\n//     gearFailCount <= raceFailCount &&\n//     gearFailCount <= subraceFailCount &&\n//     gearFailCount <= classFailCount &&\n//     gearFailCount <= subclassFailCount &&\n//     gearFailCount <= selectionFailCount &&\n//     gearFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ gear: gearFormatErrors });\n//   }\n//   if (\n//     spellFailCount <= itemFailCount &&\n//     spellFailCount <= gearFailCount &&\n//     spellFailCount <= raceFailCount &&\n//     spellFailCount <= subraceFailCount &&\n//     spellFailCount <= classFailCount &&\n//     spellFailCount <= subclassFailCount &&\n//     spellFailCount <= selectionFailCount &&\n//     spellFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ spell: spellFormatErrors });\n//   }\n//   if (\n//     monsterFailCount <= itemFailCount &&\n//     monsterFailCount <= gearFailCount &&\n//     monsterFailCount <= raceFailCount &&\n//     monsterFailCount <= subraceFailCount &&\n//     monsterFailCount <= classFailCount &&\n//     monsterFailCount <= subclassFailCount &&\n//     monsterFailCount <= selectionFailCount &&\n//     monsterFailCount <= spellFailCount\n//   ) {\n//     errors.push({ monster: monsterFormatErrors });\n//   }\n//   if (\n//     raceFailCount <= itemFailCount &&\n//     raceFailCount <= gearFailCount &&\n//     raceFailCount <= monsterFailCount &&\n//     raceFailCount <= subraceFailCount &&\n//     raceFailCount <= classFailCount &&\n//     raceFailCount <= subclassFailCount &&\n//     raceFailCount <= selectionFailCount &&\n//     raceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ race: raceFormatErrors });\n//   }\n//   if (\n//     subraceFailCount <= itemFailCount &&\n//     subraceFailCount <= gearFailCount &&\n//     subraceFailCount <= monsterFailCount &&\n//     subraceFailCount <= raceFailCount &&\n//     subraceFailCount <= classFailCount &&\n//     subraceFailCount <= subclassFailCount &&\n//     subraceFailCount <= selectionFailCount &&\n//     subraceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subrace: subraceFormatErrors });\n//   }\n//   if (\n//     classFailCount <= itemFailCount &&\n//     classFailCount <= gearFailCount &&\n//     classFailCount <= monsterFailCount &&\n//     classFailCount <= raceFailCount &&\n//     classFailCount <= subraceFailCount &&\n//     classFailCount <= subclassFailCount &&\n//     classFailCount <= selectionFailCount &&\n//     classFailCount <= spellFailCount\n//   ) {\n//     errors.push({ class: classFormatErrors });\n//   }\n//   if (\n//     subclassFailCount <= itemFailCount &&\n//     subclassFailCount <= gearFailCount &&\n//     subclassFailCount <= monsterFailCount &&\n//     subclassFailCount <= raceFailCount &&\n//     subclassFailCount <= subraceFailCount &&\n//     subclassFailCount <= classFailCount &&\n//     subclassFailCount <= selectionFailCount &&\n//     subclassFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subclass: subclassFormatErrors });\n//   }\n//   if (\n//     selectionFailCount <= itemFailCount &&\n//     selectionFailCount <= gearFailCount &&\n//     selectionFailCount <= monsterFailCount &&\n//     selectionFailCount <= raceFailCount &&\n//     selectionFailCount <= subraceFailCount &&\n//     selectionFailCount <= classFailCount &&\n//     selectionFailCount <= subclassFailCount &&\n//     selectionFailCount <= spellFailCount\n//   ) {\n//     errors.push({ selection: selectionFormatErrors });\n//   }\n//   return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n// };\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let entity = { [tableName]: all };\n    let contentType = \"application/json;charset=utf-8;\";\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href =\n      \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(entity));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  const spells = await reciveAllPromise(\"spells\");\n\n  let all: any = {\n    spells: spells,\n  };\n\n  let contentType = \"application/json;charset=utf-8;\";\n\n  var a = document.createElement(\"a\");\n  a.download = filename;\n  a.href =\n    \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n  a.target = \"_blank\";\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../services/OptionService\";\nimport IEntity from \"../../data/IEntity\";\n\nimport {\n  faCheck,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thedndtome.com\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField\n        value={peerId}\n        label={\"ID to recive from\"}\n        onChange={(id) => setId(id)}\n      />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton\n            text={\"Accept\"}\n            icon={faCheck}\n            onClick={() => acceptData()}\n          />\n          <TextButton\n            text={\"Decline\"}\n            icon={faCheck}\n            onClick={() => declineData()}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../theme/Theme\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst TalentsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Talents?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"talents\", \"SkirmishTome_talents.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Talents?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"talents\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all talents`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"talents\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default TalentsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, accept, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} accept={accept} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport FileField from \"./FileField\";\nimport IEntity from \"../../data/IEntity\";\nimport { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport { saveNewFromList } from \"../../services/DatabaseService\";\n\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nexport enum ImportModus {\n  NORMAL,\n}\n\ninterface $Props {\n  modus: ImportModus;\n}\n\nconst ImportField = ({ modus }: $Props) => {\n  const [files, setFiles] = useState<File[]>([]);\n\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      setFiles(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\".json\"}\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n      <Files>\n        {files &&\n          files.map((file: File, index: number) => (\n            <FileTile key={index} modus={modus} file={file} />\n          ))}\n      </Files>\n    </>\n  );\n};\n\nexport default ImportField;\n\ninterface $FileProps {\n  file: File;\n  modus: ImportModus;\n}\n\nconst FileTile = ({ file, modus }: $FileProps) => {\n  const [succCount, setSucc] = useState<number>(0);\n  const [maxCount, setMax] = useState<number>(0);\n\n  const scanImportFile = async (json: any, fileName: string) => {\n    console.log(\"Start 5eTools Json interpreting \" + fileName);\n\n    let listOfNew: { tableName: string; newEntitiy: IEntity }[] = [];\n\n    let newMax: number = 0;\n    for (const [key, value] of Object.entries(json)) {\n      if (Array.isArray(value)) {\n        newMax += value.length;\n        if (modus === ImportModus.NORMAL) {\n          // eslint-disable-next-line\n          value.forEach((obj: any) => listOfNew.push({ tableName: key, newEntitiy: obj }));\n        }\n      }\n    }\n    setMax(newMax);\n\n    while (listOfNew.length > 0) {\n      let newTableName = listOfNew[0].tableName;\n      let bulkList: IEntity[] = listOfNew\n        .filter((newEntitiy) => newEntitiy.tableName === newTableName)\n        .map((entity: { tableName: string; newEntitiy: IEntity }) => {\n          return entity.newEntitiy;\n        });\n      await saveNewFromList(newTableName, bulkList, fileName);\n      listOfNew = listOfNew.filter((entity) => entity.tableName !== newTableName);\n      setSucc(newMax - listOfNew.length);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Start Filereader \" + file.name);\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        let json = JSON.parse(content.toString());\n        console.log(\"Json loaded from \" + file.name);\n        scanImportFile(json, file.name);\n      }\n    };\n    fileReader.readAsText(file);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file]);\n\n  return (\n    <FileWrapper>\n      {file.name} {succCount}/{maxCount}\n      <ProgressBar\n        completed={Math.round((succCount / maxCount) * 100)}\n        isLabelVisible={false}\n        bgcolor={\"#F55C5C\"}\n        height={\"5px\"}\n        margin={\"5px\"}\n      />\n    </FileWrapper>\n  );\n};\n\nconst Files = styled.div`\n  flex: 1 1 100%;\n`;\n\nconst FileWrapper = styled.div`\n  width: clac(100% - 20px);\n  height: 50px;\n  padding: 10px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport StringField from \"../form_elements/StringField\";\n\nconst DiscordOptions = () => {\n  const [webhook, setWebhook] = useState<string>(localStorage.getItem(\"webhook\") + \"\");\n  const [webhookUser, setWebhookUser] = useState<string>(localStorage.getItem(\"webhook_user\") + \"\");\n\n  useEffect(() => {\n    if (webhook !== localStorage.getItem(\"webhook\")) localStorage.setItem(\"webhook\", webhook);\n  }, [webhook]);\n\n  useEffect(() => {\n    if (webhookUser !== localStorage.getItem(\"webhook_user\"))\n      localStorage.setItem(\"webhook_user\", webhookUser);\n  }, [webhookUser]);\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Discord Webhook</SelectionTitle>\n        <StringField value={webhookUser} label=\"PlayerName\" onChange={setWebhookUser} />\n        <StringField value={webhook} label=\"Webhook\" onChange={setWebhook} />\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default DiscordOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import IEntity from \"../data/IEntity\";\nimport Spell from \"../data/Spell\";\nimport {\n  SpellSource,\n  SpellRite,\n  SpellDuration,\n  SpellRange,\n  SpellSchool,\n  SpellTarget,\n  SpellDrainType,\n  SpellLevel,\n  SpellCastTime,\n  SpellDamage,\n  SpellScalingEffect,\n  SpellAoeRadius,\n  SpellDirectEffects,\n  SpellProjectileType,\n  SpellProjectileNumber,\n  SpellDamageType,\n  SpellTargetingType,\n  SpellLosRange,\n  SpellSize,\n  SpellPureDamage,\n  SpellHp,\n} from \"../data/SpellValues\";\nimport { saveNewFromList } from \"./DatabaseService\";\n\nexport const scanImportedSpellCsv = (csv: Array<any>, filename: string) => {\n  let listOfSpells: Array<Spell> = [];\n  console.log(\"Raw\", csv);\n  csv.slice(1).forEach((row: Array<string>) => {\n    let newSpell = new Spell(\n      0,\n      row[0],\n      SpellSource.find(row[1]),\n      SpellCastTime.find(row[24]),\n      SpellRite.find(row[4]),\n      SpellDuration.find(row[23]),\n      \"\",\n      SpellRange.find(row[7]),\n      SpellSchool.find(row[25]),\n      row[27],\n      row[28],\n      row[31],\n      0,\n      +row[29],\n      SpellScalingEffect.find(row[12]),\n      SpellTarget.find(row[3]),\n      SpellAoeRadius.find(row[9]),\n      [\n        SpellDamage.find(row[13]),\n        SpellDamage.find(row[14]),\n        SpellDamage.find(row[15]),\n      ],\n      SpellDirectEffects.find(row[19]),\n      SpellLevel.find(row[2]),\n      SpellProjectileType.find(row[10]),\n      SpellProjectileNumber.find(row[11]),\n      SpellDamageType.find(row[17]),\n      SpellTargetingType.find(row[16]),\n      SpellLosRange.find(row[8]),\n      SpellDrainType.find(row[22]),\n      SpellPureDamage.find(row[18]),\n      SpellSize.find(row[21]),\n      SpellHp.find(row[20]),\n      row[30]?.toLowerCase() === \"yes\" ? true : false,\n      row[6]?.toLowerCase() === \"yes\" ? true : false,\n      row[5]?.toLowerCase() === \"yes\" ? true : false\n    );\n    listOfSpells.push(Spell.calcDrain(newSpell));\n  });\n  console.log(\"Processed Spells\", listOfSpells);\n  saveInDB(\"spells\", listOfSpells, filename);\n};\n\nexport const saveInDB = async (\n  tablename: string,\n  listOfIEntity: Array<IEntity>,\n  filename: string\n) => {\n  let listOfNew = [...listOfIEntity];\n  await saveNewFromList(tablename, listOfNew, filename);\n  console.log(\"Done saving\");\n};\n\n// export const parseRowEntry = (entry: string): number => {\n//   return parseInt(\n//     entry.replaceAll(\"€\", \"\").trim().replaceAll(\".\", \"\").replaceAll(\",\", \"\")\n//   );\n// };\n\n// export const updateListsWith = (bookeeEntryJson: BookeeEntry[]) => {\n//   bookeeEntryJson.forEach((entry: BookeeEntry) => {\n//     reciveAllByAttributes(\n//       \"[dateDay+dateMonth+dateYear]\",\n//       [[entry.dateDay, entry.dateMonth, entry.dateYear]],\n//       (data: any[]) => {\n//         let isPresent = false;\n//         data.forEach((dat: any) => {\n//           const compDat = { ...dat };\n//           delete compDat[\"id\"];\n//           if (JSON.stringify(compDat) === JSON.stringify(entry))\n//             isPresent = true;\n//         });\n//         if (!isPresent) {\n//           console.log(\n//             `New Entry on ${\n//               (entry.dateDay, entry.dateMonth, entry.dateYear)\n//             } will be saved.`\n//           );\n//           saveNew(entry);\n//         }\n//       }\n//     );\n//   });\n// };\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst SpellsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Spells?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"spells\", \"SkirmishTome_Spells.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Spells?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"spells\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all Spells`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"Spells\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SpellsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-align: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst RacesOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Races?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"races\", \"SkirmishTome_Races.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Races?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"races\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all Races`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"Races\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default RacesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { exportAll } from \"../../services/OptionService\";\nimport {\n  deleteAll,\n  reciveAll,\n  reciveCount,\n} from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport P2PReciver from \"../p2p/P2PReciver\";\n\nimport Talent, { isTalent } from \"../../data/Talent\";\n\nimport { faFileExport, faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../general_elements/TabBar\";\nimport IconButton from \"../form_elements/IconButton\";\nimport TalentTile from \"../entities/talents/TalentTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport TalentsOptions from \"./TalentsOptions\";\nimport ImportField, { ImportModus } from \"../form_elements/ImportField\";\nimport DiscordOptions from \"./DiscordOptions\";\nimport { useCSVDownloader, usePapaParse } from \"react-papaparse\";\nimport FileField from \"../form_elements/FileField\";\nimport { scanImportedSpellCsv } from \"../../services/CsvService\";\nimport Spell from \"../../data/Spell\";\nimport Race from \"../../data/Race\";\nimport SpellsOptions from \"./SpellsOptions\";\nimport RacesOptions from \"./RacesOptions\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [talentAmount, setTalentAmount] = useState<number>(0);\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  const { readString } = usePapaParse();\n  const { CSVDownloader, Type } = useCSVDownloader();\n  const [csvBackup, setBackup] = useState<any>();\n\n  const handleSpellCsvUpload = (files: any) => {\n    const file: File = files[0];\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        readString(content.toString(), {\n          worker: true,\n          complete: (results) => {\n            console.log(\"Csv loaded from \" + file.name);\n            const csv: Array<any> = results.data;\n            console.log(csv);\n            scanImportedSpellCsv(csv, file.name);\n            console.log(\"---------\");\n          },\n        });\n      }\n    };\n    fileReader.readAsText(file);\n  };\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"talents\", (result: number) => {\n        setTalentAmount(result);\n      });\n      let backup: any[] = [];\n      reciveAll(\"spells\", (result: any[]) => {\n        setSpellAmount(result.length);\n        backup.push([\"Spell\"].concat(Object.keys(new Spell())));\n        result.forEach((spell: Spell) => {\n          backup.push([\"\"].concat(Spell.makeCsv(spell)));\n        });\n      });\n      reciveAll(\"talents\", (result: any[]) => {\n        setTalentAmount(result.length);\n        backup.push([\"Talent\"].concat(Object.keys(new Talent())));\n        result.forEach((talent: Talent) => {\n          backup.push([\"\"].concat(Talent.makeCsv(talent)));\n        });\n      });\n      reciveAll(\"races\", (result: any[]) => {\n        setRaceAmount(result.length);\n        backup.push([\"Race\"].concat(Object.keys(new Race())));\n        result.forEach((race: Race) => {\n          backup.push([\"\"].concat(Race.makeCsv(race)));\n        });\n      });\n      setBackup(backup);\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isTalent(entity)) {\n      return <TalentTile key={index} talent={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  return (\n    <>\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <ImportField modus={ImportModus.NORMAL} />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAll(\"SkirmishTome_all.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <TabBar\n        children={[\n          \"General\",\n          \"Spells\",\n          \"Races\",\n          \"Talents\",\n          \"Discord\",\n          \"Receive\",\n          \"CSV Imports\",\n        ]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Spells\" && (\n        <SpellsOptions\n          amount={spellAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Races\" && (\n        <RacesOptions amount={raceAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Talents\" && (\n        <TalentsOptions\n          amount={talentAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Discord\" && <DiscordOptions />}\n      {activeTab === \"Receive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {activeTab === \"CSV Imports\" && (\n        <OptionTab>\n          <OptionSection>\n            <CSVDownloader\n              type={Type.Button}\n              filename={\n                \"CsvBackup_\" +\n                new Date().getFullYear() +\n                \".\" +\n                (new Date().getMonth() + 1)\n              }\n              bom={true}\n              config={{\n                delimiter: \";\",\n              }}\n              data={csvBackup}\n            >\n              Download\n            </CSVDownloader>\n          </OptionSection>\n          <OptionSection>\n            <SelectionTitle>Import Spell CSV</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              accept={\".csv\"}\n              icon={faFileImport}\n              onChange={(file) => handleSpellCsvUpload(file)}\n            />\n          </OptionSection>\n        </OptionTab>\n      )}\n      {/* {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })} */}\n    </>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-align: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import Dexie from \"dexie\";\nimport Power from \"../data/Power\";\nimport Race from \"../data/Race\";\nimport RandomTable from \"../data/RandomTable\";\nimport Skill from \"../data/Skill\";\nimport Spell from \"../data/Spell\";\nimport Talent from \"../data/Talent\";\n\nexport class SkirmishDB extends Dexie {\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  talents: Dexie.Table<Talent, number>;\n  races: Dexie.Table<Race, number>;\n  spells: Dexie.Table<Spell, number>;\n  powers: Dexie.Table<Power, number>;\n  skills: Dexie.Table<Skill, number>;\n\n  constructor() {\n    super(\"SkirmishTomeDB\");\n    this.version(1).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(2).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(3).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery,resist, drain\",\n    });\n    this.version(4).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n    });\n    this.version(5).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n      powers:\n        \"++id, name, source, isAdept, path, cost, prerequisite, effect, type, stress, ticks\",\n    });\n    this.version(6).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n      powers:\n        \"++id, name, source, isAdept, path, cost, prerequisite, effect, type, stress, ticks\",\n      skills:\n        \"++id, name, source, details, die, bonus, mod, disadvantage, advantage\",\n    });\n\n    this.talents = this.table(\"talents\");\n    this.spells = this.table(\"spells\");\n    this.races = this.table(\"races\");\n    this.powers = this.table(\"powers\");\n    this.skills = this.table(\"skills\");\n    this.randomTables = this.table(\"randomTables\");\n  }\n}\n","import { SkirmishDB } from \"../database/SkirmishDB\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\n// export const saveNewFromList = (tableName: string, entities: BookeeEntry[]) => {\n//   const db = new BookeeDB();\n//   db.open()\n//     .then(async function () {\n//       const refinedEntities = (entities as BookeeEntry[]).map(\n//         (entity: BookeeEntry) => {\n//           delete entity[\"id\"];\n//           return entity;\n//         }\n//       );\n//       const prom = await db.table(tableName).bulkPut(refinedEntities);\n//       return prom;\n//     })\n//     .finally(function () {\n//       db.close();\n//     });\n// };\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new SkirmishDB();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new SkirmishDB();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  style?: any;\n  onClick?: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, style, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick} style={style}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton style={style}>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  style?: any;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, style, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled} style={style}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","export function useWebhook(): { hook: string; name: string } | undefined {\n  if (localStorage.getItem(\"webhook\") !== null && localStorage.getItem(\"webhook\") !== \"\") {\n    let name = \"SkirmishTome\";\n    if (localStorage.getItem(\"webhook_user\") !== null)\n      name = localStorage.getItem(\"webhook_user\") + \"\";\n    return { hook: localStorage.getItem(\"webhook\") + \"\", name: name };\n  } else return undefined;\n}\n","export const sendMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  content: string,\n  avatar?: string\n) => {\n  if (webhook !== undefined) {\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    let params = {\n      username: webhook.name !== \"\" ? webhook.name : \"SkirmishTome\",\n      avatar_url: avatar !== undefined ? avatar : \"\",\n      content: content,\n    };\n    request.send(JSON.stringify(params));\n  }\n};\n\nexport const sendEmbedMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  params: string\n) => {\n  if (webhook !== undefined) {\n    console.log(params);\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.send(params);\n  }\n};\n\nexport const formatDiscordText = (text: string): string => {\n  if (text.includes(\"[[\")) {\n    return text.replaceAll(\"[[\", \"*\").replaceAll(\"]]\", \"*\");\n  } else {\n    return text;\n  }\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","export interface StringPair {\n  label: string;\n  drain: number;\n}\nexport interface NumberPair {\n  label: number;\n  drain: number;\n}\n\n// export class Dummy {\n//   static readonly NONE: StringPair = { label: \"\", drain: 0,};\n//   static readonly DUMMY: StringPair = { label: , drain: 0 };\n\n//   private constructor(\n//     private readonly label: string,\n//     public readonly drain: number\n//   ) {}\n\n//   static find = (label: string): StringPair => {\n//     switch (label?.toLowerCase().trim()) {\n//       case Dummy.DUMMY.label.toLowerCase():\n//         return Dummy.DUMMY;\n//       default:\n//         return Dummy.NONE;\n//     }\n//   };\n//   static getAll = (): string[] => {\n//     return [Dummy.DUMMY.label];\n//   };\n// }\n\nexport class SpellPureDamage {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ACID: StringPair = { label: \"Acid\", drain: 0 };\n  static readonly NECROTIC: StringPair = { label: \"Necrotic\", drain: 0 };\n  static readonly FROST: StringPair = { label: \"Frost\", drain: 0 };\n  static readonly FIRE: StringPair = { label: \"Fire\", drain: 0 };\n  static readonly LIGHTNING: StringPair = { label: \"Lightning\", drain: 0 };\n  static readonly RADIANT: StringPair = { label: \"Radiant\", drain: 0 };\n  static readonly ARCANE: StringPair = { label: \"Arcane\", drain: 0 };\n  static readonly POISON: StringPair = { label: \"Poison\", drain: 0 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellPureDamage.ACID.label.toLowerCase():\n        return SpellPureDamage.ACID;\n      case SpellPureDamage.NECROTIC.label.toLowerCase():\n        return SpellPureDamage.NECROTIC;\n      case SpellPureDamage.FROST.label.toLowerCase():\n        return SpellPureDamage.FROST;\n      case SpellPureDamage.FIRE.label.toLowerCase():\n        return SpellPureDamage.FIRE;\n      case SpellPureDamage.LIGHTNING.label.toLowerCase():\n        return SpellPureDamage.LIGHTNING;\n      case SpellPureDamage.RADIANT.label.toLowerCase():\n        return SpellPureDamage.RADIANT;\n      case SpellPureDamage.ARCANE.label.toLowerCase():\n        return SpellPureDamage.ARCANE;\n      case SpellPureDamage.POISON.label.toLowerCase():\n        return SpellPureDamage.POISON;\n      default:\n        return SpellPureDamage.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellPureDamage.NONE.label,\n      SpellPureDamage.ACID.label,\n      SpellPureDamage.NECROTIC.label,\n      SpellPureDamage.FROST.label,\n      SpellPureDamage.FIRE.label,\n      SpellPureDamage.LIGHTNING.label,\n      SpellPureDamage.RADIANT.label,\n      SpellPureDamage.ARCANE.label,\n      SpellPureDamage.POISON.label,\n    ];\n  };\n}\n\nexport class SpellHp {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSTRUCTUREHP: StringPair = {\n    label:\n      \"1/2 Magic/Faith armor/structure rating and Magic/Faith *1 hit points\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSTRUCTUREDOUBLEHP: StringPair = {\n    label:\n      \"1/2 Magic/Faith armor/structure rating and Magic/Faith *2 hit points\",\n    drain: 1,\n  };\n  static readonly HALFMAGICSTRUCTURETRIPPLEHP: StringPair = {\n    label:\n      \"1/2 Magic/Faith armor/structure rating and Magic/Faith *3 hit points\",\n    drain: 2,\n  };\n  static readonly MAGICSTRUCTUREHP: StringPair = {\n    label:\n      \"Magic/Faith *1 armor/structure rating and Magic/Faith *1 hit points\",\n    drain: 1,\n  };\n  static readonly MAGICSTRUCTUREDOUBLEHP: StringPair = {\n    label:\n      \"Magic/Faith *1 armor/structure rating and Magic/Faith *2 hit points\",\n    drain: 3,\n  };\n  static readonly DOUBLEMAGICESTRUCTUREHP: StringPair = {\n    label: \"Magic/Faith *2 armor/structure rating and Magic/Faith hit points\",\n    drain: 4,\n  };\n  static readonly MAGICHP: StringPair = {\n    label: \"Magic/Faith *1 hit points\",\n    drain: 1,\n  };\n  static readonly MAGICDOUBLEHP: StringPair = {\n    label: \"Magic/Faith *2 hit points\",\n    drain: 2,\n  };\n  static readonly MAGICTRIPPLEHP: StringPair = {\n    label: \"Magic/Faith *3 hit points\",\n    drain: 3,\n  };\n  static readonly MAGICQUADRUPLEHP: StringPair = {\n    label: \"Magic/Faith *4 hit points\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellHp.HALFMAGICSTRUCTUREHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTUREHP;\n      case SpellHp.HALFMAGICSTRUCTUREDOUBLEHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTUREDOUBLEHP;\n      case SpellHp.HALFMAGICSTRUCTURETRIPPLEHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTURETRIPPLEHP;\n      case SpellHp.MAGICSTRUCTUREHP.label.toLowerCase():\n        return SpellHp.MAGICSTRUCTUREHP;\n      case SpellHp.MAGICSTRUCTUREDOUBLEHP.label.toLowerCase():\n        return SpellHp.MAGICSTRUCTUREDOUBLEHP;\n      case SpellHp.DOUBLEMAGICESTRUCTUREHP.label.toLowerCase():\n        return SpellHp.DOUBLEMAGICESTRUCTUREHP;\n      case SpellHp.MAGICHP.label.toLowerCase():\n        return SpellHp.MAGICHP;\n      case SpellHp.MAGICDOUBLEHP.label.toLowerCase():\n        return SpellHp.MAGICDOUBLEHP;\n      case SpellHp.MAGICTRIPPLEHP.label.toLowerCase():\n        return SpellHp.MAGICTRIPPLEHP;\n      case SpellHp.MAGICQUADRUPLEHP.label.toLowerCase():\n        return SpellHp.MAGICQUADRUPLEHP;\n      default:\n        return SpellHp.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellHp.NONE.label,\n      SpellHp.HALFMAGICSTRUCTUREHP.label,\n      SpellHp.HALFMAGICSTRUCTUREDOUBLEHP.label,\n      SpellHp.HALFMAGICSTRUCTURETRIPPLEHP.label,\n      SpellHp.MAGICSTRUCTUREHP.label,\n      SpellHp.MAGICSTRUCTUREDOUBLEHP.label,\n      SpellHp.DOUBLEMAGICESTRUCTUREHP.label,\n      SpellHp.MAGICHP.label,\n      SpellHp.MAGICDOUBLEHP.label,\n      SpellHp.MAGICTRIPPLEHP.label,\n      SpellHp.MAGICQUADRUPLEHP.label,\n    ];\n  };\n}\n\nexport class SpellSize {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSQUARED: StringPair = {\n    label: \"1/2 Magic/Faith M²\",\n    drain: 0,\n  };\n  static readonly MAGICSQUARED: StringPair = {\n    label: \"Magic/Faith M²\",\n    drain: 1,\n  };\n  static readonly DOUBLEMAGICSQUARED: StringPair = {\n    label: \"Magic/Faith *2 M²\",\n    drain: 2,\n  };\n  static readonly TRIPPLEMAGICSQUARED: StringPair = {\n    label: \"Magic/Faith *3 M²\",\n    drain: 4,\n  };\n  static readonly HALFMAGICQUBED: StringPair = {\n    label: \"1/2 Magic/Faith M³\",\n    drain: 0,\n  };\n  static readonly MAGICQUBED: StringPair = {\n    label: \"Magic/Faith M³\",\n    drain: 1,\n  };\n  static readonly DOUBLEMAGICQUBED: StringPair = {\n    label: \"Magic/Faith *2 M³\",\n    drain: 2,\n  };\n  static readonly TRIPPLEMAGICQUBED: StringPair = {\n    label: \"Magic/Faith *3 M³\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSize.HALFMAGICSQUARED.label.toLowerCase():\n        return SpellSize.HALFMAGICSQUARED;\n      case SpellSize.MAGICSQUARED.label.toLowerCase():\n        return SpellSize.MAGICSQUARED;\n      case SpellSize.DOUBLEMAGICSQUARED.label.toLowerCase():\n        return SpellSize.DOUBLEMAGICSQUARED;\n      case SpellSize.TRIPPLEMAGICSQUARED.label.toLowerCase():\n        return SpellSize.TRIPPLEMAGICSQUARED;\n      case SpellSize.HALFMAGICQUBED.label.toLowerCase():\n        return SpellSize.HALFMAGICQUBED;\n      case SpellSize.MAGICQUBED.label.toLowerCase():\n        return SpellSize.MAGICQUBED;\n      case SpellSize.DOUBLEMAGICQUBED.label.toLowerCase():\n        return SpellSize.DOUBLEMAGICQUBED;\n      case SpellSize.TRIPPLEMAGICQUBED.label.toLowerCase():\n        return SpellSize.TRIPPLEMAGICQUBED;\n      default:\n        return SpellSize.HALFMAGICSQUARED;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSize.NONE.label,\n      SpellSize.HALFMAGICSQUARED.label,\n      SpellSize.MAGICSQUARED.label,\n      SpellSize.DOUBLEMAGICSQUARED.label,\n      SpellSize.TRIPPLEMAGICSQUARED.label,\n      SpellSize.HALFMAGICQUBED.label,\n      SpellSize.MAGICQUBED.label,\n      SpellSize.DOUBLEMAGICQUBED.label,\n      SpellSize.TRIPPLEMAGICQUBED.label,\n    ];\n  };\n}\n\nexport class SpellDirectEffects {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly DIFFICULTTERRAIN: StringPair = {\n    label: \"Difficult Terrain\",\n    drain: 1,\n  };\n  static readonly LIFELEECH: StringPair = { label: \"Life Leech\", drain: 2 };\n  static readonly COMMUNICATE: StringPair = { label: \"Communicate\", drain: 2 };\n  static readonly CONFUSIONSTUNBLIND: StringPair = {\n    label: \"Confusion / Stun / Blind\",\n    drain: 3,\n  };\n  static readonly HEX: StringPair = { label: \"Hex\", drain: 4 };\n  static readonly IMPAIRMOVEMENTVISION: StringPair = {\n    label: \"Impair Movement / Vision\",\n    drain: 4,\n  };\n  static readonly MOVEFEARROOT: StringPair = {\n    label: \"Move / Fear / Root\",\n    drain: 4,\n  };\n  static readonly DOT: StringPair = { label: \"Damage Over Time\", drain: 3 };\n  static readonly INCAPACITATE: StringPair = {\n    label: \"Incapacitate\",\n    drain: 5,\n  };\n  static readonly SPHERE: StringPair = { label: \"Shield\", drain: 5 };\n  static readonly KNOCKDOWN: StringPair = { label: \"Knockdown\", drain: 2 };\n  static readonly WALLBARRIERCONSTRUCTSUMMON: StringPair = {\n    label: \"Wall / Barrier / Sphere / Construct\",\n    drain: 5,\n  };\n  static readonly TELEPORT: StringPair = { label: \"Teleport\", drain: 6 };\n  static readonly HEAL: StringPair = { label: \"Heal\", drain: 5 };\n  static readonly BUFFILLUSIONSHIELD: StringPair = {\n    label: \"Buff / Illusion\",\n    drain: 5,\n  };\n  static readonly CHARMCONTROLINFLUENCE: StringPair = {\n    label: \"Charm / Control / Influence\",\n    drain: 5,\n  };\n  static readonly TRANSFORM: StringPair = { label: \"Transform\", drain: 4 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDirectEffects.DIFFICULTTERRAIN.label.toLowerCase():\n        return SpellDirectEffects.DIFFICULTTERRAIN;\n      case SpellDirectEffects.LIFELEECH.label.toLowerCase():\n        return SpellDirectEffects.LIFELEECH;\n      case SpellDirectEffects.COMMUNICATE.label.toLowerCase():\n        return SpellDirectEffects.COMMUNICATE;\n      case SpellDirectEffects.CONFUSIONSTUNBLIND.label.toLowerCase():\n        return SpellDirectEffects.CONFUSIONSTUNBLIND;\n      case SpellDirectEffects.HEX.label.toLowerCase():\n        return SpellDirectEffects.HEX;\n      case SpellDirectEffects.IMPAIRMOVEMENTVISION.label.toLowerCase():\n        return SpellDirectEffects.IMPAIRMOVEMENTVISION;\n      case SpellDirectEffects.MOVEFEARROOT.label.toLowerCase():\n        return SpellDirectEffects.MOVEFEARROOT;\n      case SpellDirectEffects.DOT.label.toLowerCase():\n        return SpellDirectEffects.DOT;\n      case SpellDirectEffects.INCAPACITATE.label.toLowerCase():\n        return SpellDirectEffects.INCAPACITATE;\n      case SpellDirectEffects.SPHERE.label.toLowerCase():\n        return SpellDirectEffects.SPHERE;\n      case SpellDirectEffects.KNOCKDOWN.label.toLowerCase():\n        return SpellDirectEffects.KNOCKDOWN;\n      case SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON.label.toLowerCase():\n        return SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON;\n      case SpellDirectEffects.TELEPORT.label.toLowerCase():\n        return SpellDirectEffects.TELEPORT;\n      case SpellDirectEffects.HEAL.label.toLowerCase():\n        return SpellDirectEffects.HEAL;\n      case SpellDirectEffects.BUFFILLUSIONSHIELD.label.toLowerCase():\n        return SpellDirectEffects.BUFFILLUSIONSHIELD;\n      case SpellDirectEffects.CHARMCONTROLINFLUENCE.label.toLowerCase():\n        return SpellDirectEffects.CHARMCONTROLINFLUENCE;\n      case SpellDirectEffects.TRANSFORM.label.toLowerCase():\n        return SpellDirectEffects.TRANSFORM;\n      default:\n        return SpellDirectEffects.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDirectEffects.NONE.label,\n      SpellDirectEffects.DIFFICULTTERRAIN.label,\n      SpellDirectEffects.LIFELEECH.label,\n      SpellDirectEffects.COMMUNICATE.label,\n      SpellDirectEffects.CONFUSIONSTUNBLIND.label,\n      SpellDirectEffects.HEX.label,\n      SpellDirectEffects.IMPAIRMOVEMENTVISION.label,\n      SpellDirectEffects.MOVEFEARROOT.label,\n      SpellDirectEffects.DOT.label,\n      SpellDirectEffects.INCAPACITATE.label,\n      SpellDirectEffects.SPHERE.label,\n      SpellDirectEffects.KNOCKDOWN.label,\n      SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON.label,\n      SpellDirectEffects.TELEPORT.label,\n      SpellDirectEffects.HEAL.label,\n      SpellDirectEffects.BUFFILLUSIONSHIELD.label,\n      SpellDirectEffects.CHARMCONTROLINFLUENCE.label,\n      SpellDirectEffects.TRANSFORM.label,\n    ];\n  };\n}\n\nexport class SpellScalingEffect {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly MYSTBRADIUS: StringPair = {\n    label: \"MystB Meters Radius\",\n    drain: 3,\n  };\n  static readonly MYSTBPROJECTILES: StringPair = {\n    label: \"MystB Projectiles / Effects\",\n    drain: 4,\n  };\n  static readonly PROJECTILERADIUSPERVARIABLE: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per Variable Factor\",\n    drain: 4,\n  };\n  static readonly PROJECTILEPERVARIABLE: StringPair = {\n    label: \"1 Projectile/Effect per Variable Factor\",\n    drain: 3,\n  };\n  static readonly PROJECTILEPERTHREEMAGIC: StringPair = {\n    label: \"1 Projectile/Effect per 3 Magic/Faith Rating\",\n    drain: 2,\n  };\n  static readonly PROJECTILEPERTWOMAGIC: StringPair = {\n    label: \"1 Projectile/Effect per 2 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PROJECTILERADIUSPERTWOMAGIC: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per 2 Magic/Faith Rating\",\n    drain: 5,\n  };\n  static readonly PROJECTILERADIUSPERTHREEMAGIC: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per 3 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PLUSPROJECTILEPERTWOMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 2 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PLUSPROJECTILEPERFOURMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 4 Magic/Faith Rating\",\n    drain: 2,\n  };\n  static readonly PLUSPROJECTILEPERTHREEMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 3 Magic/Faith Rating\",\n    drain: 3,\n  };\n  static readonly MYSTBRADIUSEFFECT: StringPair = {\n    label: \"MystB Meters Radius & Effect\",\n    drain: 5,\n  };\n  static readonly PLUSHALFMYSTBRADIUSEFFECT: StringPair = {\n    label: \"plus 1/2 MystB Meters Radius & Effect\",\n    drain: 4,\n  };\n  static readonly PLUSHALFMYSTBRADIUS: StringPair = {\n    label: \"plus 1/2 MystB Meters Radius\",\n    drain: 2,\n  };\n  static readonly PLUSMYSTBRADIUS: StringPair = {\n    label: \"plus MystB Meters Radius\",\n    drain: 3,\n  };\n  static readonly PLUSMYSTBRADIUSEFFECT: StringPair = {\n    label: \"plus MystB Meters Radius & Effect\",\n    drain: 6,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellScalingEffect.MYSTBRADIUS.label.toLowerCase():\n        return SpellScalingEffect.MYSTBRADIUS;\n      case SpellScalingEffect.MYSTBPROJECTILES.label.toLowerCase():\n        return SpellScalingEffect.MYSTBPROJECTILES;\n      case SpellScalingEffect.PROJECTILERADIUSPERVARIABLE.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILERADIUSPERVARIABLE;\n      case SpellScalingEffect.PROJECTILEPERVARIABLE.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILEPERVARIABLE;\n      case SpellScalingEffect.PROJECTILEPERTHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILEPERTHREEMAGIC;\n      case SpellScalingEffect.PROJECTILEPERTWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILEPERTWOMAGIC;\n      case SpellScalingEffect.PROJECTILERADIUSPERTWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILERADIUSPERTWOMAGIC;\n      case SpellScalingEffect.PROJECTILERADIUSPERTHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILERADIUSPERTHREEMAGIC;\n      case SpellScalingEffect.PLUSPROJECTILEPERTWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PLUSPROJECTILEPERTWOMAGIC;\n      case SpellScalingEffect.PLUSPROJECTILEPERFOURMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PLUSPROJECTILEPERFOURMAGIC;\n      case SpellScalingEffect.PLUSPROJECTILEPERTHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PLUSPROJECTILEPERTHREEMAGIC;\n      case SpellScalingEffect.MYSTBRADIUSEFFECT.label.toLowerCase():\n        return SpellScalingEffect.MYSTBRADIUSEFFECT;\n      case SpellScalingEffect.PLUSHALFMYSTBRADIUSEFFECT.label.toLowerCase():\n        return SpellScalingEffect.PLUSHALFMYSTBRADIUSEFFECT;\n      case SpellScalingEffect.PLUSHALFMYSTBRADIUS.label.toLowerCase():\n        return SpellScalingEffect.PLUSHALFMYSTBRADIUS;\n      case SpellScalingEffect.PLUSMYSTBRADIUS.label.toLowerCase():\n        return SpellScalingEffect.PLUSMYSTBRADIUS;\n      case SpellScalingEffect.PLUSMYSTBRADIUSEFFECT.label.toLowerCase():\n        return SpellScalingEffect.PLUSMYSTBRADIUSEFFECT;\n      default:\n        return SpellScalingEffect.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellScalingEffect.NONE.label,\n      SpellScalingEffect.MYSTBRADIUS.label,\n      SpellScalingEffect.MYSTBPROJECTILES.label,\n      SpellScalingEffect.PROJECTILERADIUSPERVARIABLE.label,\n      SpellScalingEffect.PROJECTILEPERVARIABLE.label,\n      SpellScalingEffect.PROJECTILEPERTHREEMAGIC.label,\n      SpellScalingEffect.PROJECTILEPERTWOMAGIC.label,\n      SpellScalingEffect.PROJECTILERADIUSPERTWOMAGIC.label,\n      SpellScalingEffect.PROJECTILERADIUSPERTHREEMAGIC.label,\n      SpellScalingEffect.PLUSPROJECTILEPERTWOMAGIC.label,\n      SpellScalingEffect.PLUSPROJECTILEPERFOURMAGIC.label,\n      SpellScalingEffect.PLUSPROJECTILEPERTHREEMAGIC.label,\n      SpellScalingEffect.MYSTBRADIUSEFFECT.label,\n      SpellScalingEffect.PLUSHALFMYSTBRADIUSEFFECT.label,\n      SpellScalingEffect.PLUSHALFMYSTBRADIUS.label,\n      SpellScalingEffect.PLUSMYSTBRADIUS.label,\n      SpellScalingEffect.PLUSMYSTBRADIUSEFFECT.label,\n    ];\n  };\n}\n\nexport class SpellDamageType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly COMBINED: StringPair = { label: \"Combined\", drain: 0 };\n  static readonly PHYSICAL: StringPair = { label: \"Physical\", drain: 0 };\n  static readonly STUN: StringPair = { label: \"Stun\", drain: 1 };\n  static readonly PURE: StringPair = { label: \"Pure\", drain: 2 };\n  static readonly FATIGUE: StringPair = { label: \"Fatigue\", drain: 3 };\n  static readonly AGONY: StringPair = { label: \"Agony\", drain: 5 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDamageType.COMBINED.label.toLowerCase():\n        return SpellDamageType.COMBINED;\n      case SpellDamageType.PHYSICAL.label.toLowerCase():\n        return SpellDamageType.PHYSICAL;\n      case SpellDamageType.STUN.label.toLowerCase():\n        return SpellDamageType.STUN;\n      case SpellDamageType.PURE.label.toLowerCase():\n        return SpellDamageType.PURE;\n      case SpellDamageType.FATIGUE.label.toLowerCase():\n        return SpellDamageType.FATIGUE;\n      case SpellDamageType.AGONY.label.toLowerCase():\n        return SpellDamageType.AGONY;\n      default:\n        return SpellDamageType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDamageType.NONE.label,\n      SpellDamageType.COMBINED.label,\n      SpellDamageType.PHYSICAL.label,\n      SpellDamageType.STUN.label,\n      SpellDamageType.PURE.label,\n      SpellDamageType.FATIGUE.label,\n      SpellDamageType.AGONY.label,\n    ];\n  };\n}\n\nexport class SpellDamage {\n  static readonly NONE: StringPair = { label: \"\", drain: 0 };\n  static readonly ONEPRMAGIC: StringPair = {\n    label: \"1 PR Magic/Faith\",\n    drain: 3,\n  };\n  static readonly TWOPRMAGIC: StringPair = {\n    label: \"2 PR Magic/Faith\",\n    drain: 4,\n  };\n  static readonly THREEPRMAGIC: StringPair = {\n    label: \"3 PR Magic/Faith\",\n    drain: 6,\n  };\n  static readonly FOURPRMAGIC: StringPair = {\n    label: \"4 PR Magic/Faith\",\n    drain: 9,\n  };\n  static readonly FIVEPRMAGIC: StringPair = {\n    label: \"5 PR Magic/Faith\",\n    drain: 12,\n  };\n  static readonly ONE: StringPair = { label: \"1\", drain: 1 };\n  static readonly TWO: StringPair = { label: \"2\", drain: 2 };\n  static readonly THREE: StringPair = { label: \"3\", drain: 3 };\n  static readonly FOUR: StringPair = { label: \"4\", drain: 4 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 5 };\n  static readonly ONEDFOUR: StringPair = { label: \"1d4\", drain: 1 };\n  static readonly ONEDSIX: StringPair = { label: \"1d6\", drain: 1 };\n  static readonly ONEDEIGHT: StringPair = { label: \"1d8\", drain: 2 };\n  static readonly ONEDTEN: StringPair = { label: \"1d10\", drain: 3 };\n  static readonly ONEDTWELVE: StringPair = { label: \"1d12\", drain: 3 };\n  static readonly ONEDTWENTY: StringPair = { label: \"1d20\", drain: 5 };\n  static readonly TWODFOUR: StringPair = { label: \"2d4\", drain: 2 };\n  static readonly TWODSIX: StringPair = { label: \"2d6\", drain: 3 };\n  static readonly TWODEIGHT: StringPair = { label: \"2d8\", drain: 4 };\n  static readonly TWODTEN: StringPair = { label: \"2d10\", drain: 5 };\n  static readonly TWODTWELVE: StringPair = { label: \"2d12\", drain: 5 };\n  static readonly TWODTWENTY: StringPair = { label: \"2d20\", drain: 10 };\n  static readonly THREEDFOUR: StringPair = { label: \"3d4\", drain: 3 };\n  static readonly THREEDSIX: StringPair = { label: \"3d6\", drain: 5 };\n  static readonly THREEDEIGHT: StringPair = { label: \"3d8\", drain: 6 };\n  static readonly THREEDTEN: StringPair = { label: \"3d10\", drain: 7 };\n  static readonly THREEDTWELVE: StringPair = { label: \"3d12\", drain: 9 };\n  static readonly FOURDFOUR: StringPair = { label: \"4d4\", drain: 4 };\n  static readonly FOURDSIX: StringPair = { label: \"4d6\", drain: 6 };\n  static readonly FOURDEIGHT: StringPair = { label: \"4d8\", drain: 8 };\n  static readonly FOURDTEN: StringPair = { label: \"4d10\", drain: 11 };\n  static readonly FIVEDFOUR: StringPair = { label: \"5d4\", drain: 5 };\n  static readonly FIVEDSIX: StringPair = { label: \"5d6\", drain: 8 };\n  static readonly FIVEDEIGHT: StringPair = { label: \"5d8\", drain: 12 };\n  static readonly SIXDFOUR: StringPair = { label: \"6d4\", drain: 7 };\n  static readonly MYSTB: StringPair = { label: \"MystB\", drain: 1 };\n  static readonly MYSTBDOUBLE: StringPair = { label: \"MystB *2\", drain: 2 };\n  static readonly QUARTERMAGIC: StringPair = {\n    label: \"1/4 Magic/Faith\",\n    drain: 2,\n  };\n  static readonly HALFMAGIC: StringPair = {\n    label: \"1/2 Magic/Faith\",\n    drain: 3,\n  };\n  static readonly MAGIC: StringPair = { label: \"Magic/Faith\", drain: 4 };\n  static readonly COLLETERAL: StringPair = {\n    label: \"Collateral damage based on environment\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDamage.ONEPRMAGIC.label.toLowerCase():\n        return SpellDamage.ONEPRMAGIC;\n      case SpellDamage.TWOPRMAGIC.label.toLowerCase():\n        return SpellDamage.TWOPRMAGIC;\n      case SpellDamage.THREEPRMAGIC.label.toLowerCase():\n        return SpellDamage.THREEPRMAGIC;\n      case SpellDamage.FOURPRMAGIC.label.toLowerCase():\n        return SpellDamage.FOURPRMAGIC;\n      case SpellDamage.FIVEPRMAGIC.label.toLowerCase():\n        return SpellDamage.FIVEPRMAGIC;\n      case SpellDamage.ONE.label.toLowerCase():\n        return SpellDamage.ONE;\n      case SpellDamage.TWO.label.toLowerCase():\n        return SpellDamage.TWO;\n      case SpellDamage.THREE.label.toLowerCase():\n        return SpellDamage.THREE;\n      case SpellDamage.FOUR.label.toLowerCase():\n        return SpellDamage.FOUR;\n      case SpellDamage.FIVE.label.toLowerCase():\n        return SpellDamage.FIVE;\n      case SpellDamage.ONEDFOUR.label.toLowerCase():\n        return SpellDamage.ONEDFOUR;\n      case SpellDamage.ONEDSIX.label.toLowerCase():\n        return SpellDamage.ONEDSIX;\n      case SpellDamage.ONEDEIGHT.label.toLowerCase():\n        return SpellDamage.ONEDEIGHT;\n      case SpellDamage.ONEDTEN.label.toLowerCase():\n        return SpellDamage.ONEDTEN;\n      case SpellDamage.ONEDTWELVE.label.toLowerCase():\n        return SpellDamage.ONEDTWELVE;\n      case SpellDamage.ONEDTWENTY.label.toLowerCase():\n        return SpellDamage.ONEDTWENTY;\n      case SpellDamage.TWODFOUR.label.toLowerCase():\n        return SpellDamage.TWODFOUR;\n      case SpellDamage.TWODSIX.label.toLowerCase():\n        return SpellDamage.TWODSIX;\n      case SpellDamage.TWODEIGHT.label.toLowerCase():\n        return SpellDamage.TWODEIGHT;\n      case SpellDamage.TWODTEN.label.toLowerCase():\n        return SpellDamage.TWODTEN;\n      case SpellDamage.TWODTWELVE.label.toLowerCase():\n        return SpellDamage.TWODTWELVE;\n      case SpellDamage.TWODTWENTY.label.toLowerCase():\n        return SpellDamage.TWODTWENTY;\n      case SpellDamage.THREEDFOUR.label.toLowerCase():\n        return SpellDamage.THREEDFOUR;\n      case SpellDamage.THREEDSIX.label.toLowerCase():\n        return SpellDamage.THREEDSIX;\n      case SpellDamage.THREEDEIGHT.label.toLowerCase():\n        return SpellDamage.THREEDEIGHT;\n      case SpellDamage.THREEDTEN.label.toLowerCase():\n        return SpellDamage.THREEDTEN;\n      case SpellDamage.THREEDTWELVE.label.toLowerCase():\n        return SpellDamage.THREEDTWELVE;\n      case SpellDamage.FOURDFOUR.label.toLowerCase():\n        return SpellDamage.FOURDFOUR;\n      case SpellDamage.FOURDSIX.label.toLowerCase():\n        return SpellDamage.FOURDSIX;\n      case SpellDamage.FOURDEIGHT.label.toLowerCase():\n        return SpellDamage.FOURDEIGHT;\n      case SpellDamage.FOURDTEN.label.toLowerCase():\n        return SpellDamage.FOURDTEN;\n      case SpellDamage.FIVEDFOUR.label.toLowerCase():\n        return SpellDamage.FIVEDFOUR;\n      case SpellDamage.FIVEDSIX.label.toLowerCase():\n        return SpellDamage.FIVEDSIX;\n      case SpellDamage.FIVEDEIGHT.label.toLowerCase():\n        return SpellDamage.FIVEDEIGHT;\n      case SpellDamage.SIXDFOUR.label.toLowerCase():\n        return SpellDamage.SIXDFOUR;\n      case SpellDamage.MYSTB.label.toLowerCase():\n        return SpellDamage.MYSTB;\n      case SpellDamage.MYSTBDOUBLE.label.toLowerCase():\n        return SpellDamage.MYSTBDOUBLE;\n      case SpellDamage.QUARTERMAGIC.label.toLowerCase():\n        return SpellDamage.QUARTERMAGIC;\n      case SpellDamage.HALFMAGIC.label.toLowerCase():\n        return SpellDamage.HALFMAGIC;\n      case SpellDamage.MAGIC.label.toLowerCase():\n        return SpellDamage.MAGIC;\n      case SpellDamage.COLLETERAL.label.toLowerCase():\n        return SpellDamage.COLLETERAL;\n      default:\n        return SpellDamage.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDamage.NONE.label,\n      SpellDamage.ONEPRMAGIC.label,\n      SpellDamage.TWOPRMAGIC.label,\n      SpellDamage.THREEPRMAGIC.label,\n      SpellDamage.FOURPRMAGIC.label,\n      SpellDamage.FIVEPRMAGIC.label,\n      SpellDamage.ONE.label,\n      SpellDamage.TWO.label,\n      SpellDamage.THREE.label,\n      SpellDamage.FOUR.label,\n      SpellDamage.FIVE.label,\n      SpellDamage.ONEDFOUR.label,\n      SpellDamage.ONEDSIX.label,\n      SpellDamage.ONEDEIGHT.label,\n      SpellDamage.ONEDTEN.label,\n      SpellDamage.ONEDTWELVE.label,\n      SpellDamage.ONEDTWENTY.label,\n      SpellDamage.TWODFOUR.label,\n      SpellDamage.TWODSIX.label,\n      SpellDamage.TWODEIGHT.label,\n      SpellDamage.TWODTEN.label,\n      SpellDamage.TWODTWELVE.label,\n      SpellDamage.TWODTWENTY.label,\n      SpellDamage.THREEDFOUR.label,\n      SpellDamage.THREEDSIX.label,\n      SpellDamage.THREEDEIGHT.label,\n      SpellDamage.THREEDTEN.label,\n      SpellDamage.THREEDTWELVE.label,\n      SpellDamage.FOURDFOUR.label,\n      SpellDamage.FOURDSIX.label,\n      SpellDamage.FOURDEIGHT.label,\n      SpellDamage.FOURDTEN.label,\n      SpellDamage.FIVEDFOUR.label,\n      SpellDamage.FIVEDSIX.label,\n      SpellDamage.FIVEDEIGHT.label,\n      SpellDamage.SIXDFOUR.label,\n      SpellDamage.MYSTB.label,\n      SpellDamage.MYSTBDOUBLE.label,\n      SpellDamage.QUARTERMAGIC.label,\n      SpellDamage.HALFMAGIC.label,\n      SpellDamage.MAGIC.label,\n      SpellDamage.COLLETERAL.label,\n    ];\n  };\n}\n\nexport class SpellAoeRadius {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONEMETER: StringPair = { label: \"1 Meter\", drain: -1 };\n  static readonly TWOMETERS: StringPair = { label: \"2 Meters\", drain: 0 };\n  static readonly THREEMETERS: StringPair = { label: \"3 Meters\", drain: 1 };\n  static readonly HALFMAGMETERS: StringPair = {\n    label: \"1/2 Magic/Faith Meters\",\n    drain: 2,\n  };\n  static readonly MAGMETERS: StringPair = {\n    label: \"Magic/Faith *1 Meters\",\n    drain: 4,\n  };\n  static readonly MAGTIMESTWOMETERS: StringPair = {\n    label: \"Magic/Faith *2 Meters\",\n    drain: 6,\n  };\n  static readonly VARIABLE: StringPair = { label: \"Variable\", drain: 1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellAoeRadius.ONEMETER.label.toLowerCase():\n        return SpellAoeRadius.ONEMETER;\n      case SpellAoeRadius.TWOMETERS.label.toLowerCase():\n        return SpellAoeRadius.TWOMETERS;\n      case SpellAoeRadius.THREEMETERS.label.toLowerCase():\n        return SpellAoeRadius.THREEMETERS;\n      case SpellAoeRadius.HALFMAGMETERS.label.toLowerCase():\n        return SpellAoeRadius.HALFMAGMETERS;\n      case SpellAoeRadius.MAGMETERS.label.toLowerCase():\n        return SpellAoeRadius.MAGMETERS;\n      case SpellAoeRadius.MAGTIMESTWOMETERS.label.toLowerCase():\n        return SpellAoeRadius.MAGTIMESTWOMETERS;\n      case SpellAoeRadius.VARIABLE.label.toLowerCase():\n        return SpellAoeRadius.VARIABLE;\n      default:\n        return SpellAoeRadius.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellAoeRadius.NONE.label,\n      SpellAoeRadius.ONEMETER.label,\n      SpellAoeRadius.TWOMETERS.label,\n      SpellAoeRadius.THREEMETERS.label,\n      SpellAoeRadius.HALFMAGMETERS.label,\n      SpellAoeRadius.MAGMETERS.label,\n      SpellAoeRadius.MAGTIMESTWOMETERS.label,\n      SpellAoeRadius.VARIABLE.label,\n    ];\n  };\n}\n\nexport class SpellLosRange {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGIC: StringPair = {\n    label: \"1/2 Magic/Faith meters\",\n    drain: -1,\n  };\n  static readonly ONEMAGIC: StringPair = {\n    label: \"Magic/Faith *1 meters\",\n    drain: -1,\n  };\n  static readonly TWOMAGIC: StringPair = {\n    label: \"Magic/Faith *2 meters\",\n    drain: 0,\n  };\n  static readonly THREEMAGIC: StringPair = {\n    label: \"Magic/Faith *3 meters\",\n    drain: 1,\n  };\n  static readonly FOURMAGIC: StringPair = {\n    label: \"Magic/Faith *4 meters\",\n    drain: 2,\n  };\n  static readonly FIVEMAGIC: StringPair = {\n    label: \"Magic/Faith *5 meters\",\n    drain: 3,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellLosRange.HALFMAGIC.label.toLowerCase():\n        return SpellLosRange.HALFMAGIC;\n      case SpellLosRange.ONEMAGIC.label.toLowerCase():\n        return SpellLosRange.ONEMAGIC;\n      case SpellLosRange.TWOMAGIC.label.toLowerCase():\n        return SpellLosRange.TWOMAGIC;\n      case SpellLosRange.THREEMAGIC.label.toLowerCase():\n        return SpellLosRange.THREEMAGIC;\n      case SpellLosRange.FOURMAGIC.label.toLowerCase():\n        return SpellLosRange.FOURMAGIC;\n      case SpellLosRange.FIVEMAGIC.label.toLowerCase():\n        return SpellLosRange.FIVEMAGIC;\n      default:\n        return SpellLosRange.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellLosRange.NONE.label,\n      SpellLosRange.HALFMAGIC.label,\n      SpellLosRange.ONEMAGIC.label,\n      SpellLosRange.TWOMAGIC.label,\n      SpellLosRange.THREEMAGIC.label,\n      SpellLosRange.FOURMAGIC.label,\n      SpellLosRange.FIVEMAGIC.label,\n    ];\n  };\n}\n\nexport class SpellProjectileNumber {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONE: StringPair = { label: \"1\", drain: 1 };\n  static readonly TWO: StringPair = { label: \"2\", drain: 2 };\n  static readonly THREE: StringPair = { label: \"3\", drain: 4 };\n  static readonly FOUR: StringPair = { label: \"4\", drain: 6 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 8 };\n  static readonly SCALING: StringPair = {\n    label: \"Scaling / Variable\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellProjectileNumber.ONE.label.toLowerCase():\n        return SpellProjectileNumber.ONE;\n      case SpellProjectileNumber.TWO.label.toLowerCase():\n        return SpellProjectileNumber.TWO;\n      case SpellProjectileNumber.THREE.label.toLowerCase():\n        return SpellProjectileNumber.THREE;\n      case SpellProjectileNumber.FOUR.label.toLowerCase():\n        return SpellProjectileNumber.FOUR;\n      case SpellProjectileNumber.FIVE.label.toLowerCase():\n        return SpellProjectileNumber.FIVE;\n      case SpellProjectileNumber.SCALING.label.toLowerCase():\n        return SpellProjectileNumber.SCALING;\n      default:\n        return SpellProjectileNumber.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellProjectileNumber.NONE.label,\n      SpellProjectileNumber.ONE.label,\n      SpellProjectileNumber.TWO.label,\n      SpellProjectileNumber.THREE.label,\n      SpellProjectileNumber.FOUR.label,\n      SpellProjectileNumber.FIVE.label,\n      SpellProjectileNumber.SCALING.label,\n    ];\n  };\n}\n\nexport class SpellProjectileType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly BALL: StringPair = { label: \"Ball\", drain: -1 };\n  static readonly MISSILE: StringPair = { label: \"Missile\", drain: 0 };\n  static readonly BOLT: StringPair = { label: \"Bolt\", drain: 0 };\n  static readonly RAY: StringPair = { label: \"Ray\", drain: 1 };\n  static readonly SPRAY: StringPair = { label: \"Spray\", drain: 0 };\n  static readonly LASSO: StringPair = { label: \"Lasso\", drain: 1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellProjectileType.BALL.label.toLowerCase():\n        return SpellProjectileType.BALL;\n      case SpellProjectileType.MISSILE.label.toLowerCase():\n        return SpellProjectileType.MISSILE;\n      case SpellProjectileType.BOLT.label.toLowerCase():\n        return SpellProjectileType.BOLT;\n      case SpellProjectileType.RAY.label.toLowerCase():\n        return SpellProjectileType.RAY;\n      case SpellProjectileType.SPRAY.label.toLowerCase():\n        return SpellProjectileType.SPRAY;\n      case SpellProjectileType.LASSO.label.toLowerCase():\n        return SpellProjectileType.LASSO;\n      default:\n        return SpellProjectileType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellProjectileType.NONE.label,\n      SpellProjectileType.BALL.label,\n      SpellProjectileType.MISSILE.label,\n      SpellProjectileType.BOLT.label,\n      SpellProjectileType.RAY.label,\n      SpellProjectileType.SPRAY.label,\n      SpellProjectileType.LASSO.label,\n    ];\n  };\n  static getAllSingle = (): string[] => {\n    return [\n      SpellProjectileType.NONE.label,\n      SpellProjectileType.MISSILE.label,\n      SpellProjectileType.BOLT.label,\n      SpellProjectileType.RAY.label,\n      SpellProjectileType.SPRAY.label,\n      SpellProjectileType.LASSO.label,\n    ];\n  };\n}\n\nexport class SpellTargetingType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly DIRECTTARGET: StringPair = {\n    label: \"Direct\",\n    drain: 0,\n  };\n  static readonly AURATARGETING: StringPair = {\n    label: \"Aura\",\n    drain: 2,\n  };\n  static readonly INDIRECTTARGETING: StringPair = {\n    label: \"Indirect\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellTargetingType.DIRECTTARGET.label.toLowerCase():\n        return SpellTargetingType.DIRECTTARGET;\n      case SpellTargetingType.AURATARGETING.label.toLowerCase():\n        return SpellTargetingType.AURATARGETING;\n      case SpellTargetingType.INDIRECTTARGETING.label.toLowerCase():\n        return SpellTargetingType.INDIRECTTARGETING;\n      default:\n        return SpellTargetingType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellTargetingType.NONE.label,\n      SpellTargetingType.DIRECTTARGET.label,\n      SpellTargetingType.AURATARGETING.label,\n      SpellTargetingType.INDIRECTTARGETING.label,\n    ];\n  };\n}\n\nexport class SpellCastTime {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly SIXMINUSMYSTBROUNDS: StringPair = {\n    label: \"6 - Mystb Rounds\",\n    drain: 2,\n  };\n  static readonly NINETHREE: StringPair = { label: \"9 + 3\", drain: -5 };\n  static readonly NINETHREECHANNEL: StringPair = {\n    label: \"9 + 3 (Channel)\",\n    drain: -3,\n  };\n  static readonly SEVENTHREE: StringPair = { label: \"7 + 3\", drain: -1 };\n  static readonly FIVETHREE: StringPair = { label: \"5 + 3\", drain: 1 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 4 };\n  static readonly DRAINCHENNEL: StringPair = {\n    label: \"Drain (Channel)\",\n    drain: -3,\n  };\n  static readonly DRAINTHREE: StringPair = { label: \"Drain + 3\", drain: -2 };\n  static readonly MAGIFAITHHOURS: StringPair = {\n    label: \"24 / Magic/Faith Hours\",\n    drain: 0,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellCastTime.SIXMINUSMYSTBROUNDS.label.toLowerCase():\n        return SpellCastTime.SIXMINUSMYSTBROUNDS;\n      case SpellCastTime.NINETHREE.label.toLowerCase():\n        return SpellCastTime.NINETHREE;\n      case SpellCastTime.NINETHREECHANNEL.label.toLowerCase():\n        return SpellCastTime.NINETHREECHANNEL;\n      case SpellCastTime.SEVENTHREE.label.toLowerCase():\n        return SpellCastTime.SEVENTHREE;\n      case SpellCastTime.FIVETHREE.label.toLowerCase():\n        return SpellCastTime.FIVETHREE;\n      case SpellCastTime.FIVE.label.toLowerCase():\n        return SpellCastTime.FIVE;\n      case SpellCastTime.DRAINCHENNEL.label.toLowerCase():\n        return SpellCastTime.DRAINCHENNEL;\n      case SpellCastTime.DRAINTHREE.label.toLowerCase():\n        return SpellCastTime.DRAINTHREE;\n      case SpellCastTime.MAGIFAITHHOURS.label.toLowerCase():\n        return SpellCastTime.MAGIFAITHHOURS;\n      default:\n        return SpellCastTime.NONE;\n    }\n  };\n  static getAllPhysical = (): string[] => {\n    return [\n      SpellCastTime.NONE.label,\n      SpellCastTime.SIXMINUSMYSTBROUNDS.label,\n      SpellCastTime.NINETHREE.label,\n      SpellCastTime.NINETHREECHANNEL.label,\n      SpellCastTime.SEVENTHREE.label,\n      SpellCastTime.FIVETHREE.label,\n      SpellCastTime.FIVE.label,\n      SpellCastTime.DRAINCHENNEL.label,\n      SpellCastTime.DRAINTHREE.label,\n      SpellCastTime.MAGIFAITHHOURS.label,\n    ];\n  };\n  static getAllStun = (): string[] => {\n    return [\n      SpellCastTime.NONE.label,\n      SpellCastTime.SIXMINUSMYSTBROUNDS.label,\n      SpellCastTime.NINETHREE.label,\n      SpellCastTime.NINETHREECHANNEL.label,\n      SpellCastTime.SEVENTHREE.label,\n      SpellCastTime.FIVETHREE.label,\n      SpellCastTime.FIVE.label,\n      SpellCastTime.MAGIFAITHHOURS.label,\n    ];\n  };\n}\n\nexport class SpellLevel {\n  static readonly NONE: NumberPair = {\n    label: 0,\n    drain: 0,\n  };\n  static readonly ONE: NumberPair = { label: 1, drain: -4 };\n  static readonly TWO: NumberPair = { label: 2, drain: -3 };\n  static readonly THREE: NumberPair = { label: 3, drain: -2 };\n  static readonly FOUR: NumberPair = { label: 4, drain: -1 };\n  static readonly FIVE: NumberPair = { label: 5, drain: 0 };\n  static readonly SIX: NumberPair = { label: 6, drain: 1 };\n  static readonly SEVEN: NumberPair = { label: 7, drain: 2 };\n  static readonly EIGHT: NumberPair = { label: 8, drain: 3 };\n  static readonly NINE: NumberPair = { label: 9, drain: 4 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): NumberPair => {\n    switch (+label) {\n      case SpellLevel.ONE.label:\n        return SpellLevel.ONE;\n      case SpellLevel.TWO.label:\n        return SpellLevel.TWO;\n      case SpellLevel.THREE.label:\n        return SpellLevel.THREE;\n      case SpellLevel.FOUR.label:\n        return SpellLevel.FOUR;\n      case SpellLevel.FIVE.label:\n        return SpellLevel.FIVE;\n      case SpellLevel.SIX.label:\n        return SpellLevel.SIX;\n      case SpellLevel.SEVEN.label:\n        return SpellLevel.SEVEN;\n      case SpellLevel.EIGHT.label:\n        return SpellLevel.EIGHT;\n      case SpellLevel.NINE.label:\n        return SpellLevel.NINE;\n      default:\n        return SpellLevel.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellLevel.NONE.label + \"\",\n      SpellLevel.ONE.label + \"\",\n      SpellLevel.TWO.label + \"\",\n      SpellLevel.THREE.label + \"\",\n      SpellLevel.FOUR.label + \"\",\n      SpellLevel.FIVE.label + \"\",\n      SpellLevel.SIX.label + \"\",\n      SpellLevel.SEVEN.label + \"\",\n      SpellLevel.EIGHT.label + \"\",\n      SpellLevel.NINE.label + \"\",\n    ];\n  };\n}\n\nexport class SpellSource {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly EARTH: StringPair = { label: \"earth\", drain: 0 };\n  static readonly FROST: StringPair = { label: \"frost\", drain: 0 };\n  static readonly AIR: StringPair = { label: \"air\", drain: 0 };\n  static readonly FIRE: StringPair = { label: \"fire\", drain: 0 };\n  static readonly ARCANE: StringPair = { label: \"arcane\", drain: 1 };\n  static readonly DIVINE: StringPair = { label: \"divine\", drain: 0 };\n  static readonly DEMONIC: StringPair = { label: \"demonic\", drain: 0 };\n  static readonly DRUIDIC: StringPair = { label: \"druidic\", drain: 0 };\n  static readonly PSYCHIC: StringPair = { label: \"psychic\", drain: 0 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSource.EARTH.label.toLowerCase():\n        return SpellSource.EARTH;\n      case SpellSource.FROST.label.toLowerCase():\n        return SpellSource.FROST;\n      case SpellSource.AIR.label.toLowerCase():\n        return SpellSource.AIR;\n      case SpellSource.FIRE.label.toLowerCase():\n        return SpellSource.FIRE;\n      case SpellSource.ARCANE.label.toLowerCase():\n        return SpellSource.ARCANE;\n      case SpellSource.DIVINE.label.toLowerCase():\n        return SpellSource.DIVINE;\n      case SpellSource.DEMONIC.label.toLowerCase():\n        return SpellSource.DEMONIC;\n      case SpellSource.DRUIDIC.label.toLowerCase():\n        return SpellSource.DRUIDIC;\n      case SpellSource.PSYCHIC.label.toLowerCase():\n        return SpellSource.PSYCHIC;\n      default:\n        return SpellSource.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSource.NONE.label,\n      SpellSource.EARTH.label,\n      SpellSource.FROST.label,\n      SpellSource.AIR.label,\n      SpellSource.FIRE.label,\n      SpellSource.ARCANE.label,\n      SpellSource.DIVINE.label,\n      SpellSource.DEMONIC.label,\n      SpellSource.DRUIDIC.label,\n      SpellSource.PSYCHIC.label,\n    ];\n  };\n}\n\nexport class SpellRange {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly TOUCH: StringPair = { label: \"touch\", drain: 1 };\n  static readonly SONIC: StringPair = { label: \"sonic\", drain: 1 };\n  static readonly RADIUS90: StringPair = {\n    label: \"Radius 90° around Caster\",\n    drain: 1,\n  };\n  static readonly RADIUS360: StringPair = {\n    label: \"Radius 90°+ around Caster\",\n    drain: 2,\n  };\n  static readonly LOSAURA: StringPair = {\n    label: \"Line of Sight Aura or Projectile\",\n    drain: 1,\n  };\n  static readonly LOSMANIPULATE: StringPair = {\n    label: \"Line of Sight Manipulate\",\n    drain: 3,\n  };\n  static readonly LOSPOINT: StringPair = {\n    label: \"Line of Sight Spawn At Point\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellRange.TOUCH.label.toLowerCase():\n        return SpellRange.TOUCH;\n      case SpellRange.SONIC.label.toLowerCase():\n        return SpellRange.SONIC;\n      case SpellRange.RADIUS90.label.toLowerCase():\n        return SpellRange.RADIUS90;\n      case SpellRange.RADIUS360.label.toLowerCase():\n        return SpellRange.RADIUS360;\n      case SpellRange.LOSAURA.label.toLowerCase():\n        return SpellRange.LOSAURA;\n      case SpellRange.LOSMANIPULATE.label.toLowerCase():\n        return SpellRange.LOSMANIPULATE;\n      case SpellRange.LOSPOINT.label.toLowerCase():\n        return SpellRange.LOSPOINT;\n      default:\n        return SpellRange.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellRange.NONE.label,\n      SpellRange.TOUCH.label,\n      SpellRange.SONIC.label,\n      SpellRange.RADIUS90.label,\n      SpellRange.RADIUS360.label,\n      SpellRange.LOSAURA.label,\n      SpellRange.LOSMANIPULATE.label,\n      SpellRange.LOSPOINT.label,\n    ];\n  };\n}\n\nexport class SpellRite {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly VERBAL: StringPair = { label: \"verbal\", drain: 2 };\n  static readonly SOMATIC: StringPair = { label: \"somatic\", drain: 1 };\n  static readonly MENTAL: StringPair = { label: \"mental\", drain: 3 };\n  static readonly RITUAL: StringPair = { label: \"ritual\", drain: 3 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellRite.VERBAL.label.toLowerCase():\n        return SpellRite.VERBAL;\n      case SpellRite.SOMATIC.label.toLowerCase():\n        return SpellRite.SOMATIC;\n      case SpellRite.MENTAL.label.toLowerCase():\n        return SpellRite.MENTAL;\n      case SpellRite.RITUAL.label.toLowerCase():\n        return SpellRite.RITUAL;\n      default:\n        return SpellRite.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellRite.NONE.label,\n      SpellRite.VERBAL.label,\n      SpellRite.SOMATIC.label,\n      SpellRite.MENTAL.label,\n      SpellRite.RITUAL.label,\n    ];\n  };\n}\n\nexport class SpellTarget {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly SINGLE: StringPair = { label: \"Single Target\", drain: 1 };\n  static readonly DAOE: StringPair = {\n    label: \"Diminishing Area Of Effect\",\n    drain: 1,\n  };\n  static readonly MULTI: StringPair = { label: \"Multiple Targets\", drain: 4 };\n  static readonly AOE: StringPair = { label: \"Area Of Effect\", drain: 2 };\n  static readonly CASTER: StringPair = { label: \"Caster\", drain: 3 };\n  static readonly TARGET: StringPair = { label: \"Caster Or Target\", drain: 3 };\n  static readonly LINE: StringPair = { label: \"Straight Line\", drain: 2 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellTarget.SINGLE.label.toLowerCase():\n        return SpellTarget.SINGLE;\n      case SpellTarget.DAOE.label.toLowerCase():\n        return SpellTarget.DAOE;\n      case SpellTarget.MULTI.label.toLowerCase():\n        return SpellTarget.MULTI;\n      case SpellTarget.AOE.label.toLowerCase():\n        return SpellTarget.AOE;\n      case SpellTarget.CASTER.label.toLowerCase():\n        return SpellTarget.CASTER;\n      case SpellTarget.TARGET.label.toLowerCase():\n        return SpellTarget.TARGET;\n      case SpellTarget.LINE.label.toLowerCase():\n        return SpellTarget.LINE;\n      default:\n        return SpellTarget.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellTarget.NONE.label,\n      SpellTarget.SINGLE.label,\n      SpellTarget.MULTI.label,\n      SpellTarget.AOE.label,\n      SpellTarget.DAOE.label,\n      SpellTarget.TARGET.label,\n      SpellTarget.CASTER.label,\n      SpellTarget.LINE.label,\n    ];\n  };\n}\n\nexport class SpellDuration {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly CONCENTRATION: StringPair = {\n    label: \"concentration\",\n    drain: 0,\n  };\n  static readonly INSTANTANEOUS: StringPair = {\n    label: \"instantaneous\",\n    drain: 1,\n  };\n  static readonly PERMANENT: StringPair = { label: \"permanent\", drain: 1 };\n  static readonly FIXEDTICKS: StringPair = {\n    label: \"fixed # of ticks\",\n    drain: 1,\n  };\n  static readonly FIXEDROUNDS: StringPair = {\n    label: \"fixed # of rounds\",\n    drain: 2,\n  };\n  static readonly FIXEDHOURS: StringPair = {\n    label: \"fixed # of hours\",\n    drain: 2,\n  };\n  static readonly CHANNEL: StringPair = { label: \"channel\", drain: -1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDuration.CONCENTRATION.label.toLowerCase():\n        return SpellDuration.CONCENTRATION;\n      case SpellDuration.INSTANTANEOUS.label.toLowerCase():\n        return SpellDuration.INSTANTANEOUS;\n      case SpellDuration.PERMANENT.label.toLowerCase():\n        return SpellDuration.PERMANENT;\n      case SpellDuration.FIXEDTICKS.label.toLowerCase():\n        return SpellDuration.FIXEDTICKS;\n      case SpellDuration.FIXEDROUNDS.label.toLowerCase():\n        return SpellDuration.FIXEDROUNDS;\n      case SpellDuration.FIXEDHOURS.label.toLowerCase():\n        return SpellDuration.FIXEDHOURS;\n      case SpellDuration.CHANNEL.label.toLowerCase():\n        return SpellDuration.CHANNEL;\n      default:\n        return SpellDuration.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDuration.NONE.label,\n      SpellDuration.CONCENTRATION.label,\n      SpellDuration.FIXEDTICKS.label,\n      SpellDuration.FIXEDROUNDS.label,\n      SpellDuration.FIXEDHOURS.label,\n      SpellDuration.CHANNEL.label,\n      SpellDuration.INSTANTANEOUS.label,\n      SpellDuration.PERMANENT.label,\n    ];\n  };\n}\n\nexport class SpellSchool {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly TRANSMUTATION: StringPair = {\n    label: \"Transmutation\",\n    drain: 1,\n  };\n  static readonly EVOCATION: StringPair = { label: \"Evocation\", drain: 0 };\n  static readonly FORTIFICATION: StringPair = {\n    label: \"Fortification\",\n    drain: 1,\n  };\n  static readonly HEX: StringPair = { label: \"Hex\", drain: 1 };\n  static readonly ILLUSION: StringPair = { label: \"Illusion\", drain: 1 };\n  static readonly CONJURATION: StringPair = { label: \"Conjuration\", drain: 2 };\n  static readonly NECROMANCY: StringPair = { label: \"Necromancy\", drain: 1 };\n  static readonly ENCHANTMENT: StringPair = { label: \"Enchantment\", drain: 2 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSchool.FORTIFICATION.label.toLowerCase():\n        return SpellSchool.FORTIFICATION;\n      case SpellSchool.HEX.label.toLowerCase():\n        return SpellSchool.HEX;\n      case SpellSchool.ILLUSION.label.toLowerCase():\n        return SpellSchool.ILLUSION;\n      case SpellSchool.NECROMANCY.label.toLowerCase():\n        return SpellSchool.NECROMANCY;\n      case SpellSchool.TRANSMUTATION.label.toLowerCase():\n        return SpellSchool.TRANSMUTATION;\n      case SpellSchool.CONJURATION.label.toLowerCase():\n        return SpellSchool.CONJURATION;\n      case SpellSchool.EVOCATION.label.toLowerCase():\n        return SpellSchool.EVOCATION;\n      case SpellSchool.ENCHANTMENT.label.toLowerCase():\n        return SpellSchool.ENCHANTMENT;\n      default:\n        return SpellSchool.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSchool.NONE.label,\n      SpellSchool.CONJURATION.label,\n      SpellSchool.EVOCATION.label,\n      SpellSchool.FORTIFICATION.label,\n      SpellSchool.HEX.label,\n      SpellSchool.ILLUSION.label,\n      SpellSchool.NECROMANCY.label,\n      SpellSchool.TRANSMUTATION.label,\n      SpellSchool.ENCHANTMENT.label,\n    ];\n  };\n}\n\nexport class SpellDrainType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly STUN: StringPair = { label: \"Stun\", drain: 0 };\n  static readonly PHYSICAL: StringPair = { label: \"Physical\", drain: -7 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDrainType.STUN.label.toLowerCase():\n        return SpellDrainType.STUN;\n      case SpellDrainType.PHYSICAL.label.toLowerCase():\n        return SpellDrainType.PHYSICAL;\n      default:\n        return SpellDrainType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDrainType.NONE.label,\n      SpellDrainType.STUN.label,\n      SpellDrainType.PHYSICAL.label,\n    ];\n  };\n}\n","export const rollCommand = (\n  commands: string,\n  krit?: boolean\n): { result: number; text: string; rolls: string } => {\n  let result = 0;\n  let text = \"\";\n\n  let newCommands = \"\";\n  commands.split(\" \").forEach((command) => {\n    if (/\\d+/g.test(command)) {\n      newCommands += command;\n    } else {\n      text += \" \" + command;\n    }\n  });\n  newCommands = newCommands.trim();\n\n  let rolls: string = \"(`\";\n  newCommands.split(\" \").forEach((fullCommand: string) => {\n    let commandSplits: string[] = [];\n    fullCommand.split(\"+\").forEach((part) => {\n      let split = part.split(\"-\");\n      commandSplits = commandSplits.concat(split);\n    });\n\n    commandSplits.forEach((command: string) => {\n      let multiplier: number = 1;\n      if (command.includes(\"d\")) {\n        if (!command.startsWith(\"d\")) {\n          multiplier = parseInt(command.split(\"d\")[0]);\n          command = command.split(\"d\")[1];\n        }\n        command = command.replaceAll(\"d\", \"\");\n        if (krit) multiplier = multiplier * 2;\n\n        if (command.includes(\"+\")) {\n          const com = command.split(\"+\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result += parseInt(com[1]);\n        } else if (command.includes(\"-\")) {\n          const com = command.split(\"-\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result -= parseInt(com[1]);\n        } else {\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(command));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n        }\n      } else {\n        result += parseInt(command);\n        rolls += command + \",\";\n      }\n    });\n    rolls = rolls.slice(0, -1) + \"`)\";\n  });\n\n  return { result: result, text: text, rolls: rolls };\n};\n\nexport const rollDie = (size: number): number => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory } from \"react-icons/bi\";\nimport { GiDiceTwentyFacesTwenty, GiSwordsPower } from \"react-icons/gi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name)\n        .then((count: number) => {\n          setEntity(count > 0);\n          setLoading(false);\n        })\n        .catch(() => {\n          setEntity(false);\n          setLoading(false);\n        });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"talent\":\n        return <GiSwordsPower />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import IEntity from \"./IEntity\";\n\nexport enum TalentCategory {\n  physical = \"physical\",\n  mental = \"mental\",\n  social = \"social\",\n  magical = \"magical\",\n}\n\nexport default class Talent implements IEntity {\n  id?: number;\n  name: string;\n  category: string;\n  isFlaw: boolean;\n  cost: number;\n  prerequisite: string;\n  effect: string;\n  type: boolean;\n  stress: string;\n  trigger: string;\n  triggerFrequency: string;\n  ticks: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    category?: string,\n    isFlaw?: boolean,\n    cost?: number,\n    prerequisite?: string,\n    effect?: string,\n    type?: boolean,\n    stress?: string,\n    trigger?: string,\n    triggerFrequency?: string,\n    ticks?: number\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.category = category || TalentCategory.magical;\n    this.isFlaw = isFlaw || false;\n    this.cost = cost || 0;\n    this.prerequisite = prerequisite || \"\";\n    this.effect = effect || \"\";\n    this.type = type || false;\n    this.stress = stress || \"\";\n    this.trigger = trigger || \"\";\n    this.triggerFrequency = triggerFrequency || \"\";\n    this.ticks = ticks || 0;\n  }\n\n  static makeCsv = (talent: Talent): any[] => {\n    return [\n      talent.id,\n      talent.name,\n      talent.category,\n      talent.isFlaw,\n      talent.cost,\n      talent.prerequisite,\n      talent.effect,\n      talent.type,\n      talent.stress,\n      talent.trigger,\n      talent.triggerFrequency,\n      talent.ticks,\n    ];\n  };\n}\n\nexport function isTalent(arg: any): arg is Talent {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"number\";\n  const isFlawCheck =\n    arg.isFlaw !== undefined && typeof arg.isFlaw == \"boolean\";\n  const prerequisiteCheck =\n    arg.prerequisite !== undefined && typeof arg.prerequisite == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"boolean\";\n  const stressCheck = arg.stress !== undefined && typeof arg.stress == \"string\";\n  const triggerCheck =\n    arg.trigger !== undefined && typeof arg.trigger == \"string\";\n  const triggerFrequencyCheck =\n    arg.triggerFrequency !== undefined &&\n    typeof arg.triggerFrequency == \"string\";\n  const ticksCheck = arg.ticks !== undefined && typeof arg.ticks == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    costCheck &&\n    isFlawCheck &&\n    prerequisiteCheck &&\n    effectCheck &&\n    typeCheck &&\n    stressCheck &&\n    triggerCheck &&\n    triggerFrequencyCheck &&\n    ticksCheck\n  );\n}\n","import IEntity from \"./IEntity\";\nimport {\n  StringPair,\n  NumberPair,\n  SpellSource,\n  SpellRite,\n  SpellDuration,\n  SpellRange,\n  SpellSchool,\n  SpellTarget,\n  SpellDrainType,\n  SpellLevel,\n  SpellCastTime,\n  SpellScalingEffect,\n  SpellAoeRadius,\n  SpellDirectEffects,\n  SpellProjectileType,\n  SpellProjectileNumber,\n  SpellDamageType,\n  SpellTargetingType,\n  SpellLosRange,\n  SpellSize,\n  SpellPureDamage,\n  SpellHp,\n} from \"./SpellValues\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  source: StringPair;\n  castTime: StringPair;\n  rite: StringPair;\n  duration: StringPair;\n  durationText: string;\n  range: StringPair;\n  school: StringPair;\n  effect: string;\n  mastery: string;\n  resist: string;\n  drain: number;\n  masteryDrain: number;\n\n  drainType: StringPair;\n  scalingEffect: StringPair;\n  spellTarget: StringPair;\n  aoeRadius: StringPair;\n  damage: StringPair[];\n  directEffects: StringPair;\n  level: NumberPair;\n  projectileType: StringPair;\n  projectileNumber: StringPair;\n  damageType: StringPair;\n  targetingType: StringPair;\n  losRange: StringPair;\n  pureDamage: StringPair;\n  size: StringPair;\n  hp: StringPair;\n  chargeable: boolean;\n  needsMaterial: boolean;\n  glyph: boolean;\n\n  constructor(\n    id?: number,\n    name?: string,\n    source?: StringPair,\n    castTime?: StringPair,\n    rite?: StringPair,\n    duration?: StringPair,\n    durationText?: string,\n    range?: StringPair,\n    school?: StringPair,\n    effect?: string,\n    mastery?: string,\n    resist?: string,\n    drain?: number,\n    masteryDrain?: number,\n\n    scalingEffect?: StringPair,\n    spellTarget?: StringPair,\n    aoeRadius?: StringPair,\n    damage?: StringPair[],\n    directEffects?: StringPair,\n    level?: NumberPair,\n    projectileType?: StringPair,\n    projectileNumber?: StringPair,\n    damageType?: StringPair,\n    targetingType?: StringPair,\n    losRange?: StringPair,\n    drainType?: StringPair,\n    pureDamage?: StringPair,\n    size?: StringPair,\n    hp?: StringPair,\n    chargeable?: boolean,\n    needsMaterial?: boolean,\n    glyph?: boolean\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.source = source || SpellSource.NONE;\n    this.castTime = castTime || SpellCastTime.NONE;\n    this.rite = rite || SpellRite.NONE;\n    this.duration = duration || SpellDuration.NONE;\n    this.durationText = durationText || \"\";\n    this.range = range || SpellRange.NONE;\n    this.school = school || SpellSchool.NONE;\n    this.effect = effect || \"\";\n    this.mastery = mastery || \"\";\n    this.resist = resist || \"\";\n    this.drain = drain || 0;\n    this.masteryDrain = masteryDrain || 0;\n\n    this.scalingEffect = scalingEffect || SpellScalingEffect.NONE;\n    this.spellTarget = spellTarget || SpellTarget.NONE;\n    this.aoeRadius = aoeRadius || SpellAoeRadius.NONE;\n    this.damage = damage || [];\n    this.directEffects = directEffects || SpellDirectEffects.NONE;\n    this.level = level || SpellLevel.NONE;\n    this.projectileType = projectileType || SpellProjectileType.NONE;\n    this.projectileNumber = projectileNumber || SpellProjectileNumber.NONE;\n    this.damageType = damageType || SpellDamageType.NONE;\n    this.targetingType = targetingType || SpellTargetingType.NONE;\n    this.losRange = losRange || SpellLosRange.NONE;\n    this.drainType = drainType || SpellDrainType.NONE;\n    this.pureDamage = pureDamage || SpellPureDamage.NONE;\n    this.size = size || SpellSize.NONE;\n    this.hp = hp || SpellHp.NONE;\n    this.chargeable = chargeable || false;\n    this.needsMaterial = needsMaterial || false;\n    this.glyph = glyph || false;\n  }\n\n  static calcDrain = (spell: Spell): Spell => {\n    let drain = 0;\n    drain += spell.castTime ? spell.castTime.drain : 0;\n    drain += spell.drainType ? spell.drainType.drain : 0;\n    drain += spell.school ? spell.school.drain : 0;\n    drain += spell.duration ? spell.duration.drain : 0;\n    drain += spell.spellTarget ? spell.spellTarget.drain : 0;\n    drain += spell.rite ? spell.rite.drain : 0;\n    drain += spell.range ? spell.range.drain : 0;\n    drain += spell.source ? spell.source.drain : 0;\n    drain += spell.level ? spell.level.drain : 0;\n    drain += spell.chargeable ? -1 : 0;\n    drain += spell.needsMaterial ? -1 : 0;\n    drain += spell.targetingType ? spell.targetingType.drain : 0;\n    drain += spell.projectileType ? spell.projectileType.drain : 0;\n    drain += spell.projectileNumber ? spell.projectileNumber.drain : 0;\n    drain += spell.losRange ? spell.losRange.drain : 0;\n    drain += spell.aoeRadius ? spell.aoeRadius.drain : 0;\n    drain += spell.damage[0] ? spell.damage[0].drain : 0;\n    drain += spell.damage[1] ? spell.damage[1].drain : 0;\n    drain += spell.damage[2] ? spell.damage[2].drain : 0;\n    drain += spell.damageType ? spell.damageType.drain : 0;\n    drain += spell.scalingEffect ? spell.scalingEffect.drain : 0;\n    drain += spell.directEffects ? spell.directEffects.drain : 0;\n    drain += spell.size ? spell.size.drain : 0;\n    drain += spell.hp ? spell.hp.drain : 0;\n    drain += spell.pureDamage ? spell.pureDamage.drain : 0;\n    return { ...spell, drain: drain };\n  };\n\n  static makeCsv = (spell: Spell): any[] => {\n    return [\n      spell.id,\n      spell.name,\n      spell.source.label,\n      spell.castTime.label,\n      spell.rite.label,\n      spell.duration.label,\n      spell.durationText,\n      spell.range.label,\n      spell.school.label,\n      spell.effect,\n      spell.mastery,\n      spell.resist,\n      spell.drain,\n      spell.masteryDrain,\n      spell.scalingEffect.label,\n      spell.spellTarget.label,\n      spell.aoeRadius.label,\n      spell.damage[0].label +\n        \", \" +\n        spell.damage[1].label +\n        \", \" +\n        spell.damage[2].label,\n      spell.directEffects.label,\n      spell.level.label,\n      spell.projectileType.label,\n      spell.projectileNumber.label,\n      spell.damageType.label,\n      spell.targetingType.label,\n      spell.losRange.label,\n      spell.drainType.label,\n      spell.pureDamage.label,\n      spell.size.label,\n      spell.hp.label,\n      spell.chargeable,\n      spell.needsMaterial,\n      spell.glyph,\n    ];\n  };\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourceCheck = arg.source !== undefined && typeof arg.source == \"string\";\n  const castTimeCheck =\n    arg.castTime !== undefined && typeof arg.castTime == \"string\";\n  const riteCheck = arg.rite !== undefined && typeof arg.rite == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const masteryCheck =\n    arg.mastery !== undefined && typeof arg.mastery == \"string\";\n  const resistCheck = arg.resist !== undefined && typeof arg.resist == \"string\";\n  const drainCheck = arg.drain !== undefined && typeof arg.drain == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    sourceCheck &&\n    castTimeCheck &&\n    riteCheck &&\n    durationCheck &&\n    rangeCheck &&\n    schoolCheck &&\n    effectCheck &&\n    damageCheck &&\n    masteryCheck &&\n    resistCheck &&\n    drainCheck\n  );\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  hp: number;\n  abilityModifier: string;\n  size: string;\n  stamina: number;\n  talents: string[];\n  flaws: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    hp?: number,\n    abilityModifier?: string,\n    size?: string,\n    stamina?: number,\n    talents?: string[],\n    flaws?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.abilityModifier = abilityModifier || \"\";\n    this.size = size || \"\";\n    this.stamina = stamina || 0;\n    this.talents = talents || [];\n    this.flaws = flaws || [];\n  }\n\n  static makeCsv = (race: Race): any[] => {\n    return [\n      race.id,\n      race.name,\n      race.hp,\n      race.abilityModifier,\n      race.size,\n      race.stamina,\n      race.talents,\n      race.flaws,\n    ];\n  };\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const abilityModifierCheck =\n    arg.abilityModifier !== undefined && typeof arg.abilityModifier == \"number\";\n  const talentsCheck = arg.talents !== undefined && Array.isArray(arg.talents);\n  const flawsCheck = arg.flaws !== undefined && Array.isArray(arg.flaws);\n\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    abilityModifierCheck &&\n    talentsCheck &&\n    flawsCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { sendMessage } from \"../../services/DiscordService\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst SmallFormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20(`\" + (result - value) + \"`)\" + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <Link onClick={() => history.push(link)}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </Link>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <FormatedTextContainer>{formatedText}</FormatedTextContainer>;\n};\n\nexport default SmallFormatedText;\n\nconst FormatedTextContainer = styled.div`\n  padding: 5px;\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Talent from \"../../../data/Talent\";\nimport SmallFormatedText from \"../../general_elements/SmallFormatedText\";\n\ninterface $Props {\n  talent: Talent;\n}\n\nconst TalentTile = ({ talent }: $Props) => {\n  return (\n    <Tile to={\"/talent-detail/id/\" + talent.id} $isflaw={talent.isFlaw}>\n      <Cost>\n        <b>{talent.cost}</b>\n      </Cost>\n\n      <Name>\n        <b>{talent.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <Prop>{talent.type ? talent.stress : \"Passive\"}</Prop>\n        <SmallFormatedText text={talent.prerequisite} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default TalentTile;\n\ntype type = {\n  $isflaw: boolean;\n};\n\nconst Tile = styled(Link)<type>`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  ${(props) => {\n    if (props.$isflaw) {\n      return `background-color: ${props.theme.input.backgroundColor};`;\n    } else {\n      return `background-color: ${props.theme.tile.backgroundColor};`;\n    }\n  }}\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n`;\n\nconst Cost = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: white;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n    margin: 0 0 5px 0px;\n  }\n`;\n"],"sourceRoot":""}