{"version":3,"sources":["components/help/Help.tsx","database/MyDatabase.tsx","services/DatabaseService.tsx","components/form_elements/IconButton.tsx","hooks/webhookHook.tsx","services/DiscordService.tsx","services/DiceService.tsx","components/general_elements/LinkCheck.tsx","components/general_elements/TabBar.tsx","components/general_elements/FormatedText.tsx"],"names":["Help","useState","activeTab","setTab","General","children","onChange","tab","HelpSection","SelectionTitle","SectionText","text","styled","div","theme","tile","color","backgroundColor","boxShadow","input","MyAppDatabase","randomTables","talents","version","stores","table","Dexie","updateWithCallback","tableName","data","callback","db","open","then","update","id","result","finally","close","saveNew","entity","filename","a","put","prom","saveNewFromList","entities","refinedEntities","map","bulkPut","remove","undefined","delete","reciveAll","toArray","array","reciveCount","count","reciveCountPromise","recivePromiseByAttribute","name","value","where","equalsIgnoreCase","recivePromise","get","recivePromiseByAttributeCount","equals","reciveAllPromise","applyFilters","obj","filters","test","forEach","filter","fieldName","Array","hasTag","fieldPart","toLowerCase","includes","push","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAttributeSelectionPromise","attribute","orderBy","uniqueKeys","createNewWithId","deleteAll","clear","exportFilteredFromTable","all","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","type","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","IconButton","icon","floatLeft","disabled","transform","style","onClick","SimpleButton","left","Icon","DisabledSimpleButton","buttons","height","FontAwesomeIcon","useWebhook","localStorage","getItem","hook","sendMessage","webhook","content","avatar","request","XMLHttpRequest","setRequestHeader","params","username","avatar_url","send","sendEmbedMessage","console","log","formatDiscordText","replaceAll","rollCommand","commands","krit","newCommands","split","command","trim","multiplier","startsWith","parseInt","rollDie","size","max","Math","round","random","LinkCheck","loading","setLoading","entitiyFound","setEntity","useEffect","newType","catch","formatIcon","TabBar","Bar","child","index","Tab","key","e","isActive","props","FormatedText","json","setJson","formatedText","setFormatedText","history","useHistory","newJson","embeds","fields","cut","str","cutStart","cutEnd","substr","rollDiscord","useCallback","newCommand","fail","rollString","formatLink","parts","formattedParts","part","codePart","linkParts","linkEntity","TextPart","DiscordPart","link","Link","formatTable","textPart","tableRows","isHead","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","FormatedTextContainer","float","padding","faDiscord","span","backgroundColorLink","th","td"],"mappings":"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","file":"static/js/10.dc33bd04.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport FormatedText from \"../general_elements/FormatedText\";\nimport TabBar from \"../general_elements/TabBar\";\n\nconst Help = () => {\n  const [activeTab, setTab] = useState<string>(\"Install\");\n\n  return (\n    <>\n      <General>\n        <TabBar\n          children={[\"Install\", \"Create\", \"Import\", \"Export\", \"Text Formating\", \"Modifiers\"]}\n          onChange={(tab: string) => setTab(tab)}\n          activeTab={activeTab}\n        />\n        {activeTab === \"Install\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>How to install SkirmishTome on desktop</SelectionTitle>\n              <SectionText>\n                To install this webapp as an app use chrome and click on the plus in your navigation\n                bar right next to the favorite star icon.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to install SkirmishTome on mobile</SelectionTitle>\n              <SectionText>\n                To install this webapp as an app on mobile find and click the \"Add to home screen\"\n                option in your firefox, chrome or safari.\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n        {activeTab === \"Create\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>How to create Entitys</SelectionTitle>\n              <SectionText>\n                To create a new Spell for example go to Spells and hit \"Add Spell\" in the top\n                middle.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to create Sub-Entitys</SelectionTitle>\n              <SectionText>\n                For subclasses/subraces you need to visit a class/race and click the little circled\n                + in the subclass/subrace section of the class/race.\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n        {activeTab === \"Import\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>How to import Entitiys via .json files</SelectionTitle>\n              <SectionText>\n                Go to options and select a file in the top left file select dialog titled \"Import\".\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to import Entitiys via the send functionallity</SelectionTitle>\n              <SectionText>\n                Go to options and navigate to recive. Add the ID of the sender to the filed and\n                accept sended entities.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to import 5eTools files</SelectionTitle>\n              <SectionText>\n                Go to options and navigate to \"Other Import\" and select the file dialog suited for\n                the entity you want to import.\n              </SectionText>\n              <SectionText>Your entity is not listed there?</SectionText>\n              <SectionText>Those will be updated and added gradually.</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to import from other sources</SelectionTitle>\n              <SectionText>\n                As of now only SkirmishTome and 5eTools .json files are supported.\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n        {activeTab === \"Export\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>How to export Entitiys to .json files</SelectionTitle>\n              <SectionText>\n                Go to options and click the \"export\"-Button located in the top right section titled\n                \"Export\". This will export your hole collection to one big file! (Excluding your pdf\n                library)\n              </SectionText>\n              <SectionText>\n                Or go to options and navigate to the entities you want to send for example \"Spells\".\n                There you can export all your spells to one file.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to send Entitiys via the send functionallity</SelectionTitle>\n              <SectionText>\n                Go to options and navigate to the entities you want to send for example \"Spells\".\n                Click the \"Send all Spells\"-Button and copy the ID.\n              </SectionText>\n              <SectionText>\n                Or go to the entities overview and choose a single entity for example a spell called\n                \"Heal\". Click the \"Send Heal\"-Button and copy the ID.\n              </SectionText>\n              <SectionText>You can now send the ID to the reciver.</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to export 5eTools files</SelectionTitle>\n              <SectionText>Not supported as of now.</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to export to other sources</SelectionTitle>\n              <SectionText>As of now you can only export to SkirmishTome .json files.</SectionText>\n            </HelpSection>\n          </>\n        )}\n        {activeTab === \"Text Formating\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>How to create a hyper-link</SelectionTitle>\n              <SectionText>You can add a hyper-link in every textarea.</SectionText>\n              <SectionText>\n                To do so write: [[spell.Heal Me]] to link to the spell with the name \"Heal Me\".\n              </SectionText>\n              <SectionText>\n                Result: <FormatedText text={\"[[spell.Heal Me]]\"} />\n              </SectionText>\n              <SectionText>This works for all entities.</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to create a table</SelectionTitle>\n              <SectionText>You can add a table in every textarea.</SectionText>\n              <SectionText>\n                To do so write: <br />\n                ||table||\n                <br />\n                ||\"Header1\"|\"Header2\"|\"Header3\"|...||\n                <br />\n                ||\"Cell1\"|\"Cell2\"|\"Cell3\"|...||\n                <br />\n                ||...||\n              </SectionText>\n              <SectionText>\n                Result:{\" \"}\n                <FormatedText\n                  text={`||table||||Header1|Header2|Header3|...||||Cell1|Cell2|Cell3|...||`}\n                />\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to create a discord \"Link\" to roll dice</SelectionTitle>\n              <SectionText>You can add a discord-link in every textarea.</SectionText>\n              <SectionText>To do so write: [[dice.+2 to hit]] to roll a d20+2 in discord.</SectionText>\n              <SectionText>\n                Result: <FormatedText text={`[[dice.+2 to hit]]`} />\n              </SectionText>\n              <SectionText>Or write: [[dice.2d12+6 radiant damage]] to roll a \"2d12+6 radiant damage\" in discord.</SectionText>\n              <SectionText>\n                Result: <FormatedText text={`[[dice.2d12+6 radiant damage]]`} />\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>How to create a table with links in it</SelectionTitle>\n              <SectionText>\n                You can add a link to every cell of a table in every textarea.\n              </SectionText>\n              <SectionText>\n                To do so write: <br />\n                ||table||\n                <br />\n                ||\"Header1\"|\"Header2\"|\"Header3\"|...||\n                <br />\n                ||\"[[spell.Heal Me]]\"|\"Cell2\"|\"Cell3\"|...||\n                <br />\n                ||...||\n              </SectionText>\n              <SectionText>\n                Result:{\" \"}\n                <FormatedText\n                  text={`||table||||Header1|Header2|Header|...||||[[spell.Heal Me]]|Cell2|Cell3|...||`}\n                />\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n        {activeTab === \"Modifiers\" && (\n          <>\n            <HelpSection>\n              <SelectionTitle>What are modifiers?</SelectionTitle>\n              <SectionText>\n                Modifiers enable you to give class-, subclass-, race-, subracefeatures and magic\n                items (for now) spezial modifiers that will directly modify the character using\n                those things.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Equal modifiers</SelectionTitle>\n              <SectionText>Add {\"{{'target'='value'}}\"} to a feature.</SectionText>\n              <SectionText>\n                For example: {\"{{ac=15}}\"} or {'{{alignment=\"Real Evil\"}'}\n              </SectionText>\n              <SectionText>\n                You can even alter deeper values like: {\"{{saves.chaSaveProf=1}}\"}\n              </SectionText>\n              <SectionText>\n                Complex example: {\"{{ac=10+(([dex]-10)/2)+(([con]-10)/2)}}\"} where{\" \"}\n                {\"(([dex]-10)/2)\"} gives you the bonus for the stat.\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Add modifiers</SelectionTitle>\n              <SectionText>Add {\"{{'target'+'value'}}\"} to a feature.</SectionText>\n              <SectionText>\n                For example: {\"{{ac+3}}\"} or {'{{profs+\"Thiefs tools\"}'}\n              </SectionText>\n              <SectionText>Deep example: {\"{{skills.natureProf+1}}\"}</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Substract modifiers</SelectionTitle>\n              <SectionText>Add {\"{{'target'-'value'}}\"} to a feature.</SectionText>\n              <SectionText>For example: {\"{{ac-3}}\"}</SectionText>\n              <SectionText>Deep example: {\"{{money.gold-100}}\"}</SectionText>\n              <SectionText>No option for removing something from a text yet!</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Add modifiers</SelectionTitle>\n              <SectionText>Add {\"{{'target'.add='value'}}\"} to a feature.</SectionText>\n              <SectionText>For example: {'{{spells.add=\"Acid Splash\"}}'}</SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Character fields that can be accessed</SelectionTitle>\n              <SectionText>\n                name: text\n                <br /> player: text\n                <br /> pic: text\n                <br /> background: text\n                <br /> ac: number\n                <br /> hp: number\n                <br /> currentHp: number\n                <br /> init: number\n                <br /> speed: text\n                <br /> str: number\n                <br /> dex: number\n                <br /> con: number\n                <br /> int: number\n                <br /> wis: number\n                <br /> cha: number\n                <br /> actions: text\n                <br /> profsLangs: text\n                <br /> senses: text\n                <br /> alignment: text\n                <br /> inspiration: number\n                <br /> castingHit: number\n                <br /> castingDC: number\n                <br /> money: Money\n                <br /> skills: Skills\n                <br /> saves: Saves\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Money fields that can be accessed</SelectionTitle>\n              <SectionText>\n                copper: number\n                <br /> silver: number\n                <br /> electrum: number\n                <br /> gold: number\n                <br /> platinum: number\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Saves fields that can be accessed</SelectionTitle>\n              <SectionText>\n                strSaveProf: number\n                <br /> dexSaveProf: number\n                <br /> conSaveProf: number\n                <br /> intSaveProf: number\n                <br /> wisSaveProf: number\n                <br /> chaSaveProf: number\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Skills fields that can be accessed</SelectionTitle>\n              <SectionText>\n                acrobaticsProf: number\n                <br /> animalHandlingProf: number\n                <br /> arcanaProf: number\n                <br /> athleticsProf: number\n                <br /> deceptionProf: number\n                <br /> historyProf: number\n                <br /> insightProf: number\n                <br /> intimidationProf: number\n                <br /> investigationProf: number\n                <br /> medicineProf: number\n                <br /> natureProf: number\n                <br /> perceptionProf: number\n                <br /> performanceProf: number\n                <br /> persuasionProf: number\n                <br /> religionProf: number\n                <br /> sleightOfHandProf: number\n                <br /> stealthProf: number\n                <br /> survivalProf: number\n              </SectionText>\n            </HelpSection>\n            <HelpSection>\n              <SelectionTitle>Fields you can add something to</SelectionTitle>\n              <SectionText>\n                monsters\n                <br /> spells\n              </SectionText>\n            </HelpSection>\n          </>\n        )}\n      </General>\n    </>\n  );\n};\n\nexport default Help;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst HelpSection = styled.div`\n  flex: 1 1 20em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 3px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n  width: calc(100% - 10px);\n  padding: 5px;\n`;\n","import Dexie from \"dexie\";\nimport RandomTable from \"../data/RandomTable\";\nimport Talent from \"../data/Talent\";\n\nexport class MyAppDatabase extends Dexie {\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  talents: Dexie.Table<Talent, number>;\n\n  constructor() {\n    super(\"SkirmishTomeDB\");\n    this.version(1).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n   \n    this.talents = this.table(\"talents\");\n    this.randomTables = this.table(\"randomTables\");\n  }\n}\n","import { MyAppDatabase } from \"../database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  style?: any;\n  onClick?: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, style, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick} style={style}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton style={style}>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","export function useWebhook(): { hook: string; name: string } | undefined {\n  if (localStorage.getItem(\"webhook\") !== null && localStorage.getItem(\"webhook\") !== \"\") {\n    let name = \"SkirmishTome\";\n    if (localStorage.getItem(\"webhook_user\") !== null)\n      name = localStorage.getItem(\"webhook_user\") + \"\";\n    return { hook: localStorage.getItem(\"webhook\") + \"\", name: name };\n  } else return undefined;\n}\n","export const sendMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  content: string,\n  avatar?: string\n) => {\n  if (webhook !== undefined) {\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    let params = {\n      username: webhook.name !== \"\" ? webhook.name : \"SkirmishTome\",\n      avatar_url: avatar !== undefined ? avatar : \"\",\n      content: content,\n    };\n    request.send(JSON.stringify(params));\n  }\n};\n\nexport const sendEmbedMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  params: string\n) => {\n  if (webhook !== undefined) {\n    console.log(params);\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.send(params);\n  }\n};\n\nexport const formatDiscordText = (text: string): string => {\n  if (text.includes(\"[[\")) {\n    return text.replaceAll(\"[[\", \"*\").replaceAll(\"]]\", \"*\");\n  } else {\n    return text;\n  }\n};\n","export const rollCommand = (commands: string, krit?: boolean): { result: number; text: string } => {\n  let result = 0;\n  let text = \"\";\n\n  let newCommands = \"\";\n  commands.split(\" \").forEach((command) => {\n    if (/\\d+/g.test(command)) {\n      newCommands += command;\n    } else {\n      text += \" \" + command;\n    }\n  });\n  newCommands = newCommands.trim();\n\n  newCommands.split(\" \").forEach((command: string) => {\n    let multiplier: number = 1;\n    if (!command.startsWith(\"d\")) {\n      multiplier = parseInt(command.split(\"d\")[0]);\n      command = command.split(\"d\")[1];\n    }\n    command = command.replaceAll(\"d\", \"\");\n    if (krit) multiplier = multiplier * 2;\n\n    if (command.includes(\"+\")) {\n      result +=\n        multiplier * rollDie(parseInt(command.split(\"+\")[0])) + parseInt(command.split(\"+\")[1]);\n    } else if (command.includes(\"-\")) {\n      result +=\n        multiplier * rollDie(parseInt(command.split(\"-\")[0])) - parseInt(command.split(\"-\")[1]);\n    } else {\n      result += multiplier * rollDie(parseInt(command));\n    }\n  });\n  return { result: result, text: text };\n};\n\nexport const rollDie = (size: number): number => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory } from \"react-icons/bi\";\nimport { GiDiceTwentyFacesTwenty, GiSwordsPower } from \"react-icons/gi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name)\n        .then((count: number) => {\n          setEntity(count > 0);\n          setLoading(false);\n        })\n        .catch(() => {\n          setEntity(false);\n          setLoading(false);\n        });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"talent\":\n        return <GiSwordsPower />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import { faDiscord } from \"@fortawesome/free-brands-svg-icons\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { formatDiscordText, sendEmbedMessage, sendMessage } from \"../../services/DiscordService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst FormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [json, setJson] = useState<string>(\"\");\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  useEffect(() => {\n    if (webhook !== undefined) {\n      let newJson = {\n        username: webhook.name + \" (SkirmishTome)\",\n        embeds: [\n          {\n            fields: [\n              {\n                name: \"Text\",\n                value: formatDiscordText(text),\n              },\n            ],\n          },\n        ],\n      };\n      setJson(JSON.stringify(newJson));\n    }\n  }, [text, webhook]);\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20(`\" + (result - value) + \"`)\" + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <Link onClick={() => history.push(link)}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </Link>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return (\n    <FormatedTextContainer>\n      {webhook !== undefined && text !== \"\" && (\n        <IconButton\n          style={{\n            backgroundColor: \"#7289da\",\n            float: \"right\",\n            padding: \"5px\",\n          }}\n          icon={faDiscord}\n          onClick={() => sendEmbedMessage(webhook, json)}\n        />\n      )}\n      {formatedText}\n    </FormatedTextContainer>\n  );\n};\n\nexport default FormatedText;\n\nconst FormatedTextContainer = styled.div``;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n"],"sourceRoot":""}