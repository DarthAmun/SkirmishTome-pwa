{"version":3,"sources":["components/general_elements/SmallFormatedText.tsx","components/entities/talents/TalentTile.tsx","../node_modules/peerjs/dist sync","services/OptionService.tsx","components/p2p/P2PReciver.tsx","components/options/GeneralOptions.tsx","components/options/TalentsOptions.tsx","components/form_elements/FileField.tsx","components/form_elements/ImportField.tsx","components/options/DiscordOptions.tsx","services/CsvService.tsx","components/options/SpellsOptions.tsx","components/options/RacesOptions.tsx","components/options/Options.tsx","database/SkirmishDB.tsx","services/DatabaseService.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","hooks/webhookHook.tsx","services/DiscordService.tsx","components/form_elements/StringField.tsx","data/SpellValues.tsx","services/DiceService.tsx","components/general_elements/LinkCheck.tsx","data/Talent.tsx","data/Spell.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","data/Race.tsx","components/general_elements/TabBar.tsx"],"names":["SmallFormatedText","text","webhook","useWebhook","useState","formatedText","setFormatedText","history","useHistory","cut","str","cutStart","cutEnd","substr","rollDiscord","useCallback","command","includes","rollCommand","result","undefined","sendMessage","newCommand","value","parseInt","replaceAll","krit","fail","rollString","formatLink","parts","split","formattedParts","forEach","part","index","codePart","linkParts","linkEntity","push","TextPart","key","DiscordPart","onClick","LinkCheck","type","name","link","Link","formatTable","textPart","table","tableRows","isHead","map","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","useEffect","FormatedTextContainer","styled","div","span","theme","tile","backgroundColorLink","color","th","input","backgroundColor","td","TalentTile","talent","Tile","to","id","$isflaw","isFlaw","Cost","cost","Name","PropWrapper","Prop","stress","prerequisite","props","boxShadow","main","highlight","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","scanImportFileTest","json","fileName","callback","a","promList","Array","isArray","obj","isTalent","saveNew","Promise","all","exportAllFromTable","tableName","filename","reciveAll","entity","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","exportAll","reciveAllPromise","spells","P2PReciver","changeData","reload","peerId","setId","loading","isLoading","error","setError","state","setState","Peer","host","secure","peer","conn","connect","on","data","console","log","Loading","StringField","label","onChange","Icon","icon","faExclamationCircle","TextButton","faCheck","FontAwesomeIcon","GeneralOptions","useTheme","setTheme","General","OptionSection","SelectionTitle","Button","darkTheme","lightTheme","localStorage","setItem","button","buttons","TalentsOptions","amount","triggerDeleteAll","send","setSend","OptionTab","SectionRow","SectionText","IconButton","faFileExport","faTrashAlt","faPaperPlane","P2PSender","mode","ImportModus","FileField","accept","isMulti","transform","Field","LabelText","Input","files","multiple","ImportField","modus","setFiles","Files","faFileImport","file","fileList","from","changeFile","FileTile","succCount","setSucc","maxCount","setMax","scanImportFile","listOfNew","newMax","length","NORMAL","newEntitiy","Object","entries","newTableName","bulkList","filter","saveNewFromList","fileReader","FileReader","onloadend","content","parse","toString","readAsText","FileWrapper","completed","Math","round","isLabelVisible","bgcolor","height","margin","DiscordOptions","getItem","setWebhook","webhookUser","setWebhookUser","saveInDB","tablename","listOfIEntity","SpellsOptions","RacesOptions","Options","activeTab","setTab","talentAmount","setTalentAmount","spellAmount","setSpellAmount","raceAmount","setRaceAmount","isReload","setData","readString","usePapaParse","useCSVDownloader","CSVDownloader","Type","csvBackup","setBackup","handleSpellCsvUpload","worker","complete","results","csv","listOfSpells","slice","newSpell","Spell","SpellSource","find","SpellCastTime","SpellRite","SpellDuration","SpellRange","SpellSchool","SpellScalingEffect","SpellTarget","SpellAoeRadius","SpellDamage","SpellDirectEffects","NONE","SpellLevel","SpellProjectileType","SpellProjectileNumber","SpellDamageType","SpellTargetingType","SpellLosRange","SpellDrainType","SpellPureDamage","SpellSize","SpellHp","toLowerCase","drain","calcDrain","scanImportedSpellCsv","reciveCount","backup","concat","spell","makeCsv","Talent","Race","race","deleteAll","returnTile","Date","getFullYear","getMonth","bom","config","delimiter","TabBar","children","tab","OptionSectionLarge","SkirmishDB","randomTables","talents","races","version","stores","Dexie","updateWithCallback","db","open","then","update","finally","close","put","prom","entities","refinedEntities","bulkPut","remove","delete","toArray","array","count","reciveCountPromise","recivePromiseByAttribute","where","equalsIgnoreCase","recivePromise","get","recivePromiseByAttributeCount","equals","applyFilters","filters","test","fieldName","hasTag","fieldPart","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAllFilteredPromise","reciveAttributeSelectionPromise","attribute","orderBy","uniqueKeys","createNewWithId","clear","exportFilteredFromTable","floatLeft","disabled","style","SimpleButton","left","DisabledSimpleButton","hoverColor","hook","avatar","request","XMLHttpRequest","setRequestHeader","params","username","avatar_url","sendEmbedMessage","formatDiscordText","placeholder","ACID","NECROTIC","FROST","FIRE","LIGHTNING","RADIANT","ARCANE","POISON","trim","getAll","HALFMAGICSTRUCTUREHP","HALFMAGICSTRUCTUREDOUBLEHP","HALFMAGICSTRUCTURETRIPPLEHP","MAGICSTRUCTUREHP","MAGICSTRUCTUREDOUBLEHP","DOUBLEMAGICESTRUCTUREHP","MAGICHP","MAGICDOUBLEHP","MAGICTRIPPLEHP","MAGICQUADRUPLEHP","HALFMAGICSQUARED","MAGICSQUARED","DOUBLEMAGICSQUARED","TRIPPLEMAGICSQUARED","HALFMAGICQUBED","MAGICQUBED","DOUBLEMAGICQUBED","TRIPPLEMAGICQUBED","DIFFICULTTERRAIN","LIFELEECH","COMMUNICATE","CONFUSIONSTUNBLIND","HEX","IMPAIRMOVEMENTVISION","MOVEFEARROOT","DOT","INCAPACITATE","SPHERE","KNOCKDOWN","WALLBARRIERCONSTRUCTSUMMON","TELEPORT","HEAL","BUFFILLUSIONSHIELD","CHARMCONTROLINFLUENCE","TRANSFORM","MYSTBRADIUS","MYSTBPROJECTILES","ONEVARIABLEPROJECTILE","ONEPROJECTILETHREEMAGIC","ONEPROJECTILETWOMAGIC","ONEPROJECTILERADIUSTWOMAGIC","ONEPROJECTILERADIUSTHREEMAGIC","PROJECTILETWOMAGIC","PROJECTILETHREEMAGIC","ONEPROJECTILEFOURMAGIC","MYSTBRADIUSEFFECT","COMBINED","PHYSICAL","STUN","PURE","FATIGUE","AGONY","ONEPRMAGIC","TWOPRMAGIC","THREEPRMAGIC","FOURPRMAGIC","FIVEPRMAGIC","ONE","TWO","THREE","FOUR","FIVE","ONEDFOUR","ONEDSIX","ONEDEIGHT","ONEDTEN","ONEDTWELVE","ONEDTWENTY","TWODFOUR","TWODSIX","TWODEIGHT","TWODTEN","TWODTWELVE","TWODTWENTY","THREEDFOUR","THREEDSIX","THREEDEIGHT","THREEDTEN","THREEDTWELVE","FOURDFOUR","FOURDSIX","FOURDEIGHT","FOURDTEN","FIVEDFOUR","FIVEDSIX","FIVEDEIGHT","SIXDFOUR","MYSTB","MYSTBDOUBLE","QUARTERMAGIC","HALFMAGIC","MAGIC","COLLETERAL","ONEMETER","TWOMETER","THREEMETER","FOURMETER","FIVEMETER","SIXMETER","SEVENMETER","EIGHTMETER","NINEMETER","TENMETER","HALFMAGICMETER","MAGICMETER","DOUBLEMAGICMETER","ONEMAGIC","TWOMAGIC","THREEMAGIC","FOURMAGIC","FIVEMAGIC","SCALING","BALL","MISSILE","BOLT","RAY","SPRAY","LASSO","DIRECTTARGET","AURATARGETING","INDIRECTTARGETING","FOURMYSTBROUNDS","NINETHREE","NINETHREECHANNEL","SEVENTHREE","FIVETHREE","DRAINCHENNEL","DRAINTHREE","MAGIFAITHHOURS","getAllPhysical","getAllStun","SIX","SEVEN","EIGHT","NINE","EARTH","AIR","DIVINE","DEMONIC","DRUIDIC","PSYCHIC","TOUCH","SONIC","RADIUS","RADIUSPLUS","LOSAURA","LOSMANIPULATE","LOSPOINT","VERBAL","SOMATIC","MENTAL","RITUAL","SINGLE","DAOE","MULTI","AOE","CASTER","TARGET","LINE","CONCENTRATION","INSTANTANEOUS","PERMANENT","FIXEDTICKS","FIXEDROUNDS","FIXEDHOURS","CHANNEL","TRANSMUTATION","EVOCATION","FORTIFICATION","ILLUSION","CONJURATION","NECROMANCY","ENCHANTMENT","commands","newCommands","rolls","fullCommand","commandSplits","multiplier","startsWith","com","i","newRoll","rollDie","size","max","random","setLoading","entitiyFound","setEntity","newType","catch","formatIcon","TalentCategory","category","effect","trigger","triggerFrequency","ticks","this","magical","arg","nameCheck","costCheck","isFlawCheck","prerequisiteCheck","effectCheck","typeCheck","stressCheck","triggerCheck","triggerFrequencyCheck","ticksCheck","source","castTime","rite","duration","durationText","range","school","damageText","mastery","resist","masteryDrain","scalingEffect","spellTarget","aoeRadius","damage","directEffects","level","projectileType","projectileNumber","damageType","targetingType","losRange","drainType","pureDamage","hp","chargeable","needsMaterial","setName","setPeer","brokerId","min","password","characters","floor","generateBrokerId","newPeer","errorData","disconnected","destroyed","reconnect","abilityModifier","stamina","flaws","Bar","child","Tab","isActive"],"mappings":"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","file":"static/js/9.085d2b83.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { sendMessage } from \"../../services/DiscordService\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst SmallFormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20(`\" + (result - value) + \"`)\" + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <Link onClick={() => history.push(link)}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </Link>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <FormatedTextContainer>{formatedText}</FormatedTextContainer>;\n};\n\nexport default SmallFormatedText;\n\nconst FormatedTextContainer = styled.div`\n  padding: 5px;\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Talent from \"../../../data/Talent\";\nimport SmallFormatedText from \"../../general_elements/SmallFormatedText\";\n\ninterface $Props {\n  talent: Talent;\n}\n\nconst TalentTile = ({ talent }: $Props) => {\n  return (\n    <Tile to={\"/talent-detail/id/\" + talent.id} $isflaw={talent.isFlaw}>\n      <Cost>\n        <b>{talent.cost}</b>\n      </Cost>\n\n      <Name>\n        <b>{talent.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <Prop>{talent.type ? talent.stress : \"Passive\"}</Prop>\n        <SmallFormatedText text={talent.prerequisite} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default TalentTile;\n\ntype type = {\n  $isflaw: boolean;\n};\n\nconst Tile = styled(Link)<type>`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  ${(props) => {\n    if (props.$isflaw) {\n      return `background-color: ${props.theme.input.backgroundColor};`;\n    } else {\n      return `background-color: ${props.theme.tile.backgroundColor};`;\n    }\n  }}\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n`;\n\nconst Cost = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: white;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 105;","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Talent, { isTalent } from \"../data/Talent\";\n\nexport const scanImportFileTest = async (json: any, fileName: string, callback: () => void) => {\n  let promList: Promise<any>[] = [];\n\n  if (!Array.isArray(json)) {\n    json = [json];\n  }\n\n  json.forEach((obj: any) => {\n    if (isTalent(obj)) {\n      promList.push(saveNew(\"talents\", obj as Talent, fileName));\n    }\n  });\n  await Promise.all(promList);\n  callback();\n};\n\n// const scanForFormatErrors = (obj: any) => {\n//   const itemFormatErrors = findItemFromattError(obj);\n//   let itemFailCount: number = 0;\n//   for (const value of Object.entries(itemFormatErrors)) {\n//     if (!value[1]) itemFailCount++;\n//   }\n//   const gearFormatErrors = findGearFormattError(obj);\n//   let gearFailCount: number = 0;\n//   for (const value of Object.entries(gearFormatErrors)) {\n//     if (!value[1]) gearFailCount++;\n//   }\n//   const spellFormatErrors = findSpellFormattError(obj);\n//   let spellFailCount: number = 0;\n//   for (const value of Object.entries(spellFormatErrors)) {\n//     if (!value[1]) spellFailCount++;\n//   }\n//   const monsterFormatErrors = findMonsterFormattError(obj);\n//   let monsterFailCount: number = 0;\n//   for (const value of Object.entries(monsterFormatErrors)) {\n//     if (!value[1]) monsterFailCount++;\n//   }\n//   const raceFormatErrors = findRaceFormattError(obj);\n//   let raceFailCount: number = 0;\n//   for (const value of Object.entries(raceFormatErrors)) {\n//     if (!value[1]) raceFailCount++;\n//   }\n//   const subraceFormatErrors = findSubraceFormattError(obj);\n//   let subraceFailCount: number = 0;\n//   for (const value of Object.entries(subraceFormatErrors)) {\n//     if (!value[1]) subraceFailCount++;\n//   }\n//   const classFormatErrors = findClassFormattError(obj);\n//   let classFailCount: number = 0;\n//   for (const value of Object.entries(classFormatErrors)) {\n//     if (!value[1]) classFailCount++;\n//   }\n//   const subclassFormatErrors = formattSubclassFromattError(obj);\n//   let subclassFailCount: number = 0;\n//   for (const value of Object.entries(subclassFormatErrors)) {\n//     if (!value[1]) subclassFailCount++;\n//   }\n//   const selectionFormatErrors = findSelectionFormattError(obj);\n//   let selectionFailCount: number = 0;\n//   for (const value of Object.entries(selectionFormatErrors)) {\n//     if (!value[1]) selectionFailCount++;\n//   }\n\n//   let errors: any[] = [];\n//   if (\n//     itemFailCount <= gearFailCount &&\n//     itemFailCount <= spellFailCount &&\n//     itemFailCount <= raceFailCount &&\n//     itemFailCount <= subraceFailCount &&\n//     itemFailCount <= classFailCount &&\n//     itemFailCount <= subclassFailCount &&\n//     itemFailCount <= selectionFailCount &&\n//     itemFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ item: itemFormatErrors });\n//   }\n//   if (\n//     gearFailCount <= itemFailCount &&\n//     gearFailCount <= spellFailCount &&\n//     gearFailCount <= raceFailCount &&\n//     gearFailCount <= subraceFailCount &&\n//     gearFailCount <= classFailCount &&\n//     gearFailCount <= subclassFailCount &&\n//     gearFailCount <= selectionFailCount &&\n//     gearFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ gear: gearFormatErrors });\n//   }\n//   if (\n//     spellFailCount <= itemFailCount &&\n//     spellFailCount <= gearFailCount &&\n//     spellFailCount <= raceFailCount &&\n//     spellFailCount <= subraceFailCount &&\n//     spellFailCount <= classFailCount &&\n//     spellFailCount <= subclassFailCount &&\n//     spellFailCount <= selectionFailCount &&\n//     spellFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ spell: spellFormatErrors });\n//   }\n//   if (\n//     monsterFailCount <= itemFailCount &&\n//     monsterFailCount <= gearFailCount &&\n//     monsterFailCount <= raceFailCount &&\n//     monsterFailCount <= subraceFailCount &&\n//     monsterFailCount <= classFailCount &&\n//     monsterFailCount <= subclassFailCount &&\n//     monsterFailCount <= selectionFailCount &&\n//     monsterFailCount <= spellFailCount\n//   ) {\n//     errors.push({ monster: monsterFormatErrors });\n//   }\n//   if (\n//     raceFailCount <= itemFailCount &&\n//     raceFailCount <= gearFailCount &&\n//     raceFailCount <= monsterFailCount &&\n//     raceFailCount <= subraceFailCount &&\n//     raceFailCount <= classFailCount &&\n//     raceFailCount <= subclassFailCount &&\n//     raceFailCount <= selectionFailCount &&\n//     raceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ race: raceFormatErrors });\n//   }\n//   if (\n//     subraceFailCount <= itemFailCount &&\n//     subraceFailCount <= gearFailCount &&\n//     subraceFailCount <= monsterFailCount &&\n//     subraceFailCount <= raceFailCount &&\n//     subraceFailCount <= classFailCount &&\n//     subraceFailCount <= subclassFailCount &&\n//     subraceFailCount <= selectionFailCount &&\n//     subraceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subrace: subraceFormatErrors });\n//   }\n//   if (\n//     classFailCount <= itemFailCount &&\n//     classFailCount <= gearFailCount &&\n//     classFailCount <= monsterFailCount &&\n//     classFailCount <= raceFailCount &&\n//     classFailCount <= subraceFailCount &&\n//     classFailCount <= subclassFailCount &&\n//     classFailCount <= selectionFailCount &&\n//     classFailCount <= spellFailCount\n//   ) {\n//     errors.push({ class: classFormatErrors });\n//   }\n//   if (\n//     subclassFailCount <= itemFailCount &&\n//     subclassFailCount <= gearFailCount &&\n//     subclassFailCount <= monsterFailCount &&\n//     subclassFailCount <= raceFailCount &&\n//     subclassFailCount <= subraceFailCount &&\n//     subclassFailCount <= classFailCount &&\n//     subclassFailCount <= selectionFailCount &&\n//     subclassFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subclass: subclassFormatErrors });\n//   }\n//   if (\n//     selectionFailCount <= itemFailCount &&\n//     selectionFailCount <= gearFailCount &&\n//     selectionFailCount <= monsterFailCount &&\n//     selectionFailCount <= raceFailCount &&\n//     selectionFailCount <= subraceFailCount &&\n//     selectionFailCount <= classFailCount &&\n//     selectionFailCount <= subclassFailCount &&\n//     selectionFailCount <= spellFailCount\n//   ) {\n//     errors.push({ selection: selectionFormatErrors });\n//   }\n//   return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n// };\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let entity = { [tableName]: all };\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(entity)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(entity));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  const spells = await reciveAllPromise(\"spells\");\n\n  let all: any = {\n    spells: spells,\n  };\n\n  let contentType = \"application/json;charset=utf-8;\";\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n      type: contentType,\n    });\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../services/OptionService\";\nimport IEntity from \"../../data/IEntity\";\n\nimport {\n  faCheck,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thedndtome.com\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField\n        value={peerId}\n        label={\"ID to recive from\"}\n        onChange={(id) => setId(id)}\n      />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton\n            text={\"Accept\"}\n            icon={faCheck}\n            onClick={() => acceptData()}\n          />\n          <TextButton\n            text={\"Decline\"}\n            icon={faCheck}\n            onClick={() => declineData()}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../theme/Theme\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst TalentsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Talents?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"talents\", \"SkirmishTome_talents.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Talents?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"talents\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all talents`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"talents\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default TalentsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, accept, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} accept={accept} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport FileField from \"./FileField\";\nimport IEntity from \"../../data/IEntity\";\nimport { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport { saveNewFromList } from \"../../services/DatabaseService\";\n\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nexport enum ImportModus {\n  NORMAL,\n}\n\ninterface $Props {\n  modus: ImportModus;\n}\n\nconst ImportField = ({ modus }: $Props) => {\n  const [files, setFiles] = useState<File[]>([]);\n\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      setFiles(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\".json\"}\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n      <Files>\n        {files &&\n          files.map((file: File, index: number) => (\n            <FileTile key={index} modus={modus} file={file} />\n          ))}\n      </Files>\n    </>\n  );\n};\n\nexport default ImportField;\n\ninterface $FileProps {\n  file: File;\n  modus: ImportModus;\n}\n\nconst FileTile = ({ file, modus }: $FileProps) => {\n  const [succCount, setSucc] = useState<number>(0);\n  const [maxCount, setMax] = useState<number>(0);\n\n  const scanImportFile = async (json: any, fileName: string) => {\n    console.log(\"Start 5eTools Json interpreting \" + fileName);\n\n    let listOfNew: { tableName: string; newEntitiy: IEntity }[] = [];\n\n    let newMax: number = 0;\n    for (const [key, value] of Object.entries(json)) {\n      if (Array.isArray(value)) {\n        newMax += value.length;\n        if (modus === ImportModus.NORMAL) {\n          // eslint-disable-next-line\n          value.forEach((obj: any) => listOfNew.push({ tableName: key, newEntitiy: obj }));\n        }\n      }\n    }\n    setMax(newMax);\n\n    while (listOfNew.length > 0) {\n      let newTableName = listOfNew[0].tableName;\n      let bulkList: IEntity[] = listOfNew\n        .filter((newEntitiy) => newEntitiy.tableName === newTableName)\n        .map((entity: { tableName: string; newEntitiy: IEntity }) => {\n          return entity.newEntitiy;\n        });\n      await saveNewFromList(newTableName, bulkList, fileName);\n      listOfNew = listOfNew.filter((entity) => entity.tableName !== newTableName);\n      setSucc(newMax - listOfNew.length);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Start Filereader \" + file.name);\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        let json = JSON.parse(content.toString());\n        console.log(\"Json loaded from \" + file.name);\n        scanImportFile(json, file.name);\n      }\n    };\n    fileReader.readAsText(file);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file]);\n\n  return (\n    <FileWrapper>\n      {file.name} {succCount}/{maxCount}\n      <ProgressBar\n        completed={Math.round((succCount / maxCount) * 100)}\n        isLabelVisible={false}\n        bgcolor={\"#F55C5C\"}\n        height={\"5px\"}\n        margin={\"5px\"}\n      />\n    </FileWrapper>\n  );\n};\n\nconst Files = styled.div`\n  flex: 1 1 100%;\n`;\n\nconst FileWrapper = styled.div`\n  width: clac(100% - 20px);\n  height: 50px;\n  padding: 10px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport StringField from \"../form_elements/StringField\";\n\nconst DiscordOptions = () => {\n  const [webhook, setWebhook] = useState<string>(localStorage.getItem(\"webhook\") + \"\");\n  const [webhookUser, setWebhookUser] = useState<string>(localStorage.getItem(\"webhook_user\") + \"\");\n\n  useEffect(() => {\n    if (webhook !== localStorage.getItem(\"webhook\")) localStorage.setItem(\"webhook\", webhook);\n  }, [webhook]);\n\n  useEffect(() => {\n    if (webhookUser !== localStorage.getItem(\"webhook_user\"))\n      localStorage.setItem(\"webhook_user\", webhookUser);\n  }, [webhookUser]);\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Discord Webhook</SelectionTitle>\n        <StringField value={webhookUser} label=\"PlayerName\" onChange={setWebhookUser} />\n        <StringField value={webhook} label=\"Webhook\" onChange={setWebhook} />\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default DiscordOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import IEntity from \"../data/IEntity\";\nimport Spell from \"../data/Spell\";\nimport {\n  SpellSource,\n  SpellRite,\n  SpellDuration,\n  SpellRange,\n  SpellSchool,\n  SpellTarget,\n  SpellDrainType,\n  SpellLevel,\n  SpellCastTime,\n  SpellDamage,\n  SpellScalingEffect,\n  SpellAoeRadius,\n  SpellDirectEffects,\n  SpellProjectileType,\n  SpellProjectileNumber,\n  SpellDamageType,\n  SpellTargetingType,\n  SpellLosRange,\n  SpellSize,\n  SpellPureDamage,\n  SpellHp,\n} from \"../data/SpellValues\";\nimport { saveNewFromList } from \"./DatabaseService\";\n\nexport const scanImportedSpellCsv = (csv: Array<any>, filename: string) => {\n  let listOfSpells: Array<Spell> = [];\n  console.log(\"Raw\", csv);\n  csv.slice(1).forEach((row: Array<string>) => {\n    let newSpell = new Spell(\n      0,\n      row[0],\n      SpellSource.find(row[1]),\n      SpellCastTime.find(row[24]),\n      SpellRite.find(row[4]),\n      SpellDuration.find(row[23]),\n      \"\",\n      SpellRange.find(row[7]),\n      SpellSchool.find(row[25]),\n      row[27],\n      \"\",\n      row[28],\n      row[31],\n      0,\n      +row[29],\n      SpellScalingEffect.find(row[14]),\n      SpellTarget.find(row[3]),\n      SpellAoeRadius.find(row[9]),\n      [\n        SpellDamage.find(row[13]),\n        SpellDamage.find(row[14]),\n        SpellDamage.find(row[15]),\n      ],\n      SpellDirectEffects.NONE,\n      SpellLevel.find(row[2]),\n      SpellProjectileType.find(row[10]),\n      SpellProjectileNumber.find(row[11]),\n      SpellDamageType.find(row[17]),\n      SpellTargetingType.find(row[16]),\n      SpellLosRange.find(row[8]),\n      SpellDrainType.find(row[22]),\n      SpellPureDamage.find(row[18]),\n      SpellSize.find(row[21]),\n      SpellHp.find(row[20]),\n      row[30]?.toLowerCase() === \"yes\" ? true : false,\n      row[6]?.toLowerCase() === \"yes\" ? true : false\n    );\n    newSpell.drain = Spell.calcDrain(newSpell);\n    listOfSpells.push(newSpell);\n  });\n  console.log(\"Processed Spells\", listOfSpells);\n  saveInDB(\"spells\", listOfSpells, filename);\n};\n\nexport const saveInDB = async (\n  tablename: string,\n  listOfIEntity: Array<IEntity>,\n  filename: string\n) => {\n  let listOfNew = [...listOfIEntity];\n  await saveNewFromList(tablename, listOfNew, filename);\n  console.log(\"Done saving\");\n};\n\n// export const parseRowEntry = (entry: string): number => {\n//   return parseInt(\n//     entry.replaceAll(\"€\", \"\").trim().replaceAll(\".\", \"\").replaceAll(\",\", \"\")\n//   );\n// };\n\n// export const updateListsWith = (bookeeEntryJson: BookeeEntry[]) => {\n//   bookeeEntryJson.forEach((entry: BookeeEntry) => {\n//     reciveAllByAttributes(\n//       \"[dateDay+dateMonth+dateYear]\",\n//       [[entry.dateDay, entry.dateMonth, entry.dateYear]],\n//       (data: any[]) => {\n//         let isPresent = false;\n//         data.forEach((dat: any) => {\n//           const compDat = { ...dat };\n//           delete compDat[\"id\"];\n//           if (JSON.stringify(compDat) === JSON.stringify(entry))\n//             isPresent = true;\n//         });\n//         if (!isPresent) {\n//           console.log(\n//             `New Entry on ${\n//               (entry.dateDay, entry.dateMonth, entry.dateYear)\n//             } will be saved.`\n//           );\n//           saveNew(entry);\n//         }\n//       }\n//     );\n//   });\n// };\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst SpellsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Spells?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"Spells\", \"SkirmishTome_Spells.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Spells?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"Spells\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all Spells`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"Spells\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SpellsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst RacesOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Races?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"Races\", \"SkirmishTome_Races.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Races?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"Races\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all Races`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"Races\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default RacesOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { exportAll } from \"../../services/OptionService\";\nimport {\n  deleteAll,\n  reciveAll,\n  reciveCount,\n} from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport P2PReciver from \"../p2p/P2PReciver\";\n\nimport Talent, { isTalent } from \"../../data/Talent\";\n\nimport { faFileExport, faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../general_elements/TabBar\";\nimport IconButton from \"../form_elements/IconButton\";\nimport TalentTile from \"../entities/talents/TalentTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport TalentsOptions from \"./TalentsOptions\";\nimport ImportField, { ImportModus } from \"../form_elements/ImportField\";\nimport DiscordOptions from \"./DiscordOptions\";\nimport { useCSVDownloader, usePapaParse } from \"react-papaparse\";\nimport FileField from \"../form_elements/FileField\";\nimport { scanImportedSpellCsv } from \"../../services/CsvService\";\nimport Spell from \"../../data/Spell\";\nimport Race from \"../../data/Race\";\nimport SpellsOptions from \"./SpellsOptions\";\nimport RacesOptions from \"./RacesOptions\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [talentAmount, setTalentAmount] = useState<number>(0);\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n  const [raceAmount, setRaceAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  const { readString } = usePapaParse();\n  const { CSVDownloader, Type } = useCSVDownloader();\n  const [csvBackup, setBackup] = useState<any>();\n\n  const handleSpellCsvUpload = (files: any) => {\n    const file: File = files[0];\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        readString(content.toString(), {\n          worker: true,\n          complete: (results) => {\n            console.log(\"Csv loaded from \" + file.name);\n            const csv: Array<any> = results.data;\n            console.log(csv);\n            scanImportedSpellCsv(csv, file.name);\n            console.log(\"---------\");\n          },\n        });\n      }\n    };\n    fileReader.readAsText(file);\n  };\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"talents\", (result: number) => {\n        setTalentAmount(result);\n      });\n      let backup: any[] = [];\n      reciveAll(\"spells\", (result: any[]) => {\n        setSpellAmount(result.length);\n        backup.push([\"Spell\"].concat(Object.keys(new Spell())));\n        result.forEach((spell: Spell) => {\n          backup.push([\"\"].concat(Spell.makeCsv(spell)));\n        });\n      });\n      reciveAll(\"talents\", (result: any[]) => {\n        setTalentAmount(result.length);\n        backup.push([\"Talent\"].concat(Object.keys(new Talent())));\n        result.forEach((talent: Talent) => {\n          backup.push([\"\"].concat(Talent.makeCsv(talent)));\n        });\n      });\n      reciveAll(\"races\", (result: any[]) => {\n        setRaceAmount(result.length);\n        backup.push([\"Race\"].concat(Object.keys(new Race())));\n        result.forEach((race: Race) => {\n          backup.push([\"\"].concat(Race.makeCsv(race)));\n        });\n      });\n      setBackup(backup);\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isTalent(entity)) {\n      return <TalentTile key={index} talent={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  return (\n    <>\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <ImportField modus={ImportModus.NORMAL} />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAll(\"SkirmishTome_all.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <CSVDownloader\n          type={Type.Button}\n          filename={\n            \"CsvBackup_\" +\n            new Date().getFullYear() +\n            \".\" +\n            (new Date().getMonth() + 1)\n          }\n          bom={true}\n          config={{\n            delimiter: \";\",\n          }}\n          data={csvBackup}\n        >\n          Download\n        </CSVDownloader>\n      </OptionSection>\n      <TabBar\n        children={[\"General\", \"Spells\", \"Races\", \"Talents\", \"Discord\", \"Receive\", \"CSV Imports\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Spells\" && (\n        <SpellsOptions\n          amount={spellAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n       {activeTab === \"Races\" && (\n        <RacesOptions\n          amount={raceAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Talents\" && (\n        <TalentsOptions\n          amount={talentAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Discord\" && <DiscordOptions />}\n      {activeTab === \"Receive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {activeTab === \"CSV Imports\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Import Spell CSV</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              accept={\".csv\"}\n              icon={faFileImport}\n              onChange={(file) => handleSpellCsvUpload(file)}\n            />\n          </OptionSection>\n        </OptionTab>\n      )}\n      {/* {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })} */}\n    </>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-align: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import Dexie from \"dexie\";\nimport Race from \"../data/Race\";\nimport RandomTable from \"../data/RandomTable\";\nimport Spell from \"../data/Spell\";\nimport Talent from \"../data/Talent\";\n\nexport class SkirmishDB extends Dexie {\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  talents: Dexie.Table<Talent, number>;\n  races: Dexie.Table<Race, number>;\n  spells: Dexie.Table<Spell, number>;\n\n  constructor() {\n    super(\"SkirmishTomeDB\");\n    this.version(1).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(2).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(3).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery,resist, drain\",\n    });\n    this.version(4).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n    });\n\n    this.talents = this.table(\"talents\");\n    this.spells = this.table(\"spells\");\n    this.races = this.table(\"races\");\n    this.randomTables = this.table(\"randomTables\");\n  }\n}\n","import { SkirmishDB } from \"../database/SkirmishDB\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\n// export const saveNewFromList = (tableName: string, entities: BookeeEntry[]) => {\n//   const db = new BookeeDB();\n//   db.open()\n//     .then(async function () {\n//       const refinedEntities = (entities as BookeeEntry[]).map(\n//         (entity: BookeeEntry) => {\n//           delete entity[\"id\"];\n//           return entity;\n//         }\n//       );\n//       const prom = await db.table(tableName).bulkPut(refinedEntities);\n//       return prom;\n//     })\n//     .finally(function () {\n//       db.close();\n//     });\n// };\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new SkirmishDB();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new SkirmishDB();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  style?: any;\n  onClick?: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, style, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick} style={style}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton style={style}>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  style?: any;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, style, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled} style={style}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","export function useWebhook(): { hook: string; name: string } | undefined {\n  if (localStorage.getItem(\"webhook\") !== null && localStorage.getItem(\"webhook\") !== \"\") {\n    let name = \"SkirmishTome\";\n    if (localStorage.getItem(\"webhook_user\") !== null)\n      name = localStorage.getItem(\"webhook_user\") + \"\";\n    return { hook: localStorage.getItem(\"webhook\") + \"\", name: name };\n  } else return undefined;\n}\n","export const sendMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  content: string,\n  avatar?: string\n) => {\n  if (webhook !== undefined) {\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    let params = {\n      username: webhook.name !== \"\" ? webhook.name : \"SkirmishTome\",\n      avatar_url: avatar !== undefined ? avatar : \"\",\n      content: content,\n    };\n    request.send(JSON.stringify(params));\n  }\n};\n\nexport const sendEmbedMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  params: string\n) => {\n  if (webhook !== undefined) {\n    console.log(params);\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.send(params);\n  }\n};\n\nexport const formatDiscordText = (text: string): string => {\n  if (text.includes(\"[[\")) {\n    return text.replaceAll(\"[[\", \"*\").replaceAll(\"]]\", \"*\");\n  } else {\n    return text;\n  }\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","export interface StringPair {\n  label: string;\n  drain: number;\n}\nexport interface NumberPair {\n  label: number;\n  drain: number;\n}\n\n// export class Dummy {\n//   static readonly NONE: StringPair = { label: \"\", drain: 0,};\n//   static readonly DUMMY: StringPair = { label: , drain: 0 };\n\n//   private constructor(\n//     private readonly label: string,\n//     public readonly drain: number\n//   ) {}\n\n//   static find = (label: string): StringPair => {\n//     switch (label?.toLowerCase().trim()) {\n//       case Dummy.DUMMY.label.toLowerCase():\n//         return Dummy.DUMMY;\n//       default:\n//         return Dummy.NONE;\n//     }\n//   };\n//   static getAll = (): string[] => {\n//     return [Dummy.DUMMY.label];\n//   };\n// }\n\nexport class SpellPureDamage {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ACID: StringPair = { label: \"Acid\", drain: 0 };\n  static readonly NECROTIC: StringPair = { label: \"Necrotic\", drain: 0 };\n  static readonly FROST: StringPair = { label: \"Frost\", drain: 0 };\n  static readonly FIRE: StringPair = { label: \"Fire\", drain: 0 };\n  static readonly LIGHTNING: StringPair = { label: \"Lightning\", drain: 0 };\n  static readonly RADIANT: StringPair = { label: \"Radiant\", drain: 0 };\n  static readonly ARCANE: StringPair = { label: \"Arcane\", drain: 1 };\n  static readonly POISON: StringPair = { label: \"Poison\", drain: 0 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellPureDamage.ACID.label.toLowerCase():\n        return SpellPureDamage.ACID;\n      case SpellPureDamage.NECROTIC.label.toLowerCase():\n        return SpellPureDamage.NECROTIC;\n      case SpellPureDamage.FROST.label.toLowerCase():\n        return SpellPureDamage.FROST;\n      case SpellPureDamage.FIRE.label.toLowerCase():\n        return SpellPureDamage.FIRE;\n      case SpellPureDamage.LIGHTNING.label.toLowerCase():\n        return SpellPureDamage.LIGHTNING;\n      case SpellPureDamage.RADIANT.label.toLowerCase():\n        return SpellPureDamage.RADIANT;\n      case SpellPureDamage.ARCANE.label.toLowerCase():\n        return SpellPureDamage.ARCANE;\n      case SpellPureDamage.POISON.label.toLowerCase():\n        return SpellPureDamage.POISON;\n      default:\n        return SpellPureDamage.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellPureDamage.NONE.label,\n      SpellPureDamage.ACID.label,\n      SpellPureDamage.NECROTIC.label,\n      SpellPureDamage.FROST.label,\n      SpellPureDamage.FIRE.label,\n      SpellPureDamage.LIGHTNING.label,\n      SpellPureDamage.RADIANT.label,\n      SpellPureDamage.ARCANE.label,\n      SpellPureDamage.POISON.label,\n    ];\n  };\n}\n\nexport class SpellHp {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSTRUCTUREHP: StringPair = {\n    label: \"1/2 Magic/Faith structure rating and Magic/Faith *1 hit points\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSTRUCTUREDOUBLEHP: StringPair = {\n    label: \"1/2 Magic/Faith structure rating and Magic/Faith *2 hit points\",\n    drain: 1,\n  };\n  static readonly HALFMAGICSTRUCTURETRIPPLEHP: StringPair = {\n    label: \"1/2 Magic/Faith structure rating and Magic/Faith *3 hit points\",\n    drain: 2,\n  };\n  static readonly MAGICSTRUCTUREHP: StringPair = {\n    label: \"Magic/Faith structure rating and Magic/Faith *1 hit points\",\n    drain: 1,\n  };\n  static readonly MAGICSTRUCTUREDOUBLEHP: StringPair = {\n    label: \"Magic/Faith structure rating and Magic/Faith *2 hit points\",\n    drain: 3,\n  };\n  static readonly DOUBLEMAGICESTRUCTUREHP: StringPair = {\n    label: \"Magic/Faith *2 structure rating and Magic/Faith hit points\",\n    drain: 4,\n  };\n  static readonly MAGICHP: StringPair = {\n    label: \"Magic/Faith *1 hit points\",\n    drain: 1,\n  };\n  static readonly MAGICDOUBLEHP: StringPair = {\n    label: \"Magic/Faith *2 hit points\",\n    drain: 2,\n  };\n  static readonly MAGICTRIPPLEHP: StringPair = {\n    label: \"Magic/Faith *3 hit points\",\n    drain: 3,\n  };\n  static readonly MAGICQUADRUPLEHP: StringPair = {\n    label: \"Magic/Faith *4 hit points\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellHp.HALFMAGICSTRUCTUREHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTUREHP;\n      case SpellHp.HALFMAGICSTRUCTUREDOUBLEHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTUREDOUBLEHP;\n      case SpellHp.HALFMAGICSTRUCTURETRIPPLEHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTURETRIPPLEHP;\n      case SpellHp.MAGICSTRUCTUREHP.label.toLowerCase():\n        return SpellHp.MAGICSTRUCTUREHP;\n      case SpellHp.MAGICSTRUCTUREDOUBLEHP.label.toLowerCase():\n        return SpellHp.MAGICSTRUCTUREDOUBLEHP;\n      case SpellHp.DOUBLEMAGICESTRUCTUREHP.label.toLowerCase():\n        return SpellHp.DOUBLEMAGICESTRUCTUREHP;\n      case SpellHp.MAGICHP.label.toLowerCase():\n        return SpellHp.MAGICHP;\n      case SpellHp.MAGICDOUBLEHP.label.toLowerCase():\n        return SpellHp.MAGICDOUBLEHP;\n      case SpellHp.MAGICTRIPPLEHP.label.toLowerCase():\n        return SpellHp.MAGICTRIPPLEHP;\n      case SpellHp.MAGICQUADRUPLEHP.label.toLowerCase():\n        return SpellHp.MAGICQUADRUPLEHP;\n      default:\n        return SpellHp.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellHp.NONE.label,\n      SpellHp.HALFMAGICSTRUCTUREHP.label,\n      SpellHp.HALFMAGICSTRUCTUREDOUBLEHP.label,\n      SpellHp.HALFMAGICSTRUCTURETRIPPLEHP.label,\n      SpellHp.MAGICSTRUCTUREHP.label,\n      SpellHp.MAGICSTRUCTUREDOUBLEHP.label,\n      SpellHp.DOUBLEMAGICESTRUCTUREHP.label,\n      SpellHp.MAGICHP.label,\n      SpellHp.MAGICDOUBLEHP.label,\n      SpellHp.MAGICTRIPPLEHP.label,\n      SpellHp.MAGICQUADRUPLEHP.label,\n    ];\n  };\n}\n\nexport class SpellSize {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSQUARED: StringPair = {\n    label: \"1/2 Magic/Faith M²\",\n    drain: 0,\n  };\n  static readonly MAGICSQUARED: StringPair = {\n    label: \"Magic/Faith M²\",\n    drain: 1,\n  };\n  static readonly DOUBLEMAGICSQUARED: StringPair = {\n    label: \"Magic/Faith *2 M²\",\n    drain: 2,\n  };\n  static readonly TRIPPLEMAGICSQUARED: StringPair = {\n    label: \"Magic/Faith *3 M²\",\n    drain: 4,\n  };\n  static readonly HALFMAGICQUBED: StringPair = {\n    label: \"1/2 Magic/Faith M³\",\n    drain: 0,\n  };\n  static readonly MAGICQUBED: StringPair = {\n    label: \"Magic/Faith M³\",\n    drain: 1,\n  };\n  static readonly DOUBLEMAGICQUBED: StringPair = {\n    label: \"Magic/Faith *2 M³\",\n    drain: 2,\n  };\n  static readonly TRIPPLEMAGICQUBED: StringPair = {\n    label: \"Magic/Faith *3 M³\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSize.HALFMAGICSQUARED.label.toLowerCase():\n        return SpellSize.HALFMAGICSQUARED;\n      case SpellSize.MAGICSQUARED.label.toLowerCase():\n        return SpellSize.MAGICSQUARED;\n      case SpellSize.DOUBLEMAGICSQUARED.label.toLowerCase():\n        return SpellSize.DOUBLEMAGICSQUARED;\n      case SpellSize.TRIPPLEMAGICSQUARED.label.toLowerCase():\n        return SpellSize.TRIPPLEMAGICSQUARED;\n      case SpellSize.HALFMAGICQUBED.label.toLowerCase():\n        return SpellSize.HALFMAGICQUBED;\n      case SpellSize.MAGICQUBED.label.toLowerCase():\n        return SpellSize.MAGICQUBED;\n      case SpellSize.DOUBLEMAGICQUBED.label.toLowerCase():\n        return SpellSize.DOUBLEMAGICQUBED;\n      case SpellSize.TRIPPLEMAGICQUBED.label.toLowerCase():\n        return SpellSize.TRIPPLEMAGICQUBED;\n      default:\n        return SpellSize.HALFMAGICSQUARED;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSize.NONE.label,\n      SpellSize.HALFMAGICSQUARED.label,\n      SpellSize.MAGICSQUARED.label,\n      SpellSize.DOUBLEMAGICSQUARED.label,\n      SpellSize.TRIPPLEMAGICSQUARED.label,\n      SpellSize.HALFMAGICQUBED.label,\n      SpellSize.MAGICQUBED.label,\n      SpellSize.DOUBLEMAGICQUBED.label,\n      SpellSize.TRIPPLEMAGICQUBED.label,\n    ];\n  };\n}\n\nexport class SpellDirectEffects {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly DIFFICULTTERRAIN: StringPair = {\n    label: \"Difficult Terrain\",\n    drain: 1,\n  };\n  static readonly LIFELEECH: StringPair = { label: \"Life Leech\", drain: 2 };\n  static readonly COMMUNICATE: StringPair = { label: \"Communicate\", drain: 2 };\n  static readonly CONFUSIONSTUNBLIND: StringPair = {\n    label: \"Confusion / Stun / Blind\",\n    drain: 3,\n  };\n  static readonly HEX: StringPair = { label: \"Hex\", drain: 4 };\n  static readonly IMPAIRMOVEMENTVISION: StringPair = {\n    label: \"Impair Movement / Vision\",\n    drain: 4,\n  };\n  static readonly MOVEFEARROOT: StringPair = {\n    label: \"Move / Fear / Root\",\n    drain: 4,\n  };\n  static readonly DOT: StringPair = { label: \"Damage Over Time\", drain: 3 };\n  static readonly INCAPACITATE: StringPair = {\n    label: \"Incapacitate\",\n    drain: 4,\n  };\n  static readonly SPHERE: StringPair = { label: \"Sphere\", drain: 5 };\n  static readonly KNOCKDOWN: StringPair = { label: \"Knockdown\", drain: 2 };\n  static readonly WALLBARRIERCONSTRUCTSUMMON: StringPair = {\n    label: \"Wall / Barrier / Construct / Summon\",\n    drain: 0,\n  };\n  static readonly TELEPORT: StringPair = { label: \"Teleport\", drain: 6 };\n  static readonly HEAL: StringPair = { label: \"Heal\", drain: 5 };\n  static readonly BUFFILLUSIONSHIELD: StringPair = {\n    label: \"Buff / Illusion / Shield\",\n    drain: 5,\n  };\n  static readonly CHARMCONTROLINFLUENCE: StringPair = {\n    label: \"Charm / Control / Influence\",\n    drain: 3,\n  };\n  static readonly TRANSFORM: StringPair = { label: \"Transform\", drain: 4 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDirectEffects.DIFFICULTTERRAIN.label.toLowerCase():\n        return SpellDirectEffects.DIFFICULTTERRAIN;\n      case SpellDirectEffects.LIFELEECH.label.toLowerCase():\n        return SpellDirectEffects.LIFELEECH;\n      case SpellDirectEffects.COMMUNICATE.label.toLowerCase():\n        return SpellDirectEffects.COMMUNICATE;\n      case SpellDirectEffects.CONFUSIONSTUNBLIND.label.toLowerCase():\n        return SpellDirectEffects.CONFUSIONSTUNBLIND;\n      case SpellDirectEffects.HEX.label.toLowerCase():\n        return SpellDirectEffects.HEX;\n      case SpellDirectEffects.IMPAIRMOVEMENTVISION.label.toLowerCase():\n        return SpellDirectEffects.IMPAIRMOVEMENTVISION;\n      case SpellDirectEffects.MOVEFEARROOT.label.toLowerCase():\n        return SpellDirectEffects.MOVEFEARROOT;\n      case SpellDirectEffects.DOT.label.toLowerCase():\n        return SpellDirectEffects.DOT;\n      case SpellDirectEffects.INCAPACITATE.label.toLowerCase():\n        return SpellDirectEffects.INCAPACITATE;\n      case SpellDirectEffects.SPHERE.label.toLowerCase():\n        return SpellDirectEffects.SPHERE;\n      case SpellDirectEffects.KNOCKDOWN.label.toLowerCase():\n        return SpellDirectEffects.KNOCKDOWN;\n      case SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON.label.toLowerCase():\n        return SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON;\n      case SpellDirectEffects.TELEPORT.label.toLowerCase():\n        return SpellDirectEffects.TELEPORT;\n      case SpellDirectEffects.HEAL.label.toLowerCase():\n        return SpellDirectEffects.HEAL;\n      case SpellDirectEffects.BUFFILLUSIONSHIELD.label.toLowerCase():\n        return SpellDirectEffects.BUFFILLUSIONSHIELD;\n      case SpellDirectEffects.CHARMCONTROLINFLUENCE.label.toLowerCase():\n        return SpellDirectEffects.CHARMCONTROLINFLUENCE;\n      case SpellDirectEffects.TRANSFORM.label.toLowerCase():\n        return SpellDirectEffects.TRANSFORM;\n      default:\n        return SpellDirectEffects.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDirectEffects.NONE.label,\n      SpellDirectEffects.DIFFICULTTERRAIN.label,\n      SpellDirectEffects.LIFELEECH.label,\n      SpellDirectEffects.COMMUNICATE.label,\n      SpellDirectEffects.CONFUSIONSTUNBLIND.label,\n      SpellDirectEffects.HEX.label,\n      SpellDirectEffects.IMPAIRMOVEMENTVISION.label,\n      SpellDirectEffects.MOVEFEARROOT.label,\n      SpellDirectEffects.DOT.label,\n      SpellDirectEffects.INCAPACITATE.label,\n      SpellDirectEffects.SPHERE.label,\n      SpellDirectEffects.KNOCKDOWN.label,\n      SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON.label,\n      SpellDirectEffects.TELEPORT.label,\n      SpellDirectEffects.HEAL.label,\n      SpellDirectEffects.BUFFILLUSIONSHIELD.label,\n      SpellDirectEffects.CHARMCONTROLINFLUENCE.label,\n      SpellDirectEffects.TRANSFORM.label,\n    ];\n  };\n}\n\nexport class SpellScalingEffect {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly MYSTBRADIUS: StringPair = {\n    label: \"plus MystB Meters Radius\",\n    drain: 2,\n  };\n  static readonly MYSTBPROJECTILES: StringPair = {\n    label: \"plus MystB Projectiles\",\n    drain: 2,\n  };\n  static readonly ONEVARIABLEPROJECTILE: StringPair = {\n    label: \"1 Projectile/Effect per Variable Factor\",\n    drain: 3,\n  };\n  static readonly ONEPROJECTILETHREEMAGIC: StringPair = {\n    label: \"1 Projectile/Effect per 3 Magic/Faith Rating\",\n    drain: 2,\n  };\n  static readonly ONEPROJECTILETWOMAGIC: StringPair = {\n    label: \"1 Projectile/Effect per 2 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly ONEPROJECTILERADIUSTWOMAGIC: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per 2 Magic/Faith Rating\",\n    drain: 5,\n  };\n  static readonly ONEPROJECTILERADIUSTHREEMAGIC: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per 3 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PROJECTILETWOMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 2 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PROJECTILETHREEMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 3 Magic/Faith Rating\",\n    drain: 3,\n  };\n  static readonly ONEPROJECTILEFOURMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 4 Magic/Faith Rating\",\n    drain: 2,\n  };\n  static readonly MYSTBRADIUSEFFECT: StringPair = {\n    label: \"plus MystB Meters Radius & Effect\",\n    drain: 3,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellScalingEffect.MYSTBRADIUS.label.toLowerCase():\n        return SpellScalingEffect.MYSTBRADIUS;\n      case SpellScalingEffect.MYSTBPROJECTILES.label.toLowerCase():\n        return SpellScalingEffect.MYSTBPROJECTILES;\n      case SpellScalingEffect.ONEVARIABLEPROJECTILE.label.toLowerCase():\n        return SpellScalingEffect.ONEVARIABLEPROJECTILE;\n      case SpellScalingEffect.ONEPROJECTILETHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.ONEPROJECTILETHREEMAGIC;\n      case SpellScalingEffect.ONEPROJECTILETWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.ONEPROJECTILETWOMAGIC;\n      case SpellScalingEffect.ONEPROJECTILERADIUSTWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.ONEPROJECTILERADIUSTWOMAGIC;\n      case SpellScalingEffect.ONEPROJECTILERADIUSTHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.ONEPROJECTILERADIUSTHREEMAGIC;\n      case SpellScalingEffect.PROJECTILETWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILETWOMAGIC;\n      case SpellScalingEffect.PROJECTILETHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILETHREEMAGIC;\n      case SpellScalingEffect.ONEPROJECTILEFOURMAGIC.label.toLowerCase():\n        return SpellScalingEffect.ONEPROJECTILEFOURMAGIC;\n      case SpellScalingEffect.MYSTBRADIUSEFFECT.label.toLowerCase():\n        return SpellScalingEffect.MYSTBRADIUSEFFECT;\n      default:\n        return SpellScalingEffect.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellScalingEffect.NONE.label,\n      SpellScalingEffect.MYSTBRADIUS.label,\n      SpellScalingEffect.MYSTBPROJECTILES.label,\n      SpellScalingEffect.ONEVARIABLEPROJECTILE.label,\n      SpellScalingEffect.ONEPROJECTILETHREEMAGIC.label,\n      SpellScalingEffect.ONEPROJECTILETWOMAGIC.label,\n      SpellScalingEffect.ONEPROJECTILERADIUSTWOMAGIC.label,\n      SpellScalingEffect.ONEPROJECTILERADIUSTHREEMAGIC.label,\n      SpellScalingEffect.PROJECTILETWOMAGIC.label,\n      SpellScalingEffect.PROJECTILETHREEMAGIC.label,\n      SpellScalingEffect.ONEPROJECTILEFOURMAGIC.label,\n      SpellScalingEffect.MYSTBRADIUSEFFECT.label,\n    ];\n  };\n}\n\nexport class SpellDamageType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly COMBINED: StringPair = { label: \"Combined\", drain: 0 };\n  static readonly PHYSICAL: StringPair = { label: \"Physical\", drain: 0 };\n  static readonly STUN: StringPair = { label: \"Stun\", drain: 1 };\n  static readonly PURE: StringPair = { label: \"Pure\", drain: 2 };\n  static readonly FATIGUE: StringPair = { label: \"Fatigue\", drain: 3 };\n  static readonly AGONY: StringPair = { label: \"Agony\", drain: 5 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDamageType.COMBINED.label.toLowerCase():\n        return SpellDamageType.COMBINED;\n      case SpellDamageType.PHYSICAL.label.toLowerCase():\n        return SpellDamageType.PHYSICAL;\n      case SpellDamageType.STUN.label.toLowerCase():\n        return SpellDamageType.STUN;\n      case SpellDamageType.PURE.label.toLowerCase():\n        return SpellDamageType.PURE;\n      case SpellDamageType.FATIGUE.label.toLowerCase():\n        return SpellDamageType.FATIGUE;\n      case SpellDamageType.AGONY.label.toLowerCase():\n        return SpellDamageType.AGONY;\n      default:\n        return SpellDamageType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDamageType.NONE.label,\n      SpellDamageType.COMBINED.label,\n      SpellDamageType.PHYSICAL.label,\n      SpellDamageType.STUN.label,\n      SpellDamageType.PURE.label,\n      SpellDamageType.FATIGUE.label,\n      SpellDamageType.AGONY.label,\n    ];\n  };\n}\n\nexport class SpellDamage {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONEPRMAGIC: StringPair = {\n    label: \"1 PR Magic/Faith\",\n    drain: 3,\n  };\n  static readonly TWOPRMAGIC: StringPair = {\n    label: \"2 PR Magic/Faith\",\n    drain: 4,\n  };\n  static readonly THREEPRMAGIC: StringPair = {\n    label: \"3 PR Magic/Faith\",\n    drain: 6,\n  };\n  static readonly FOURPRMAGIC: StringPair = {\n    label: \"4 PR Magic/Faith\",\n    drain: 8,\n  };\n  static readonly FIVEPRMAGIC: StringPair = {\n    label: \"5 PR Magic/Faith\",\n    drain: 12,\n  };\n  static readonly ONE: StringPair = { label: \"1\", drain: 1 };\n  static readonly TWO: StringPair = { label: \"2\", drain: 2 };\n  static readonly THREE: StringPair = { label: \"3\", drain: 3 };\n  static readonly FOUR: StringPair = { label: \"4\", drain: 4 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 5 };\n  static readonly ONEDFOUR: StringPair = { label: \"1d4\", drain: 1 };\n  static readonly ONEDSIX: StringPair = { label: \"1d6\", drain: 1 };\n  static readonly ONEDEIGHT: StringPair = { label: \"1d8\", drain: 2 };\n  static readonly ONEDTEN: StringPair = { label: \"1d10\", drain: 3 };\n  static readonly ONEDTWELVE: StringPair = { label: \"1d12\", drain: 3 };\n  static readonly ONEDTWENTY: StringPair = { label: \"1d20\", drain: 5 };\n  static readonly TWODFOUR: StringPair = { label: \"2d4\", drain: 2 };\n  static readonly TWODSIX: StringPair = { label: \"2d6\", drain: 3 };\n  static readonly TWODEIGHT: StringPair = { label: \"2d8\", drain: 4 };\n  static readonly TWODTEN: StringPair = { label: \"2d10\", drain: 5 };\n  static readonly TWODTWELVE: StringPair = { label: \"2d12\", drain: 5 };\n  static readonly TWODTWENTY: StringPair = { label: \"2d20\", drain: 10 };\n  static readonly THREEDFOUR: StringPair = { label: \"3d4\", drain: 3 };\n  static readonly THREEDSIX: StringPair = { label: \"3d6\", drain: 5 };\n  static readonly THREEDEIGHT: StringPair = { label: \"3d8\", drain: 6 };\n  static readonly THREEDTEN: StringPair = { label: \"3d10\", drain: 7 };\n  static readonly THREEDTWELVE: StringPair = { label: \"3d12\", drain: 9 };\n  static readonly FOURDFOUR: StringPair = { label: \"4d4\", drain: 4 };\n  static readonly FOURDSIX: StringPair = { label: \"4d6\", drain: 6 };\n  static readonly FOURDEIGHT: StringPair = { label: \"4d8\", drain: 8 };\n  static readonly FOURDTEN: StringPair = { label: \"4d10\", drain: 11 };\n  static readonly FIVEDFOUR: StringPair = { label: \"5d4\", drain: 5 };\n  static readonly FIVEDSIX: StringPair = { label: \"5d6\", drain: 8 };\n  static readonly FIVEDEIGHT: StringPair = { label: \"5d8\", drain: 12 };\n  static readonly SIXDFOUR: StringPair = { label: \"6d4\", drain: 7 };\n  static readonly MYSTB: StringPair = { label: \"MystB\", drain: 1 };\n  static readonly MYSTBDOUBLE: StringPair = { label: \"MystB *2\", drain: 2 };\n  static readonly QUARTERMAGIC: StringPair = {\n    label: \"1/4 Magic/Faith\",\n    drain: 2,\n  };\n  static readonly HALFMAGIC: StringPair = {\n    label: \"1/2 Magic/Faith\",\n    drain: 3,\n  };\n  static readonly MAGIC: StringPair = { label: \"Magic/Faith\", drain: 4 };\n  static readonly COLLETERAL: StringPair = {\n    label: \"Collateral Damage based on environment\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDamage.ONEPRMAGIC.label.toLowerCase():\n        return SpellDamage.ONEPRMAGIC;\n      case SpellDamage.TWOPRMAGIC.label.toLowerCase():\n        return SpellDamage.TWOPRMAGIC;\n      case SpellDamage.THREEPRMAGIC.label.toLowerCase():\n        return SpellDamage.THREEPRMAGIC;\n      case SpellDamage.FOURPRMAGIC.label.toLowerCase():\n        return SpellDamage.FOURPRMAGIC;\n      case SpellDamage.FIVEPRMAGIC.label.toLowerCase():\n        return SpellDamage.FIVEPRMAGIC;\n      case SpellDamage.ONE.label.toLowerCase():\n        return SpellDamage.ONE;\n      case SpellDamage.TWO.label.toLowerCase():\n        return SpellDamage.TWO;\n      case SpellDamage.THREE.label.toLowerCase():\n        return SpellDamage.THREE;\n      case SpellDamage.FOUR.label.toLowerCase():\n        return SpellDamage.FOUR;\n      case SpellDamage.FIVE.label.toLowerCase():\n        return SpellDamage.FIVE;\n      case SpellDamage.ONEDFOUR.label.toLowerCase():\n        return SpellDamage.ONEDFOUR;\n      case SpellDamage.ONEDSIX.label.toLowerCase():\n        return SpellDamage.ONEDSIX;\n      case SpellDamage.ONEDEIGHT.label.toLowerCase():\n        return SpellDamage.ONEDEIGHT;\n      case SpellDamage.ONEDTEN.label.toLowerCase():\n        return SpellDamage.ONEDTEN;\n      case SpellDamage.ONEDTWELVE.label.toLowerCase():\n        return SpellDamage.ONEDTWELVE;\n      case SpellDamage.ONEDTWENTY.label.toLowerCase():\n        return SpellDamage.ONEDTWENTY;\n      case SpellDamage.TWODFOUR.label.toLowerCase():\n        return SpellDamage.TWODFOUR;\n      case SpellDamage.TWODSIX.label.toLowerCase():\n        return SpellDamage.TWODSIX;\n      case SpellDamage.TWODEIGHT.label.toLowerCase():\n        return SpellDamage.TWODEIGHT;\n      case SpellDamage.TWODTEN.label.toLowerCase():\n        return SpellDamage.TWODTEN;\n      case SpellDamage.TWODTWELVE.label.toLowerCase():\n        return SpellDamage.TWODTWELVE;\n      case SpellDamage.TWODTWENTY.label.toLowerCase():\n        return SpellDamage.TWODTWENTY;\n      case SpellDamage.THREEDFOUR.label.toLowerCase():\n        return SpellDamage.THREEDFOUR;\n      case SpellDamage.THREEDSIX.label.toLowerCase():\n        return SpellDamage.THREEDSIX;\n      case SpellDamage.THREEDEIGHT.label.toLowerCase():\n        return SpellDamage.THREEDEIGHT;\n      case SpellDamage.THREEDTEN.label.toLowerCase():\n        return SpellDamage.THREEDTEN;\n      case SpellDamage.THREEDTWELVE.label.toLowerCase():\n        return SpellDamage.THREEDTWELVE;\n      case SpellDamage.FOURDFOUR.label.toLowerCase():\n        return SpellDamage.FOURDFOUR;\n      case SpellDamage.FOURDSIX.label.toLowerCase():\n        return SpellDamage.FOURDSIX;\n      case SpellDamage.FOURDEIGHT.label.toLowerCase():\n        return SpellDamage.FOURDEIGHT;\n      case SpellDamage.FOURDTEN.label.toLowerCase():\n        return SpellDamage.FOURDTEN;\n      case SpellDamage.FIVEDFOUR.label.toLowerCase():\n        return SpellDamage.FIVEDFOUR;\n      case SpellDamage.FIVEDSIX.label.toLowerCase():\n        return SpellDamage.FIVEDSIX;\n      case SpellDamage.FIVEDEIGHT.label.toLowerCase():\n        return SpellDamage.FIVEDEIGHT;\n      case SpellDamage.SIXDFOUR.label.toLowerCase():\n        return SpellDamage.SIXDFOUR;\n      case SpellDamage.MYSTB.label.toLowerCase():\n        return SpellDamage.MYSTB;\n      case SpellDamage.MYSTBDOUBLE.label.toLowerCase():\n        return SpellDamage.MYSTBDOUBLE;\n      case SpellDamage.QUARTERMAGIC.label.toLowerCase():\n        return SpellDamage.QUARTERMAGIC;\n      case SpellDamage.HALFMAGIC.label.toLowerCase():\n        return SpellDamage.HALFMAGIC;\n      case SpellDamage.MAGIC.label.toLowerCase():\n        return SpellDamage.MAGIC;\n      case SpellDamage.COLLETERAL.label.toLowerCase():\n        return SpellDamage.COLLETERAL;\n      default:\n        return SpellDamage.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDamage.NONE.label,\n      SpellDamage.ONEPRMAGIC.label,\n      SpellDamage.TWOPRMAGIC.label,\n      SpellDamage.THREEPRMAGIC.label,\n      SpellDamage.FOURPRMAGIC.label,\n      SpellDamage.FIVEPRMAGIC.label,\n      SpellDamage.ONE.label,\n      SpellDamage.TWO.label,\n      SpellDamage.THREE.label,\n      SpellDamage.FOUR.label,\n      SpellDamage.FIVE.label,\n      SpellDamage.ONEDFOUR.label,\n      SpellDamage.ONEDSIX.label,\n      SpellDamage.ONEDEIGHT.label,\n      SpellDamage.ONEDTEN.label,\n      SpellDamage.ONEDTWELVE.label,\n      SpellDamage.ONEDTWENTY.label,\n      SpellDamage.TWODFOUR.label,\n      SpellDamage.TWODSIX.label,\n      SpellDamage.TWODEIGHT.label,\n      SpellDamage.TWODTEN.label,\n      SpellDamage.TWODTWELVE.label,\n      SpellDamage.TWODTWENTY.label,\n      SpellDamage.THREEDFOUR.label,\n      SpellDamage.THREEDSIX.label,\n      SpellDamage.THREEDEIGHT.label,\n      SpellDamage.THREEDTEN.label,\n      SpellDamage.THREEDTWELVE.label,\n      SpellDamage.FOURDFOUR.label,\n      SpellDamage.FOURDSIX.label,\n      SpellDamage.FOURDEIGHT.label,\n      SpellDamage.FOURDTEN.label,\n      SpellDamage.FIVEDFOUR.label,\n      SpellDamage.FIVEDSIX.label,\n      SpellDamage.FIVEDEIGHT.label,\n      SpellDamage.SIXDFOUR.label,\n      SpellDamage.MYSTB.label,\n      SpellDamage.MYSTBDOUBLE.label,\n      SpellDamage.QUARTERMAGIC.label,\n      SpellDamage.HALFMAGIC.label,\n      SpellDamage.MAGIC.label,\n      SpellDamage.COLLETERAL.label,\n    ];\n  };\n}\n\nexport class SpellAoeRadius {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONEMETER: StringPair = { label: \"1 Meter\", drain: -1 };\n  static readonly TWOMETER: StringPair = { label: \"2 Meter\", drain: 0 };\n  static readonly THREEMETER: StringPair = { label: \"3 Meter\", drain: 1 };\n  static readonly FOURMETER: StringPair = { label: \"4 Meter\", drain: 2 };\n  static readonly FIVEMETER: StringPair = { label: \"5 Meter\", drain: 2 };\n  static readonly SIXMETER: StringPair = { label: \"6 Meter\", drain: 3 };\n  static readonly SEVENMETER: StringPair = { label: \"7 Meter\", drain: 3 };\n  static readonly EIGHTMETER: StringPair = { label: \"8 Meter\", drain: 4 };\n  static readonly NINEMETER: StringPair = { label: \"9 Meter\", drain: 4 };\n  static readonly TENMETER: StringPair = { label: \"10 Meter\", drain: 5 };\n  static readonly HALFMAGICMETER: StringPair = {\n    label: \"1/2 Magic/Faith Meter\",\n    drain: 2,\n  };\n  static readonly MAGICMETER: StringPair = {\n    label: \"Magic/Faith Meters\",\n    drain: 3,\n  };\n  static readonly DOUBLEMAGICMETER: StringPair = {\n    label: \"Magic/Faith *2 Meters\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellAoeRadius.ONEMETER.label.toLowerCase():\n        return SpellAoeRadius.ONEMETER;\n      case SpellAoeRadius.TWOMETER.label.toLowerCase():\n        return SpellAoeRadius.TWOMETER;\n      case SpellAoeRadius.THREEMETER.label.toLowerCase():\n        return SpellAoeRadius.THREEMETER;\n      case SpellAoeRadius.FOURMETER.label.toLowerCase():\n        return SpellAoeRadius.FOURMETER;\n      case SpellAoeRadius.FIVEMETER.label.toLowerCase():\n        return SpellAoeRadius.FIVEMETER;\n      case SpellAoeRadius.SIXMETER.label.toLowerCase():\n        return SpellAoeRadius.SIXMETER;\n      case SpellAoeRadius.SEVENMETER.label.toLowerCase():\n        return SpellAoeRadius.SEVENMETER;\n      case SpellAoeRadius.EIGHTMETER.label.toLowerCase():\n        return SpellAoeRadius.EIGHTMETER;\n      case SpellAoeRadius.NINEMETER.label.toLowerCase():\n        return SpellAoeRadius.NINEMETER;\n      case SpellAoeRadius.TENMETER.label.toLowerCase():\n        return SpellAoeRadius.TENMETER;\n      case SpellAoeRadius.HALFMAGICMETER.label.toLowerCase():\n        return SpellAoeRadius.HALFMAGICMETER;\n      case SpellAoeRadius.MAGICMETER.label.toLowerCase():\n        return SpellAoeRadius.MAGICMETER;\n      case SpellAoeRadius.DOUBLEMAGICMETER.label.toLowerCase():\n        return SpellAoeRadius.DOUBLEMAGICMETER;\n      default:\n        return SpellAoeRadius.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellAoeRadius.NONE.label,\n      SpellAoeRadius.ONEMETER.label,\n      SpellAoeRadius.TWOMETER.label,\n      SpellAoeRadius.THREEMETER.label,\n      SpellAoeRadius.FOURMETER.label,\n      SpellAoeRadius.FIVEMETER.label,\n      SpellAoeRadius.SIXMETER.label,\n      SpellAoeRadius.SEVENMETER.label,\n      SpellAoeRadius.EIGHTMETER.label,\n      SpellAoeRadius.NINEMETER.label,\n      SpellAoeRadius.TENMETER.label,\n      SpellAoeRadius.HALFMAGICMETER.label,\n      SpellAoeRadius.MAGICMETER.label,\n      SpellAoeRadius.DOUBLEMAGICMETER.label,\n    ];\n  };\n}\n\nexport class SpellLosRange {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGIC: StringPair = {\n    label: \"1/2 Magic/Faith meters\",\n    drain: -1,\n  };\n  static readonly ONEMAGIC: StringPair = {\n    label: \"Magic/Faith meters\",\n    drain: -1,\n  };\n  static readonly TWOMAGIC: StringPair = {\n    label: \"Magic/Faith *2 meters\",\n    drain: 0,\n  };\n  static readonly THREEMAGIC: StringPair = {\n    label: \"Magic/Faith *3 meters\",\n    drain: 1,\n  };\n  static readonly FOURMAGIC: StringPair = {\n    label: \"Magic/Faith *4 meters\",\n    drain: 2,\n  };\n  static readonly FIVEMAGIC: StringPair = {\n    label: \"Magic/Faith *5 meters\",\n    drain: 3,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellLosRange.HALFMAGIC.label.toLowerCase():\n        return SpellLosRange.HALFMAGIC;\n      case SpellLosRange.ONEMAGIC.label.toLowerCase():\n        return SpellLosRange.ONEMAGIC;\n      case SpellLosRange.TWOMAGIC.label.toLowerCase():\n        return SpellLosRange.TWOMAGIC;\n      case SpellLosRange.THREEMAGIC.label.toLowerCase():\n        return SpellLosRange.THREEMAGIC;\n      case SpellLosRange.FOURMAGIC.label.toLowerCase():\n        return SpellLosRange.FOURMAGIC;\n      case SpellLosRange.FIVEMAGIC.label.toLowerCase():\n        return SpellLosRange.FIVEMAGIC;\n      default:\n        return SpellLosRange.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellLosRange.NONE.label,\n      SpellLosRange.HALFMAGIC.label,\n      SpellLosRange.ONEMAGIC.label,\n      SpellLosRange.TWOMAGIC.label,\n      SpellLosRange.THREEMAGIC.label,\n      SpellLosRange.FOURMAGIC.label,\n      SpellLosRange.FIVEMAGIC.label,\n    ];\n  };\n}\n\nexport class SpellProjectileNumber {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONE: StringPair = { label: \"1\", drain: 1 };\n  static readonly TWO: StringPair = { label: \"2\", drain: 2 };\n  static readonly THREE: StringPair = { label: \"3\", drain: 4 };\n  static readonly FOUR: StringPair = { label: \"4\", drain: 6 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 8 };\n  static readonly SCALING: StringPair = {\n    label: \"Scaling / Variable\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellProjectileNumber.ONE.label.toLowerCase():\n        return SpellProjectileNumber.ONE;\n      case SpellProjectileNumber.TWO.label.toLowerCase():\n        return SpellProjectileNumber.TWO;\n      case SpellProjectileNumber.THREE.label.toLowerCase():\n        return SpellProjectileNumber.THREE;\n      case SpellProjectileNumber.FOUR.label.toLowerCase():\n        return SpellProjectileNumber.FOUR;\n      case SpellProjectileNumber.FIVE.label.toLowerCase():\n        return SpellProjectileNumber.FIVE;\n      case SpellProjectileNumber.SCALING.label.toLowerCase():\n        return SpellProjectileNumber.SCALING;\n      default:\n        return SpellProjectileNumber.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellProjectileNumber.NONE.label,\n      SpellProjectileNumber.ONE.label,\n      SpellProjectileNumber.TWO.label,\n      SpellProjectileNumber.THREE.label,\n      SpellProjectileNumber.FOUR.label,\n      SpellProjectileNumber.FIVE.label,\n      SpellProjectileNumber.SCALING.label,\n    ];\n  };\n}\n\nexport class SpellProjectileType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly BALL: StringPair = { label: \"Ball\", drain: -1 };\n  static readonly MISSILE: StringPair = { label: \"Missile\", drain: 0 };\n  static readonly BOLT: StringPair = { label: \"Bolt\", drain: 0 };\n  static readonly RAY: StringPair = { label: \"Ray\", drain: 1 };\n  static readonly SPRAY: StringPair = { label: \"Spray\", drain: 0 };\n  static readonly LASSO: StringPair = { label: \"Lasso\", drain: 1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellProjectileType.BALL.label.toLowerCase():\n        return SpellProjectileType.BALL;\n      case SpellProjectileType.MISSILE.label.toLowerCase():\n        return SpellProjectileType.MISSILE;\n      case SpellProjectileType.BOLT.label.toLowerCase():\n        return SpellProjectileType.BOLT;\n      case SpellProjectileType.RAY.label.toLowerCase():\n        return SpellProjectileType.RAY;\n      case SpellProjectileType.SPRAY.label.toLowerCase():\n        return SpellProjectileType.SPRAY;\n      case SpellProjectileType.LASSO.label.toLowerCase():\n        return SpellProjectileType.LASSO;\n      default:\n        return SpellProjectileType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellProjectileType.NONE.label,\n      SpellProjectileType.BALL.label,\n      SpellProjectileType.MISSILE.label,\n      SpellProjectileType.BOLT.label,\n      SpellProjectileType.RAY.label,\n      SpellProjectileType.SPRAY.label,\n      SpellProjectileType.LASSO.label,\n    ];\n  };\n}\n\nexport class SpellTargetingType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly DIRECTTARGET: StringPair = {\n    label: \"Direct Target\",\n    drain: 0,\n  };\n  static readonly AURATARGETING: StringPair = {\n    label: \"Aura Targeting\",\n    drain: 2,\n  };\n  static readonly INDIRECTTARGETING: StringPair = {\n    label: \"Indirect Targeting\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellTargetingType.DIRECTTARGET.label.toLowerCase():\n        return SpellTargetingType.DIRECTTARGET;\n      case SpellTargetingType.AURATARGETING.label.toLowerCase():\n        return SpellTargetingType.AURATARGETING;\n      case SpellTargetingType.INDIRECTTARGETING.label.toLowerCase():\n        return SpellTargetingType.INDIRECTTARGETING;\n      default:\n        return SpellTargetingType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellTargetingType.NONE.label,\n      SpellTargetingType.DIRECTTARGET.label,\n      SpellTargetingType.AURATARGETING.label,\n      SpellTargetingType.INDIRECTTARGETING.label,\n    ];\n  };\n}\n\nexport class SpellCastTime {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly FOURMYSTBROUNDS: StringPair = {\n    label: \"4 - Mystb Rounds\",\n    drain: 2,\n  };\n  static readonly NINETHREE: StringPair = { label: \"9 + 3\", drain: -4 };\n  static readonly NINETHREECHANNEL: StringPair = {\n    label: \"9 + 3 (Channel)\",\n    drain: -3,\n  };\n  static readonly SEVENTHREE: StringPair = { label: \"7 + 3\", drain: -1 };\n  static readonly FIVETHREE: StringPair = { label: \"5 + 3\", drain: 1 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 4 };\n  static readonly DRAINCHENNEL: StringPair = {\n    label: \"Drain (Channel)\",\n    drain: -3,\n  };\n  static readonly DRAINTHREE: StringPair = { label: \"Drain + 3\", drain: -2 };\n  static readonly MAGIFAITHHOURS: StringPair = {\n    label: \"24/MagiFaith Hours\",\n    drain: 0,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellCastTime.FOURMYSTBROUNDS.label.toLowerCase():\n        return SpellCastTime.FOURMYSTBROUNDS;\n      case SpellCastTime.NINETHREE.label.toLowerCase():\n        return SpellCastTime.NINETHREE;\n      case SpellCastTime.NINETHREECHANNEL.label.toLowerCase():\n        return SpellCastTime.NINETHREECHANNEL;\n      case SpellCastTime.SEVENTHREE.label.toLowerCase():\n        return SpellCastTime.SEVENTHREE;\n      case SpellCastTime.FIVETHREE.label.toLowerCase():\n        return SpellCastTime.FIVETHREE;\n      case SpellCastTime.FIVE.label.toLowerCase():\n        return SpellCastTime.FIVE;\n      case SpellCastTime.DRAINCHENNEL.label.toLowerCase():\n        return SpellCastTime.DRAINCHENNEL;\n      case SpellCastTime.DRAINTHREE.label.toLowerCase():\n        return SpellCastTime.DRAINTHREE;\n      case SpellCastTime.MAGIFAITHHOURS.label.toLowerCase():\n        return SpellCastTime.MAGIFAITHHOURS;\n      default:\n        return SpellCastTime.NONE;\n    }\n  };\n  static getAllPhysical = (): string[] => {\n    return [\n      SpellCastTime.NONE.label,\n      SpellCastTime.FOURMYSTBROUNDS.label,\n      SpellCastTime.NINETHREE.label,\n      SpellCastTime.NINETHREECHANNEL.label,\n      SpellCastTime.SEVENTHREE.label,\n      SpellCastTime.FIVETHREE.label,\n      SpellCastTime.FIVE.label,\n      SpellCastTime.DRAINCHENNEL.label,\n      SpellCastTime.DRAINTHREE.label,\n      SpellCastTime.MAGIFAITHHOURS.label,\n    ];\n  };\n  static getAllStun = (): string[] => {\n    return [\n      SpellCastTime.NONE.label,\n      SpellCastTime.FOURMYSTBROUNDS.label,\n      SpellCastTime.NINETHREE.label,\n      SpellCastTime.NINETHREECHANNEL.label,\n      SpellCastTime.SEVENTHREE.label,\n      SpellCastTime.FIVETHREE.label,\n      SpellCastTime.FIVE.label,\n      SpellCastTime.MAGIFAITHHOURS.label,\n    ];\n  };\n}\n\nexport class SpellLevel {\n  static readonly NONE: NumberPair = {\n    label: 0,\n    drain: 0,\n  };\n  static readonly ONE: NumberPair = { label: 1, drain: -4 };\n  static readonly TWO: NumberPair = { label: 2, drain: -3 };\n  static readonly THREE: NumberPair = { label: 3, drain: -2 };\n  static readonly FOUR: NumberPair = { label: 4, drain: -1 };\n  static readonly FIVE: NumberPair = { label: 5, drain: 0 };\n  static readonly SIX: NumberPair = { label: 6, drain: 1 };\n  static readonly SEVEN: NumberPair = { label: 7, drain: 2 };\n  static readonly EIGHT: NumberPair = { label: 8, drain: 3 };\n  static readonly NINE: NumberPair = { label: 9, drain: 4 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): NumberPair => {\n    switch (+label) {\n      case SpellLevel.ONE.label:\n        return SpellLevel.ONE;\n      case SpellLevel.TWO.label:\n        return SpellLevel.TWO;\n      case SpellLevel.THREE.label:\n        return SpellLevel.THREE;\n      case SpellLevel.FOUR.label:\n        return SpellLevel.FOUR;\n      case SpellLevel.FIVE.label:\n        return SpellLevel.FIVE;\n      case SpellLevel.SIX.label:\n        return SpellLevel.SIX;\n      case SpellLevel.SEVEN.label:\n        return SpellLevel.SEVEN;\n      case SpellLevel.EIGHT.label:\n        return SpellLevel.EIGHT;\n      case SpellLevel.NINE.label:\n        return SpellLevel.NINE;\n      default:\n        return SpellLevel.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellLevel.NONE.label + \"\",\n      SpellLevel.ONE.label + \"\",\n      SpellLevel.TWO.label + \"\",\n      SpellLevel.THREE.label + \"\",\n      SpellLevel.FOUR.label + \"\",\n      SpellLevel.FIVE.label + \"\",\n      SpellLevel.SIX.label + \"\",\n      SpellLevel.SEVEN.label + \"\",\n      SpellLevel.EIGHT.label + \"\",\n      SpellLevel.NINE.label + \"\",\n    ];\n  };\n}\n\nexport class SpellSource {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly EARTH: StringPair = { label: \"earth\", drain: 0 };\n  static readonly FROST: StringPair = { label: \"frost\", drain: 0 };\n  static readonly AIR: StringPair = { label: \"air\", drain: 0 };\n  static readonly FIRE: StringPair = { label: \"fire\", drain: 0 };\n  static readonly ARCANE: StringPair = { label: \"arcane\", drain: 1 };\n  static readonly DIVINE: StringPair = { label: \"divine\", drain: 0 };\n  static readonly DEMONIC: StringPair = { label: \"demonic\", drain: 0 };\n  static readonly DRUIDIC: StringPair = { label: \"druidic\", drain: 0 };\n  static readonly PSYCHIC: StringPair = { label: \"psychic\", drain: 0 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSource.EARTH.label.toLowerCase():\n        return SpellSource.EARTH;\n      case SpellSource.FROST.label.toLowerCase():\n        return SpellSource.FROST;\n      case SpellSource.AIR.label.toLowerCase():\n        return SpellSource.AIR;\n      case SpellSource.FIRE.label.toLowerCase():\n        return SpellSource.FIRE;\n      case SpellSource.ARCANE.label.toLowerCase():\n        return SpellSource.ARCANE;\n      case SpellSource.DIVINE.label.toLowerCase():\n        return SpellSource.DIVINE;\n      case SpellSource.DEMONIC.label.toLowerCase():\n        return SpellSource.DEMONIC;\n      case SpellSource.DRUIDIC.label.toLowerCase():\n        return SpellSource.DRUIDIC;\n      case SpellSource.PSYCHIC.label.toLowerCase():\n        return SpellSource.PSYCHIC;\n      default:\n        return SpellSource.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSource.NONE.label,\n      SpellSource.EARTH.label,\n      SpellSource.FROST.label,\n      SpellSource.AIR.label,\n      SpellSource.FIRE.label,\n      SpellSource.ARCANE.label,\n      SpellSource.DIVINE.label,\n      SpellSource.DEMONIC.label,\n      SpellSource.DRUIDIC.label,\n      SpellSource.PSYCHIC.label,\n    ];\n  };\n}\n\nexport class SpellRange {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly TOUCH: StringPair = { label: \"touch\", drain: 1 };\n  static readonly SONIC: StringPair = { label: \"sonic\", drain: 1 };\n  static readonly RADIUS: StringPair = {\n    label: \"Radius 90° around Caster\",\n    drain: 1,\n  };\n  static readonly RADIUSPLUS: StringPair = {\n    label: \"Radius 90°+ around Caster\",\n    drain: 2,\n  };\n  static readonly LOSAURA: StringPair = {\n    label: \"Line of Sight Aura or Projectile\",\n    drain: 1,\n  };\n  static readonly LOSMANIPULATE: StringPair = {\n    label: \"Line of Sight Manipulate\",\n    drain: 3,\n  };\n  static readonly LOSPOINT: StringPair = {\n    label: \"Line of Sight Spawn At Point\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellRange.TOUCH.label.toLowerCase():\n        return SpellRange.TOUCH;\n      case SpellRange.SONIC.label.toLowerCase():\n        return SpellRange.SONIC;\n      case SpellRange.RADIUS.label.toLowerCase():\n        return SpellRange.RADIUS;\n      case SpellRange.RADIUSPLUS.label.toLowerCase():\n        return SpellRange.RADIUSPLUS;\n      case SpellRange.LOSAURA.label.toLowerCase():\n        return SpellRange.LOSAURA;\n      case SpellRange.LOSMANIPULATE.label.toLowerCase():\n        return SpellRange.LOSMANIPULATE;\n      case SpellRange.LOSPOINT.label.toLowerCase():\n        return SpellRange.LOSPOINT;\n      default:\n        return SpellRange.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellRange.NONE.label,\n      SpellRange.TOUCH.label,\n      SpellRange.SONIC.label,\n      SpellRange.RADIUS.label,\n      SpellRange.RADIUSPLUS.label,\n      SpellRange.LOSAURA.label,\n      SpellRange.LOSMANIPULATE.label,\n      SpellRange.LOSPOINT.label,\n    ];\n  };\n}\n\nexport class SpellRite {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly VERBAL: StringPair = { label: \"verbal\", drain: 2 };\n  static readonly SOMATIC: StringPair = { label: \"somatic\", drain: 1 };\n  static readonly MENTAL: StringPair = { label: \"mental\", drain: 3 };\n  static readonly RITUAL: StringPair = { label: \"ritual\", drain: 3 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellRite.VERBAL.label.toLowerCase():\n        return SpellRite.VERBAL;\n      case SpellRite.SOMATIC.label.toLowerCase():\n        return SpellRite.SOMATIC;\n      case SpellRite.MENTAL.label.toLowerCase():\n        return SpellRite.MENTAL;\n      case SpellRite.RITUAL.label.toLowerCase():\n        return SpellRite.RITUAL;\n      default:\n        return SpellRite.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellRite.NONE.label,\n      SpellRite.VERBAL.label,\n      SpellRite.SOMATIC.label,\n      SpellRite.MENTAL.label,\n      SpellRite.RITUAL.label,\n    ];\n  };\n}\n\nexport class SpellTarget {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly SINGLE: StringPair = { label: \"Single Target\", drain: 1 };\n  static readonly DAOE: StringPair = {\n    label: \"Diminishing Area Of Effect \",\n    drain: 1,\n  };\n  static readonly MULTI: StringPair = {\n    label: \"Multiple Targets\",\n    drain: 4,\n  };\n  static readonly AOE: StringPair = {\n    label: \"Area Of Effect\",\n    drain: 2,\n  };\n  static readonly CASTER: StringPair = {\n    label: \"Caster\",\n    drain: 3,\n  };\n  static readonly TARGET: StringPair = {\n    label: \"Caster Or Target\",\n    drain: 3,\n  };\n  static readonly LINE: StringPair = {\n    label: \"Straight Line\",\n    drain: 2,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellTarget.SINGLE.label.toLowerCase():\n        return SpellTarget.SINGLE;\n      case SpellTarget.DAOE.label.toLowerCase():\n        return SpellTarget.DAOE;\n      case SpellTarget.MULTI.label.toLowerCase():\n        return SpellTarget.MULTI;\n      case SpellTarget.AOE.label.toLowerCase():\n        return SpellTarget.AOE;\n      case SpellTarget.CASTER.label.toLowerCase():\n        return SpellTarget.CASTER;\n      case SpellTarget.TARGET.label.toLowerCase():\n        return SpellTarget.TARGET;\n      case SpellTarget.LINE.label.toLowerCase():\n        return SpellTarget.LINE;\n      default:\n        return SpellTarget.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellTarget.NONE.label,\n      SpellTarget.SINGLE.label,\n      SpellTarget.MULTI.label,\n      SpellTarget.AOE.label,\n      SpellTarget.DAOE.label,\n      SpellTarget.TARGET.label,\n      SpellTarget.CASTER.label,\n      SpellTarget.LINE.label,\n    ];\n  };\n}\n\nexport class SpellDuration {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly CONCENTRATION: StringPair = {\n    label: \"concentration\",\n    drain: 0,\n  };\n  static readonly INSTANTANEOUS: StringPair = {\n    label: \"instantaneous\",\n    drain: 1,\n  };\n  static readonly PERMANENT: StringPair = { label: \"permanent\", drain: 1 };\n  static readonly FIXEDTICKS: StringPair = {\n    label: \"fixed # of ticks\",\n    drain: 1,\n  };\n  static readonly FIXEDROUNDS: StringPair = {\n    label: \"fixed # of rounds\",\n    drain: 2,\n  };\n  static readonly FIXEDHOURS: StringPair = {\n    label: \"fixed # of hours\",\n    drain: 2,\n  };\n  static readonly CHANNEL: StringPair = { label: \"channel\", drain: -1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDuration.CONCENTRATION.label.toLowerCase():\n        return SpellDuration.CONCENTRATION;\n      case SpellDuration.INSTANTANEOUS.label.toLowerCase():\n        return SpellDuration.INSTANTANEOUS;\n      case SpellDuration.PERMANENT.label.toLowerCase():\n        return SpellDuration.PERMANENT;\n      case SpellDuration.FIXEDTICKS.label.toLowerCase():\n        return SpellDuration.FIXEDTICKS;\n      case SpellDuration.FIXEDROUNDS.label.toLowerCase():\n        return SpellDuration.FIXEDROUNDS;\n      case SpellDuration.FIXEDHOURS.label.toLowerCase():\n        return SpellDuration.FIXEDHOURS;\n      case SpellDuration.CHANNEL.label.toLowerCase():\n        return SpellDuration.CHANNEL;\n      default:\n        return SpellDuration.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDuration.NONE.label,\n      SpellDuration.CONCENTRATION.label,\n      SpellDuration.FIXEDTICKS.label,\n      SpellDuration.FIXEDROUNDS.label,\n      SpellDuration.FIXEDHOURS.label,\n      SpellDuration.CHANNEL.label,\n      SpellDuration.INSTANTANEOUS.label,\n      SpellDuration.PERMANENT.label,\n    ];\n  };\n}\n\nexport class SpellSchool {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly TRANSMUTATION: StringPair = {\n    label: \"Transmutation\",\n    drain: 1,\n  };\n  static readonly EVOCATION: StringPair = { label: \"Evocation\", drain: 0 };\n  static readonly FORTIFICATION: StringPair = {\n    label: \"Fortification\",\n    drain: 1,\n  };\n  static readonly HEX: StringPair = { label: \"Hex\", drain: 1 };\n  static readonly ILLUSION: StringPair = { label: \"Illusion\", drain: 1 };\n  static readonly CONJURATION: StringPair = { label: \"Conjuration\", drain: 1 };\n  static readonly NECROMANCY: StringPair = { label: \"Necromancy\", drain: 1 };\n  static readonly ENCHANTMENT: StringPair = { label: \"Enchantment\", drain: 2 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSchool.FORTIFICATION.label.toLowerCase():\n        return SpellSchool.FORTIFICATION;\n      case SpellSchool.HEX.label.toLowerCase():\n        return SpellSchool.HEX;\n      case SpellSchool.ILLUSION.label.toLowerCase():\n        return SpellSchool.ILLUSION;\n      case SpellSchool.NECROMANCY.label.toLowerCase():\n        return SpellSchool.NECROMANCY;\n      case SpellSchool.TRANSMUTATION.label.toLowerCase():\n        return SpellSchool.TRANSMUTATION;\n      case SpellSchool.CONJURATION.label.toLowerCase():\n        return SpellSchool.CONJURATION;\n      case SpellSchool.EVOCATION.label.toLowerCase():\n        return SpellSchool.EVOCATION;\n      case SpellSchool.ENCHANTMENT.label.toLowerCase():\n        return SpellSchool.ENCHANTMENT;\n      default:\n        return SpellSchool.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSchool.NONE.label,\n      SpellSchool.CONJURATION.label,\n      SpellSchool.EVOCATION.label,\n      SpellSchool.FORTIFICATION.label,\n      SpellSchool.HEX.label,\n      SpellSchool.ILLUSION.label,\n      SpellSchool.NECROMANCY.label,\n      SpellSchool.TRANSMUTATION.label,\n      SpellSchool.ENCHANTMENT.label,\n    ];\n  };\n}\n\nexport class SpellDrainType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly STUN: StringPair = { label: \"Stun\", drain: 0 };\n  static readonly PHYSICAL: StringPair = { label: \"Physical\", drain: -7 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDrainType.STUN.label.toLowerCase():\n        return SpellDrainType.STUN;\n      case SpellDrainType.PHYSICAL.label.toLowerCase():\n        return SpellDrainType.PHYSICAL;\n      default:\n        return SpellDrainType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDrainType.NONE.label,\n      SpellDrainType.STUN.label,\n      SpellDrainType.PHYSICAL.label,\n    ];\n  };\n}\n","export const rollCommand = (\n  commands: string,\n  krit?: boolean\n): { result: number; text: string; rolls: string } => {\n  let result = 0;\n  let text = \"\";\n\n  let newCommands = \"\";\n  commands.split(\" \").forEach((command) => {\n    if (/\\d+/g.test(command)) {\n      newCommands += command;\n    } else {\n      text += \" \" + command;\n    }\n  });\n  newCommands = newCommands.trim();\n\n  let rolls: string = \"(`\";\n  newCommands.split(\" \").forEach((fullCommand: string) => {\n    let commandSplits: string[] = [];\n    fullCommand.split(\"+\").forEach((part) => {\n      let split = part.split(\"-\");\n      commandSplits = commandSplits.concat(split);\n    });\n\n    commandSplits.forEach((command: string) => {\n      let multiplier: number = 1;\n      if (command.includes(\"d\")) {\n        if (!command.startsWith(\"d\")) {\n          multiplier = parseInt(command.split(\"d\")[0]);\n          command = command.split(\"d\")[1];\n        }\n        command = command.replaceAll(\"d\", \"\");\n        if (krit) multiplier = multiplier * 2;\n\n        if (command.includes(\"+\")) {\n          const com = command.split(\"+\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result += parseInt(com[1]);\n        } else if (command.includes(\"-\")) {\n          const com = command.split(\"-\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result -= parseInt(com[1]);\n        } else {\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(command));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n        }\n      } else {\n        result += parseInt(command);\n        rolls += command + \",\";\n      }\n    });\n    rolls = rolls.slice(0, -1) + \"`)\";\n  });\n\n  return { result: result, text: text, rolls: rolls };\n};\n\nexport const rollDie = (size: number): number => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory } from \"react-icons/bi\";\nimport { GiDiceTwentyFacesTwenty, GiSwordsPower } from \"react-icons/gi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name)\n        .then((count: number) => {\n          setEntity(count > 0);\n          setLoading(false);\n        })\n        .catch(() => {\n          setEntity(false);\n          setLoading(false);\n        });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"talent\":\n        return <GiSwordsPower />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import IEntity from \"./IEntity\";\n\nexport enum TalentCategory {\n  physical = \"physical\",\n  mental = \"mental\",\n  social = \"social\",\n  magical = \"magical\",\n}\n\nexport default class Talent implements IEntity {\n  id?: number;\n  name: string;\n  category: string;\n  isFlaw: boolean;\n  cost: number;\n  prerequisite: string;\n  effect: string;\n  type: boolean;\n  stress: string;\n  trigger: string;\n  triggerFrequency: string;\n  ticks: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    category?: string,\n    isFlaw?: boolean,\n    cost?: number,\n    prerequisite?: string,\n    effect?: string,\n    type?: boolean,\n    stress?: string,\n    trigger?: string,\n    triggerFrequency?: string,\n    ticks?: number\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.category = category || TalentCategory.magical;\n    this.isFlaw = isFlaw || false;\n    this.cost = cost || 0;\n    this.prerequisite = prerequisite || \"\";\n    this.effect = effect || \"\";\n    this.type = type || false;\n    this.stress = stress || \"\";\n    this.trigger = trigger || \"\";\n    this.triggerFrequency = triggerFrequency || \"\";\n    this.ticks = ticks || 0;\n  }\n\n  static makeCsv = (talent: Talent): any[] => {\n    return [\n      talent.id,\n      talent.name,\n      talent.category,\n      talent.isFlaw,\n      talent.cost,\n      talent.prerequisite,\n      talent.effect,\n      talent.type,\n      talent.stress,\n      talent.trigger,\n      talent.triggerFrequency,\n      talent.ticks,\n    ];\n  };\n}\n\nexport function isTalent(arg: any): arg is Talent {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"number\";\n  const isFlawCheck =\n    arg.isFlaw !== undefined && typeof arg.isFlaw == \"boolean\";\n  const prerequisiteCheck =\n    arg.prerequisite !== undefined && typeof arg.prerequisite == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"boolean\";\n  const stressCheck = arg.stress !== undefined && typeof arg.stress == \"string\";\n  const triggerCheck =\n    arg.trigger !== undefined && typeof arg.trigger == \"string\";\n  const triggerFrequencyCheck =\n    arg.triggerFrequency !== undefined &&\n    typeof arg.triggerFrequency == \"string\";\n  const ticksCheck = arg.ticks !== undefined && typeof arg.ticks == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    costCheck &&\n    isFlawCheck &&\n    prerequisiteCheck &&\n    effectCheck &&\n    typeCheck &&\n    stressCheck &&\n    triggerCheck &&\n    triggerFrequencyCheck &&\n    ticksCheck\n  );\n}\n","import IEntity from \"./IEntity\";\nimport {\n  StringPair,\n  NumberPair,\n  SpellSource,\n  SpellRite,\n  SpellDuration,\n  SpellRange,\n  SpellSchool,\n  SpellTarget,\n  SpellDrainType,\n  SpellLevel,\n  SpellCastTime,\n  SpellScalingEffect,\n  SpellAoeRadius,\n  SpellDirectEffects,\n  SpellProjectileType,\n  SpellProjectileNumber,\n  SpellDamageType,\n  SpellTargetingType,\n  SpellLosRange,\n  SpellSize,\n  SpellPureDamage,\n  SpellHp,\n} from \"./SpellValues\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  source: StringPair;\n  castTime: StringPair;\n  rite: StringPair;\n  duration: StringPair;\n  durationText: string;\n  range: StringPair;\n  school: StringPair;\n  effect: string;\n  damageText: string;\n  mastery: string;\n  resist: string;\n  drain: number;\n  masteryDrain: number;\n\n  drainType: StringPair;\n  scalingEffect: StringPair;\n  spellTarget: StringPair;\n  aoeRadius: StringPair;\n  damage: StringPair[];\n  directEffects: StringPair;\n  level: NumberPair;\n  projectileType: StringPair;\n  projectileNumber: StringPair;\n  damageType: StringPair;\n  targetingType: StringPair;\n  losRange: StringPair;\n  pureDamage: StringPair;\n  size: StringPair;\n  hp: StringPair;\n  chargeable: boolean;\n  needsMaterial: boolean;\n\n  constructor(\n    id?: number,\n    name?: string,\n    source?: StringPair,\n    castTime?: StringPair,\n    rite?: StringPair,\n    duration?: StringPair,\n    durationText?: string,\n    range?: StringPair,\n    school?: StringPair,\n    effect?: string,\n    damageText?: string,\n    mastery?: string,\n    resist?: string,\n    drain?: number,\n    masteryDrain?: number,\n\n    scalingEffect?: StringPair,\n    spellTarget?: StringPair,\n    aoeRadius?: StringPair,\n    damage?: StringPair[],\n    directEffects?: StringPair,\n    level?: NumberPair,\n    projectileType?: StringPair,\n    projectileNumber?: StringPair,\n    damageType?: StringPair,\n    targetingType?: StringPair,\n    losRange?: StringPair,\n    drainType?: StringPair,\n    pureDamage?: StringPair,\n    size?: StringPair,\n    hp?: StringPair,\n    chargeable?: boolean,\n    needsMaterial?: boolean\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.source = source || SpellSource.NONE;\n    this.castTime = castTime || SpellCastTime.NONE;\n    this.rite = rite || SpellRite.NONE;\n    this.duration = duration || SpellDuration.NONE;\n    this.durationText = durationText || \"\";\n    this.range = range || SpellRange.NONE;\n    this.school = school || SpellSchool.NONE;\n    this.effect = effect || \"\";\n    this.damageText = damageText || \"\";\n    this.mastery = mastery || \"\";\n    this.resist = resist || \"\";\n    this.drain = drain || 0;\n    this.masteryDrain = masteryDrain || 0;\n\n    this.scalingEffect = scalingEffect || SpellScalingEffect.NONE;\n    this.spellTarget = spellTarget || SpellTarget.NONE;\n    this.aoeRadius = aoeRadius || SpellAoeRadius.NONE;\n    this.damage = damage || [];\n    this.directEffects = directEffects || SpellDirectEffects.NONE;\n    this.level = level || SpellLevel.NONE;\n    this.projectileType = projectileType || SpellProjectileType.NONE;\n    this.projectileNumber = projectileNumber || SpellProjectileNumber.NONE;\n    this.damageType = damageType || SpellDamageType.NONE;\n    this.targetingType = targetingType || SpellTargetingType.NONE;\n    this.losRange = losRange || SpellLosRange.NONE;\n    this.drainType = drainType || SpellDrainType.NONE;\n    this.pureDamage = pureDamage || SpellPureDamage.NONE;\n    this.size = size || SpellSize.NONE;\n    this.hp = hp || SpellHp.NONE;\n    this.chargeable = chargeable || false;\n    this.needsMaterial = needsMaterial || false;\n  }\n\n  static calcDrain = (spell: Spell): number => {\n    let drain = 0;\n    drain += spell.drainType ? spell.drainType.drain : 0;\n    drain += spell.school ? spell.school.drain : 0;\n    drain += spell.duration ? spell.duration.drain : 0;\n    drain += spell.spellTarget ? spell.spellTarget.drain : 0;\n    drain += spell.rite ? spell.rite.drain : 0;\n    drain += spell.range ? spell.range.drain : 0;\n    drain += spell.source ? spell.source.drain : 0;\n    drain += spell.level ? spell.level.drain : 0;\n    drain += spell.chargeable ? -1 : 0;\n    drain += spell.needsMaterial ? -1 : 0;\n    drain += spell.targetingType ? spell.targetingType.drain : 0;\n    drain += spell.projectileType ? spell.projectileType.drain : 0;\n    drain += spell.projectileNumber ? spell.projectileNumber.drain : 0;\n    drain += spell.losRange ? spell.losRange.drain : 0;\n    drain += spell.aoeRadius ? spell.aoeRadius.drain : 0;\n    drain += spell.damage[0] ? spell.damage[0].drain : 0;\n    drain += spell.damage[1] ? spell.damage[1].drain : 0;\n    drain += spell.damage[2] ? spell.damage[2].drain : 0;\n    drain += spell.damageType ? spell.damageType.drain : 0;\n    drain += spell.scalingEffect ? spell.scalingEffect.drain : 0;\n    drain += spell.directEffects ? spell.directEffects.drain : 0;\n    drain += spell.size ? spell.size.drain : 0;\n    drain += spell.hp ? spell.hp.drain : 0;\n    drain += spell.pureDamage ? spell.pureDamage.drain : 0;\n    return drain;\n  };\n\n  static makeCsv = (spell: Spell): any[] => {\n    return [\n      spell.id,\n      spell.name,\n      spell.source.label,\n      spell.castTime.label,\n      spell.rite.label,\n      spell.duration.label,\n      spell.durationText,\n      spell.range.label,\n      spell.school.label,\n      spell.effect,\n      spell.damageText,\n      spell.mastery,\n      spell.resist,\n      spell.drain,\n      spell.masteryDrain,\n      spell.scalingEffect.label,\n      spell.spellTarget.label,\n      spell.aoeRadius.label,\n      spell.damage[0].label + \", \" +spell.damage[1].label + \", \" +spell.damage[2].label,\n      spell.directEffects.label,\n      spell.level.label,\n      spell.projectileType.label,\n      spell.projectileNumber.label,\n      spell.damageType.label,\n      spell.targetingType.label,\n      spell.losRange.label,\n      spell.drainType.label,\n      spell.pureDamage.label,\n      spell.size.label,\n      spell.hp.label,\n      spell.chargeable,\n      spell.needsMaterial,\n    ];\n  };\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourceCheck = arg.source !== undefined && typeof arg.source == \"string\";\n  const castTimeCheck =\n    arg.castTime !== undefined && typeof arg.castTime == \"string\";\n  const riteCheck = arg.rite !== undefined && typeof arg.rite == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const masteryCheck =\n    arg.mastery !== undefined && typeof arg.mastery == \"string\";\n  const resistCheck = arg.resist !== undefined && typeof arg.resist == \"string\";\n  const drainCheck = arg.drain !== undefined && typeof arg.drain == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    sourceCheck &&\n    castTimeCheck &&\n    riteCheck &&\n    durationCheck &&\n    rangeCheck &&\n    schoolCheck &&\n    effectCheck &&\n    damageCheck &&\n    masteryCheck &&\n    resistCheck &&\n    drainCheck\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import IEntity from \"./IEntity\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  hp: number;\n  abilityModifier: string;\n  size: string;\n  stamina: number;\n  talents: string[];\n  flaws: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    hp?: number,\n    abilityModifier?: string,\n    size?: string,\n    stamina?: number,\n    talents?: string[],\n    flaws?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.abilityModifier = abilityModifier || \"\";\n    this.size = size || \"\";\n    this.stamina = stamina || 0;\n    this.talents = talents || [];\n    this.flaws = flaws || [];\n  }\n\n  static makeCsv = (race: Race): any[] => {\n    return [\n      race.id,\n      race.name,\n      race.hp,\n      race.abilityModifier,\n      race.size,\n      race.stamina,\n      race.talents,\n      race.flaws,\n    ];\n  };\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const abilityModifierCheck =\n    arg.abilityModifier !== undefined && typeof arg.abilityModifier == \"number\";\n  const talentsCheck = arg.talents !== undefined && Array.isArray(arg.talents);\n  const flawsCheck = arg.flaws !== undefined && Array.isArray(arg.flaws);\n\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    abilityModifierCheck &&\n    talentsCheck &&\n    flawsCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n"],"sourceRoot":""}