{"version":3,"sources":["components/general_elements/SmallFormatedText.tsx","components/entities/talents/TalentTile.tsx","../node_modules/peerjs/dist sync","services/OptionService.tsx","components/p2p/P2PReciver.tsx","components/options/GeneralOptions.tsx","components/options/TalentsOptions.tsx","components/form_elements/FileField.tsx","components/form_elements/ImportField.tsx","components/options/DiscordOptions.tsx","services/CsvService.tsx","components/options/Options.tsx","database/SkirmishDB.tsx","services/DatabaseService.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx","hooks/webhookHook.tsx","services/DiscordService.tsx","components/form_elements/StringField.tsx","data/SpellValues.tsx","services/DiceService.tsx","components/general_elements/LinkCheck.tsx","data/Talent.tsx","data/Spell.tsx","data/Race.tsx","components/general_elements/TabBar.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx"],"names":["SmallFormatedText","text","webhook","useWebhook","useState","formatedText","setFormatedText","history","useHistory","cut","str","cutStart","cutEnd","substr","rollDiscord","useCallback","command","includes","rollCommand","result","undefined","sendMessage","newCommand","value","parseInt","replaceAll","krit","fail","rollString","formatLink","parts","split","formattedParts","forEach","part","index","codePart","linkParts","linkEntity","push","TextPart","key","DiscordPart","onClick","LinkCheck","type","name","link","Link","formatTable","textPart","table","tableRows","isHead","map","row","cells","cell","TableHeadProp","TableProp","formatText","indexOf","useEffect","FormatedTextContainer","styled","div","span","theme","tile","backgroundColorLink","color","th","input","backgroundColor","td","TalentTile","talent","Tile","to","id","$isflaw","isFlaw","Cost","cost","Name","PropWrapper","Prop","stress","prerequisite","props","boxShadow","main","highlight","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","scanImportFileTest","json","fileName","callback","a","promList","Array","isArray","obj","isTalent","saveNew","Promise","all","exportAll","filename","reciveAllPromise","spells","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","P2PReciver","changeData","reload","peerId","setId","loading","isLoading","error","setError","state","setState","Peer","host","secure","peer","conn","connect","on","data","console","log","Loading","StringField","label","onChange","Icon","icon","faExclamationCircle","TextButton","faCheck","FontAwesomeIcon","GeneralOptions","useTheme","setTheme","General","OptionSection","SelectionTitle","Button","darkTheme","lightTheme","localStorage","setItem","button","buttons","TalentsOptions","amount","triggerDeleteAll","send","setSend","OptionTab","SectionRow","SectionText","IconButton","faFileExport","tableName","reciveAll","entity","faTrashAlt","faPaperPlane","P2PSender","mode","ImportModus","FileField","accept","isMulti","transform","Field","LabelText","Input","files","multiple","ImportField","modus","setFiles","Files","faFileImport","file","fileList","from","changeFile","FileTile","succCount","setSucc","maxCount","setMax","scanImportFile","listOfNew","newMax","length","NORMAL","newEntitiy","Object","entries","newTableName","bulkList","filter","saveNewFromList","fileReader","FileReader","onloadend","content","parse","toString","readAsText","FileWrapper","completed","Math","round","isLabelVisible","bgcolor","height","margin","DiscordOptions","getItem","setWebhook","webhookUser","setWebhookUser","saveInDB","tablename","listOfIEntity","Options","activeTab","setTab","talentAmount","setTalentAmount","isReload","setData","readString","usePapaParse","useCSVDownloader","CSVDownloader","Type","csvBackup","setBackup","handleSpellCsvUpload","worker","complete","results","csv","listOfSpells","slice","newSpell","Spell","SpellSource","find","SpellCastTime","SpellRite","SpellDuration","SpellRange","SpellSchool","SpellScalingEffect","SpellTarget","SpellAoeRadius","SpellDamage","SpellDirectEffects","NONE","SpellLevel","SpellProjectileType","SpellProjectileNumber","SpellDamageType","SpellTargetingType","SpellLosRange","SpellDrainType","SpellPureDamage","SpellSize","SpellHp","toLowerCase","drain","calcDrain","scanImportedSpellCsv","reciveCount","backup","concat","spell","makeCsv","Talent","Race","race","returnTile","Date","getFullYear","getMonth","bom","config","delimiter","TabBar","children","tab","deleteAll","OptionSectionLarge","SkirmishDB","randomTables","talents","races","version","stores","Dexie","updateWithCallback","db","open","then","update","finally","close","put","prom","entities","refinedEntities","bulkPut","remove","delete","toArray","array","count","reciveCountPromise","recivePromiseByAttribute","where","equalsIgnoreCase","recivePromise","get","recivePromiseByAttributeCount","equals","applyFilters","filters","test","fieldName","hasTag","fieldPart","arrayTest","filterPart","val","reciveAllFiltered","sortedFiled","reverse","sort","sortBy","reciveAllFilteredPromise","reciveAttributeSelectionPromise","attribute","orderBy","uniqueKeys","createNewWithId","clear","exportFilteredFromTable","floatLeft","disabled","style","SimpleButton","left","DisabledSimpleButton","hoverColor","hook","avatar","request","XMLHttpRequest","setRequestHeader","params","username","avatar_url","sendEmbedMessage","formatDiscordText","placeholder","ACID","NECROTIC","FROST","FIRE","LIGHTNING","RADIANT","ARCANE","POISON","trim","getAll","HALFMAGICSTRUCTUREHP","HALFMAGICSTRUCTUREDOUBLEHP","HALFMAGICSTRUCTURETRIPPLEHP","MAGICSTRUCTUREHP","MAGICSTRUCTUREDOUBLEHP","DOUBLEMAGICESTRUCTUREHP","MAGICHP","MAGICDOUBLEHP","MAGICTRIPPLEHP","MAGICQUADRUPLEHP","HALFMAGICSQUARED","MAGICSQUARED","DOUBLEMAGICSQUARED","TRIPPLEMAGICSQUARED","HALFMAGICQUBED","MAGICQUBED","DOUBLEMAGICQUBED","TRIPPLEMAGICQUBED","DIFFICULTTERRAIN","LIFELEECH","COMMUNICATE","CONFUSIONSTUNBLIND","HEX","IMPAIRMOVEMENTVISION","MOVEFEARROOT","DOT","INCAPACITATE","SPHERE","KNOCKDOWN","WALLBARRIERCONSTRUCTSUMMON","TELEPORT","HEAL","BUFFILLUSIONSHIELD","CHARMCONTROLINFLUENCE","TRANSFORM","MYSTBRADIUS","MYSTBPROJECTILES","ONEVARIABLEPROJECTILE","ONEPROJECTILETHREEMAGIC","ONEPROJECTILETWOMAGIC","ONEPROJECTILERADIUSTWOMAGIC","ONEPROJECTILERADIUSTHREEMAGIC","PROJECTILETWOMAGIC","PROJECTILETHREEMAGIC","ONEPROJECTILEFOURMAGIC","MYSTBRADIUSEFFECT","COMBINED","PHYSICAL","STUN","PURE","FATIGUE","AGONY","ONEPRMAGIC","TWOPRMAGIC","THREEPRMAGIC","FOURPRMAGIC","FIVEPRMAGIC","ONE","TWO","THREE","FOUR","FIVE","ONEDFOUR","ONEDSIX","ONEDEIGHT","ONEDTEN","ONEDTWELVE","ONEDTWENTY","TWODFOUR","TWODSIX","TWODEIGHT","TWODTEN","TWODTWELVE","TWODTWENTY","THREEDFOUR","THREEDSIX","THREEDEIGHT","THREEDTEN","THREEDTWELVE","FOURDFOUR","FOURDSIX","FOURDEIGHT","FOURDTEN","FIVEDFOUR","FIVEDSIX","FIVEDEIGHT","SIXDFOUR","MYSTB","MYSTBDOUBLE","QUARTERMAGIC","HALFMAGIC","MAGIC","COLLETERAL","ONEMETER","TWOMETER","THREEMETER","FOURMETER","FIVEMETER","SIXMETER","SEVENMETER","EIGHTMETER","NINEMETER","TENMETER","HALFMAGICMETER","MAGICMETER","DOUBLEMAGICMETER","ONEMAGIC","TWOMAGIC","THREEMAGIC","FOURMAGIC","FIVEMAGIC","SCALING","BALL","MISSILE","BOLT","RAY","SPRAY","LASSO","DIRECTTARGET","AURATARGETING","INDIRECTTARGETING","FOURMYSTBROUNDS","NINETHREE","NINETHREECHANNEL","SEVENTHREE","FIVETHREE","DRAINCHENNEL","DRAINTHREE","MAGIFAITHHOURS","getAllPhysical","getAllStun","SIX","SEVEN","EIGHT","NINE","EARTH","AIR","DIVINE","DEMONIC","DRUIDIC","PSYCHIC","TOUCH","SONIC","RADIUS","RADIUSPLUS","LOSAURA","LOSMANIPULATE","LOSPOINT","VERBAL","SOMATIC","MENTAL","RITUAL","SINGLE","DAOE","MULTI","AOE","CASTER","TARGET","LINE","CONCENTRATION","INSTANTANEOUS","PERMANENT","FIXEDTICKS","FIXEDROUNDS","FIXEDHOURS","CHANNEL","TRANSMUTATION","EVOCATION","FORTIFICATION","ILLUSION","CONJURATION","NECROMANCY","ENCHANTMENT","commands","newCommands","rolls","fullCommand","commandSplits","multiplier","startsWith","com","i","newRoll","rollDie","size","max","random","setLoading","entitiyFound","setEntity","newType","catch","formatIcon","TalentCategory","category","effect","trigger","triggerFrequency","ticks","this","magical","arg","nameCheck","costCheck","isFlawCheck","prerequisiteCheck","effectCheck","typeCheck","stressCheck","triggerCheck","triggerFrequencyCheck","ticksCheck","source","castTime","rite","duration","durationText","range","school","damageText","mastery","resist","masteryDrain","scalingEffect","spellTarget","aoeRadius","damage","directEffects","level","projectileType","projectileNumber","damageType","targetingType","losRange","drainType","pureDamage","hp","chargeable","needsMaterial","abilityModifier","stamina","flaws","Bar","child","Tab","isActive","setName","setPeer","brokerId","min","password","characters","floor","generateBrokerId","newPeer","errorData","disconnected","destroyed","reconnect"],"mappings":"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","file":"static/js/9.63e721e8.chunk.js","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\nimport { useWebhook } from \"../../hooks/webhookHook\";\nimport { rollCommand } from \"../../services/DiceService\";\nimport { sendMessage } from \"../../services/DiscordService\";\nimport LinkCheck from \"./LinkCheck\";\n\ninterface $Props {\n  text: string;\n}\n\nconst SmallFormatedText = ({ text }: $Props) => {\n  let webhook = useWebhook();\n  const [formatedText, setFormatedText] = useState<JSX.Element>();\n  let history = useHistory();\n\n  const cut = (str: string, cutStart: number, cutEnd: number) => {\n    return str.substr(0, cutStart) + str.substr(cutEnd + 1);\n  };\n\n  const rollDiscord = useCallback(\n    (command: string) => {\n      if (!command.includes(\"d\")) {\n        let newCommand = \"d20\" + command;\n        let value = parseInt(command.replaceAll(\"+\", \"\"));\n        const { result, text } = rollCommand(newCommand);\n\n        let krit = false;\n        if (result - value === 20) krit = true;\n        let fail = false;\n        if (result - value === 1) fail = true;\n\n        let rollString = \"d20(`\" + (result - value) + \"`)\" + command;\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(\n            webhook,\n            result +\n              \" \" +\n              text +\n              (fail ? \" :red_circle:\" : \"\") +\n              (krit ? \" :green_circle:\" : \"\") +\n              \" ||\" +\n              rollString +\n              \"||\"\n          );\n        }\n      } else {\n        const { result, text } = rollCommand(command);\n        if (result !== undefined && webhook !== undefined) {\n          sendMessage(webhook, result + \" \" + text + \" ||\" + command + \"||\");\n        }\n      }\n    },\n    [webhook]\n  );\n\n  const formatLink = useCallback(\n    (text: string) => {\n      if (text !== undefined) {\n        if (text.includes(\"[[\") && text.includes(\"]]\")) {\n          const parts = text.split(\"[[\");\n          let formattedParts: any[] = [];\n          parts.forEach((part: string, index: number) => {\n            if (part.includes(\"]]\")) {\n              const codePart: string[] = part.split(\"]]\");\n              const linkParts: string[] = codePart[0].split(\".\");\n              let linkEntity = linkParts[0];\n              if (linkEntity === \"dice\") {\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <DiscordPart onClick={() => rollDiscord(linkParts[1])}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </DiscordPart>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              } else {\n                if (linkEntity === \"class\" || linkEntity === \"subclass\") linkEntity += \"e\";\n                const link: string = \"/\" + linkEntity + \"-detail/name/\" + linkParts[1];\n                formattedParts.push(\n                  <TextPart key={index}>\n                    <Link onClick={() => history.push(link)}>\n                      <LinkCheck type={linkParts[0]} name={linkParts[1]} /> {linkParts[1]}\n                    </Link>\n                    <TextPart>{codePart[1]}</TextPart>\n                  </TextPart>\n                );\n              }\n            } else {\n              if (part !== \"\") formattedParts.push(<TextPart key={index}>{part}</TextPart>);\n            }\n          });\n          return <>{formattedParts}</>;\n        } else {\n          return <TextPart>{text}</TextPart>;\n        }\n      }\n    },\n    [history]\n  );\n\n  const formatTable = useCallback(\n    (textPart: string) => {\n      if (textPart.includes(\"||table||\")) {\n        const table: string[] = text.split(\"||table||\");\n        const tableRows: string[] = table[1].split(\"||\");\n        let isHead = true;\n        return (\n          <>\n            {formatLink(table[0])}\n            <table>\n              <tbody>\n                {tableRows.map((row: string, index: number) => {\n                  if (row.includes(\"|\")) {\n                    if (isHead) {\n                      isHead = false;\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableHeadProp key={index}>{cell}</TableHeadProp>;\n                          })}\n                        </tr>\n                      );\n                    } else {\n                      const cells = row.split(\"|\");\n                      return (\n                        <tr key={index}>\n                          {cells.map((cell: string, index: number) => {\n                            return <TableProp key={index}>{formatLink(cell)}</TableProp>;\n                          })}\n                        </tr>\n                      );\n                    }\n                  } else {\n                    return <></>;\n                  }\n                })}\n              </tbody>\n            </table>\n            {formatLink(table[2])}\n          </>\n        );\n      } else {\n        return formatLink(textPart);\n      }\n    },\n    [text, formatLink]\n  );\n\n  const formatText = useCallback(\n    (textPart: string) => {\n      while (textPart.includes(\"{{\")) {\n        const cutStart = textPart.indexOf(\"{{\");\n        const cutEnd = textPart.indexOf(\"}}\") + 1;\n        textPart = cut(textPart, cutStart, cutEnd);\n      }\n      return formatTable(textPart);\n    },\n    [formatTable]\n  );\n\n  useEffect(() => {\n    if (text !== undefined) {\n      let formatedText = formatText(text);\n      setFormatedText(formatedText);\n    }\n  }, [text, history, formatText]);\n\n  return <FormatedTextContainer>{formatedText}</FormatedTextContainer>;\n};\n\nexport default SmallFormatedText;\n\nconst FormatedTextContainer = styled.div`\n  padding: 5px;\n`;\n\nconst Link = styled.span`\n  display: inline-block;\n  background-color: ${({ theme }) => theme.tile.backgroundColorLink};\n  border-radius: 5px;\n  text-decoration: none;\n  color: ${({ theme }) => theme.tile.color};\n  font-size: 14px;\n  padding: 0px 5px 0px 5px;\n  cursor: pointer;\n  white-space: pre;\n`;\n\nconst DiscordPart = styled(Link)`\n  background-color: #7289da;\n  color: white;\n`;\n\nconst TextPart = styled.span`\n  white-space: pre-line;\n`;\n\nconst TableHeadProp = styled.th`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 2px 5px 2px 5px;\n`;\n\nconst TableProp = styled.td`\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  border-radius: 5px;\n  padding: 5px;\n  text-align: center;\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Talent from \"../../../data/Talent\";\nimport SmallFormatedText from \"../../general_elements/SmallFormatedText\";\n\ninterface $Props {\n  talent: Talent;\n}\n\nconst TalentTile = ({ talent }: $Props) => {\n  return (\n    <Tile to={\"/talent-detail/id/\" + talent.id} $isflaw={talent.isFlaw}>\n      <Cost>\n        <b>{talent.cost}</b>\n      </Cost>\n\n      <Name>\n        <b>{talent.name}</b>\n      </Name>\n\n      <PropWrapper>\n        <Prop>{talent.type ? talent.stress : \"Passive\"}</Prop>\n        <SmallFormatedText text={talent.prerequisite} />\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default TalentTile;\n\ntype type = {\n  $isflaw: boolean;\n};\n\nconst Tile = styled(Link)<type>`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  ${(props) => {\n    if (props.$isflaw) {\n      return `background-color: ${props.theme.input.backgroundColor};`;\n    } else {\n      return `background-color: ${props.theme.tile.backgroundColor};`;\n    }\n  }}\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n`;\n\nconst Cost = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: white;\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 105;","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Talent, { isTalent } from \"../data/Talent\";\n\nexport const scanImportFileTest = async (json: any, fileName: string, callback: () => void) => {\n  let promList: Promise<any>[] = [];\n\n  if (!Array.isArray(json)) {\n    json = [json];\n  }\n\n  json.forEach((obj: any) => {\n    if (isTalent(obj)) {\n      promList.push(saveNew(\"talents\", obj as Talent, fileName));\n    }\n  });\n  await Promise.all(promList);\n  callback();\n};\n\n// const scanForFormatErrors = (obj: any) => {\n//   const itemFormatErrors = findItemFromattError(obj);\n//   let itemFailCount: number = 0;\n//   for (const value of Object.entries(itemFormatErrors)) {\n//     if (!value[1]) itemFailCount++;\n//   }\n//   const gearFormatErrors = findGearFormattError(obj);\n//   let gearFailCount: number = 0;\n//   for (const value of Object.entries(gearFormatErrors)) {\n//     if (!value[1]) gearFailCount++;\n//   }\n//   const spellFormatErrors = findSpellFormattError(obj);\n//   let spellFailCount: number = 0;\n//   for (const value of Object.entries(spellFormatErrors)) {\n//     if (!value[1]) spellFailCount++;\n//   }\n//   const monsterFormatErrors = findMonsterFormattError(obj);\n//   let monsterFailCount: number = 0;\n//   for (const value of Object.entries(monsterFormatErrors)) {\n//     if (!value[1]) monsterFailCount++;\n//   }\n//   const raceFormatErrors = findRaceFormattError(obj);\n//   let raceFailCount: number = 0;\n//   for (const value of Object.entries(raceFormatErrors)) {\n//     if (!value[1]) raceFailCount++;\n//   }\n//   const subraceFormatErrors = findSubraceFormattError(obj);\n//   let subraceFailCount: number = 0;\n//   for (const value of Object.entries(subraceFormatErrors)) {\n//     if (!value[1]) subraceFailCount++;\n//   }\n//   const classFormatErrors = findClassFormattError(obj);\n//   let classFailCount: number = 0;\n//   for (const value of Object.entries(classFormatErrors)) {\n//     if (!value[1]) classFailCount++;\n//   }\n//   const subclassFormatErrors = formattSubclassFromattError(obj);\n//   let subclassFailCount: number = 0;\n//   for (const value of Object.entries(subclassFormatErrors)) {\n//     if (!value[1]) subclassFailCount++;\n//   }\n//   const selectionFormatErrors = findSelectionFormattError(obj);\n//   let selectionFailCount: number = 0;\n//   for (const value of Object.entries(selectionFormatErrors)) {\n//     if (!value[1]) selectionFailCount++;\n//   }\n\n//   let errors: any[] = [];\n//   if (\n//     itemFailCount <= gearFailCount &&\n//     itemFailCount <= spellFailCount &&\n//     itemFailCount <= raceFailCount &&\n//     itemFailCount <= subraceFailCount &&\n//     itemFailCount <= classFailCount &&\n//     itemFailCount <= subclassFailCount &&\n//     itemFailCount <= selectionFailCount &&\n//     itemFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ item: itemFormatErrors });\n//   }\n//   if (\n//     gearFailCount <= itemFailCount &&\n//     gearFailCount <= spellFailCount &&\n//     gearFailCount <= raceFailCount &&\n//     gearFailCount <= subraceFailCount &&\n//     gearFailCount <= classFailCount &&\n//     gearFailCount <= subclassFailCount &&\n//     gearFailCount <= selectionFailCount &&\n//     gearFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ gear: gearFormatErrors });\n//   }\n//   if (\n//     spellFailCount <= itemFailCount &&\n//     spellFailCount <= gearFailCount &&\n//     spellFailCount <= raceFailCount &&\n//     spellFailCount <= subraceFailCount &&\n//     spellFailCount <= classFailCount &&\n//     spellFailCount <= subclassFailCount &&\n//     spellFailCount <= selectionFailCount &&\n//     spellFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ spell: spellFormatErrors });\n//   }\n//   if (\n//     monsterFailCount <= itemFailCount &&\n//     monsterFailCount <= gearFailCount &&\n//     monsterFailCount <= raceFailCount &&\n//     monsterFailCount <= subraceFailCount &&\n//     monsterFailCount <= classFailCount &&\n//     monsterFailCount <= subclassFailCount &&\n//     monsterFailCount <= selectionFailCount &&\n//     monsterFailCount <= spellFailCount\n//   ) {\n//     errors.push({ monster: monsterFormatErrors });\n//   }\n//   if (\n//     raceFailCount <= itemFailCount &&\n//     raceFailCount <= gearFailCount &&\n//     raceFailCount <= monsterFailCount &&\n//     raceFailCount <= subraceFailCount &&\n//     raceFailCount <= classFailCount &&\n//     raceFailCount <= subclassFailCount &&\n//     raceFailCount <= selectionFailCount &&\n//     raceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ race: raceFormatErrors });\n//   }\n//   if (\n//     subraceFailCount <= itemFailCount &&\n//     subraceFailCount <= gearFailCount &&\n//     subraceFailCount <= monsterFailCount &&\n//     subraceFailCount <= raceFailCount &&\n//     subraceFailCount <= classFailCount &&\n//     subraceFailCount <= subclassFailCount &&\n//     subraceFailCount <= selectionFailCount &&\n//     subraceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subrace: subraceFormatErrors });\n//   }\n//   if (\n//     classFailCount <= itemFailCount &&\n//     classFailCount <= gearFailCount &&\n//     classFailCount <= monsterFailCount &&\n//     classFailCount <= raceFailCount &&\n//     classFailCount <= subraceFailCount &&\n//     classFailCount <= subclassFailCount &&\n//     classFailCount <= selectionFailCount &&\n//     classFailCount <= spellFailCount\n//   ) {\n//     errors.push({ class: classFormatErrors });\n//   }\n//   if (\n//     subclassFailCount <= itemFailCount &&\n//     subclassFailCount <= gearFailCount &&\n//     subclassFailCount <= monsterFailCount &&\n//     subclassFailCount <= raceFailCount &&\n//     subclassFailCount <= subraceFailCount &&\n//     subclassFailCount <= classFailCount &&\n//     subclassFailCount <= selectionFailCount &&\n//     subclassFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subclass: subclassFormatErrors });\n//   }\n//   if (\n//     selectionFailCount <= itemFailCount &&\n//     selectionFailCount <= gearFailCount &&\n//     selectionFailCount <= monsterFailCount &&\n//     selectionFailCount <= raceFailCount &&\n//     selectionFailCount <= subraceFailCount &&\n//     selectionFailCount <= classFailCount &&\n//     selectionFailCount <= subclassFailCount &&\n//     selectionFailCount <= spellFailCount\n//   ) {\n//     errors.push({ selection: selectionFormatErrors });\n//   }\n//   return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n// };\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let entity = { [tableName]: all };\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(entity)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(entity));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  const spells = await reciveAllPromise(\"spells\");\n\n  let all: any = {\n    spells: spells,\n  };\n\n  let contentType = \"application/json;charset=utf-8;\";\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n      type: contentType,\n    });\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../services/OptionService\";\nimport IEntity from \"../../data/IEntity\";\n\nimport {\n  faCheck,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thedndtome.com\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField\n        value={peerId}\n        label={\"ID to recive from\"}\n        onChange={(id) => setId(id)}\n      />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton\n            text={\"Accept\"}\n            icon={faCheck}\n            onClick={() => acceptData()}\n          />\n          <TextButton\n            text={\"Decline\"}\n            icon={faCheck}\n            onClick={() => declineData()}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../theme/Theme\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst TalentsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Talents?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"talents\", \"SkirmishTome_talents.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Talents?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"talents\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all talents`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"talents\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default TalentsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({ label, accept, isMulti, icon, transform, onChange }: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input onChange={(e) => onChange(e.target.files)} accept={accept} type=\"file\"></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport FileField from \"./FileField\";\nimport IEntity from \"../../data/IEntity\";\nimport { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport { saveNewFromList } from \"../../services/DatabaseService\";\n\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nexport enum ImportModus {\n  NORMAL,\n}\n\ninterface $Props {\n  modus: ImportModus;\n}\n\nconst ImportField = ({ modus }: $Props) => {\n  const [files, setFiles] = useState<File[]>([]);\n\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      setFiles(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\".json\"}\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n      <Files>\n        {files &&\n          files.map((file: File, index: number) => (\n            <FileTile key={index} modus={modus} file={file} />\n          ))}\n      </Files>\n    </>\n  );\n};\n\nexport default ImportField;\n\ninterface $FileProps {\n  file: File;\n  modus: ImportModus;\n}\n\nconst FileTile = ({ file, modus }: $FileProps) => {\n  const [succCount, setSucc] = useState<number>(0);\n  const [maxCount, setMax] = useState<number>(0);\n\n  const scanImportFile = async (json: any, fileName: string) => {\n    console.log(\"Start 5eTools Json interpreting \" + fileName);\n\n    let listOfNew: { tableName: string; newEntitiy: IEntity }[] = [];\n\n    let newMax: number = 0;\n    for (const [key, value] of Object.entries(json)) {\n      if (Array.isArray(value)) {\n        newMax += value.length;\n        if (modus === ImportModus.NORMAL) {\n          // eslint-disable-next-line\n          value.forEach((obj: any) => listOfNew.push({ tableName: key, newEntitiy: obj }));\n        }\n      }\n    }\n    setMax(newMax);\n\n    while (listOfNew.length > 0) {\n      let newTableName = listOfNew[0].tableName;\n      let bulkList: IEntity[] = listOfNew\n        .filter((newEntitiy) => newEntitiy.tableName === newTableName)\n        .map((entity: { tableName: string; newEntitiy: IEntity }) => {\n          return entity.newEntitiy;\n        });\n      await saveNewFromList(newTableName, bulkList, fileName);\n      listOfNew = listOfNew.filter((entity) => entity.tableName !== newTableName);\n      setSucc(newMax - listOfNew.length);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Start Filereader \" + file.name);\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        let json = JSON.parse(content.toString());\n        console.log(\"Json loaded from \" + file.name);\n        scanImportFile(json, file.name);\n      }\n    };\n    fileReader.readAsText(file);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file]);\n\n  return (\n    <FileWrapper>\n      {file.name} {succCount}/{maxCount}\n      <ProgressBar\n        completed={Math.round((succCount / maxCount) * 100)}\n        isLabelVisible={false}\n        bgcolor={\"#F55C5C\"}\n        height={\"5px\"}\n        margin={\"5px\"}\n      />\n    </FileWrapper>\n  );\n};\n\nconst Files = styled.div`\n  flex: 1 1 100%;\n`;\n\nconst FileWrapper = styled.div`\n  width: clac(100% - 20px);\n  height: 50px;\n  padding: 10px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport StringField from \"../form_elements/StringField\";\n\nconst DiscordOptions = () => {\n  const [webhook, setWebhook] = useState<string>(localStorage.getItem(\"webhook\") + \"\");\n  const [webhookUser, setWebhookUser] = useState<string>(localStorage.getItem(\"webhook_user\") + \"\");\n\n  useEffect(() => {\n    if (webhook !== localStorage.getItem(\"webhook\")) localStorage.setItem(\"webhook\", webhook);\n  }, [webhook]);\n\n  useEffect(() => {\n    if (webhookUser !== localStorage.getItem(\"webhook_user\"))\n      localStorage.setItem(\"webhook_user\", webhookUser);\n  }, [webhookUser]);\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Discord Webhook</SelectionTitle>\n        <StringField value={webhookUser} label=\"PlayerName\" onChange={setWebhookUser} />\n        <StringField value={webhook} label=\"Webhook\" onChange={setWebhook} />\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default DiscordOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import IEntity from \"../data/IEntity\";\nimport Spell from \"../data/Spell\";\nimport {\n  SpellSource,\n  SpellRite,\n  SpellDuration,\n  SpellRange,\n  SpellSchool,\n  SpellTarget,\n  SpellDrainType,\n  SpellLevel,\n  SpellCastTime,\n  SpellDamage,\n  SpellScalingEffect,\n  SpellAoeRadius,\n  SpellDirectEffects,\n  SpellProjectileType,\n  SpellProjectileNumber,\n  SpellDamageType,\n  SpellTargetingType,\n  SpellLosRange,\n  SpellSize,\n  SpellPureDamage,\n  SpellHp,\n} from \"../data/SpellValues\";\nimport { saveNewFromList } from \"./DatabaseService\";\n\nexport const scanImportedSpellCsv = (csv: Array<any>, filename: string) => {\n  let listOfSpells: Array<Spell> = [];\n  console.log(\"Raw\", csv);\n  csv.slice(1).forEach((row: Array<string>) => {\n    let newSpell = new Spell(\n      0,\n      row[0],\n      SpellSource.find(row[1]),\n      SpellCastTime.find(row[24]),\n      SpellRite.find(row[4]),\n      SpellDuration.find(row[23]),\n      \"\",\n      SpellRange.find(row[7]),\n      SpellSchool.find(row[25]),\n      row[27],\n      \"\",\n      row[28],\n      row[31],\n      0,\n      +row[29],\n      SpellScalingEffect.find(row[14]),\n      SpellTarget.find(row[3]),\n      SpellAoeRadius.find(row[9]),\n      [\n        SpellDamage.find(row[13]),\n        SpellDamage.find(row[14]),\n        SpellDamage.find(row[15]),\n      ],\n      SpellDirectEffects.NONE,\n      SpellLevel.find(row[2]),\n      SpellProjectileType.find(row[10]),\n      SpellProjectileNumber.find(row[11]),\n      SpellDamageType.find(row[17]),\n      SpellTargetingType.find(row[16]),\n      SpellLosRange.find(row[8]),\n      SpellDrainType.find(row[22]),\n      SpellPureDamage.find(row[18]),\n      SpellSize.find(row[21]),\n      SpellHp.find(row[20]),\n      row[30]?.toLowerCase() === \"yes\" ? true : false,\n      row[6]?.toLowerCase() === \"yes\" ? true : false\n    );\n    newSpell.drain = Spell.calcDrain(newSpell);\n    listOfSpells.push(newSpell);\n  });\n  console.log(\"Processed Spells\", listOfSpells);\n  saveInDB(\"spells\", listOfSpells, filename);\n};\n\nexport const saveInDB = async (\n  tablename: string,\n  listOfIEntity: Array<IEntity>,\n  filename: string\n) => {\n  let listOfNew = [...listOfIEntity];\n  await saveNewFromList(tablename, listOfNew, filename);\n  console.log(\"Done saving\");\n};\n\n// export const parseRowEntry = (entry: string): number => {\n//   return parseInt(\n//     entry.replaceAll(\"€\", \"\").trim().replaceAll(\".\", \"\").replaceAll(\",\", \"\")\n//   );\n// };\n\n// export const updateListsWith = (bookeeEntryJson: BookeeEntry[]) => {\n//   bookeeEntryJson.forEach((entry: BookeeEntry) => {\n//     reciveAllByAttributes(\n//       \"[dateDay+dateMonth+dateYear]\",\n//       [[entry.dateDay, entry.dateMonth, entry.dateYear]],\n//       (data: any[]) => {\n//         let isPresent = false;\n//         data.forEach((dat: any) => {\n//           const compDat = { ...dat };\n//           delete compDat[\"id\"];\n//           if (JSON.stringify(compDat) === JSON.stringify(entry))\n//             isPresent = true;\n//         });\n//         if (!isPresent) {\n//           console.log(\n//             `New Entry on ${\n//               (entry.dateDay, entry.dateMonth, entry.dateYear)\n//             } will be saved.`\n//           );\n//           saveNew(entry);\n//         }\n//       }\n//     );\n//   });\n// };\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { exportAll } from \"../../services/OptionService\";\nimport {\n  deleteAll,\n  reciveAll,\n  reciveCount,\n} from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport P2PReciver from \"../p2p/P2PReciver\";\n\nimport Talent, { isTalent } from \"../../data/Talent\";\n\nimport { faFileExport, faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../general_elements/TabBar\";\nimport IconButton from \"../form_elements/IconButton\";\nimport TalentTile from \"../entities/talents/TalentTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport TalentsOptions from \"./TalentsOptions\";\nimport ImportField, { ImportModus } from \"../form_elements/ImportField\";\nimport DiscordOptions from \"./DiscordOptions\";\nimport { useCSVDownloader, usePapaParse } from \"react-papaparse\";\nimport FileField from \"../form_elements/FileField\";\nimport { scanImportedSpellCsv } from \"../../services/CsvService\";\nimport Spell from \"../../data/Spell\";\nimport Race from \"../../data/Race\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [talentAmount, setTalentAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  const { readString } = usePapaParse();\n  const { CSVDownloader, Type } = useCSVDownloader();\n  const [csvBackup, setBackup] = useState<any>();\n\n  const handleSpellCsvUpload = (files: any) => {\n    const file: File = files[0];\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        readString(content.toString(), {\n          worker: true,\n          complete: (results) => {\n            console.log(\"Csv loaded from \" + file.name);\n            const csv: Array<any> = results.data;\n            console.log(csv);\n            scanImportedSpellCsv(csv, file.name);\n            console.log(\"---------\");\n          },\n        });\n      }\n    };\n    fileReader.readAsText(file);\n  };\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"talents\", (result: number) => {\n        setTalentAmount(result);\n      });\n      let backup: any[] = [];\n      reciveAll(\"spells\", (result: any[]) => {\n        backup.push([\"Spell\"].concat(Object.keys(new Spell())));\n        result.forEach((spell: Spell) => {\n          backup.push([\"\"].concat(Spell.makeCsv(spell)));\n        });\n      });\n      reciveAll(\"talents\", (result: any[]) => {\n        backup.push([\"Talent\"].concat(Object.keys(new Talent())));\n        result.forEach((talent: Talent) => {\n          backup.push([\"\"].concat(Talent.makeCsv(talent)));\n        });\n      });\n      reciveAll(\"races\", (result: any[]) => {\n        backup.push([\"Race\"].concat(Object.keys(new Race())));\n        result.forEach((race: Race) => {\n          backup.push([\"\"].concat(Race.makeCsv(race)));\n        });\n      });\n      setBackup(backup);\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isTalent(entity)) {\n      return <TalentTile key={index} talent={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  return (\n    <>\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <ImportField modus={ImportModus.NORMAL} />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAll(\"SkirmishTome_all.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <CSVDownloader\n          type={Type.Button}\n          filename={\n            \"CsvBackup_\" +\n            new Date().getFullYear() +\n            \".\" +\n            (new Date().getMonth() + 1)\n          }\n          bom={true}\n          config={{\n            delimiter: \";\",\n          }}\n          data={csvBackup}\n        >\n          Download\n        </CSVDownloader>\n      </OptionSection>\n      <TabBar\n        children={[\"General\", \"Talents\", \"Discord\", \"Receive\", \"CSV Imports\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Talents\" && (\n        <TalentsOptions\n          amount={talentAmount}\n          triggerDeleteAll={triggerDeleteAll}\n        />\n      )}\n      {activeTab === \"Discord\" && <DiscordOptions />}\n      {activeTab === \"Receive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {activeTab === \"CSV Imports\" && (\n        <OptionTab>\n          <OptionSection>\n            <SelectionTitle>Import Spell CSV</SelectionTitle>\n            <FileField\n              label=\"\"\n              isMulti={true}\n              accept={\".csv\"}\n              icon={faFileImport}\n              onChange={(file) => handleSpellCsvUpload(file)}\n            />\n          </OptionSection>\n        </OptionTab>\n      )}\n      {/* {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })} */}\n    </>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-align: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import Dexie from \"dexie\";\nimport Race from \"../data/Race\";\nimport RandomTable from \"../data/RandomTable\";\nimport Spell from \"../data/Spell\";\nimport Talent from \"../data/Talent\";\n\nexport class SkirmishDB extends Dexie {\n  randomTables: Dexie.Table<RandomTable, number>; // number = type of the primkey\n  talents: Dexie.Table<Talent, number>;\n  races: Dexie.Table<Race, number>;\n  spells: Dexie.Table<Spell, number>;\n\n  constructor() {\n    super(\"SkirmishTomeDB\");\n    this.version(1).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(2).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header, filename\",\n    });\n    this.version(3).stores({\n      talents: \"++id, name, isFlaw, cost, prerequisite, effect, type, stress\",\n      races: \"++id, name, hp, abilityModifier, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery,resist, drain\",\n    });\n    this.version(4).stores({\n      talents:\n        \"++id, name, isFlaw, cost, prerequisite, effect, type, stress, ticks\",\n      races: \"++id, name, hp, abilityModifier, size, stamina, talents, flaws\",\n      randomTables: \"++id, name, rows, header\",\n      spells:\n        \"++id, name, source, castTime, rite, duration, durationText, range, school, effect, damage, mastery, resist, drain, masteryDrain\",\n    });\n\n    this.talents = this.table(\"talents\");\n    this.spells = this.table(\"spells\");\n    this.races = this.table(\"races\");\n    this.randomTables = this.table(\"randomTables\");\n  }\n}\n","import { SkirmishDB } from \"../database/SkirmishDB\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\n// export const saveNewFromList = (tableName: string, entities: BookeeEntry[]) => {\n//   const db = new BookeeDB();\n//   db.open()\n//     .then(async function () {\n//       const refinedEntities = (entities as BookeeEntry[]).map(\n//         (entity: BookeeEntry) => {\n//           delete entity[\"id\"];\n//           return entity;\n//         }\n//       );\n//       const prom = await db.table(tableName).bulkPut(refinedEntities);\n//       return prom;\n//     })\n//     .finally(function () {\n//       db.close();\n//     });\n// };\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new SkirmishDB();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new SkirmishDB();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new SkirmishDB();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new SkirmishDB();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  style?: any;\n  onClick?: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, style, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick} style={style}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton style={style}>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  style?: any;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, style, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled} style={style}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n","export function useWebhook(): { hook: string; name: string } | undefined {\n  if (localStorage.getItem(\"webhook\") !== null && localStorage.getItem(\"webhook\") !== \"\") {\n    let name = \"SkirmishTome\";\n    if (localStorage.getItem(\"webhook_user\") !== null)\n      name = localStorage.getItem(\"webhook_user\") + \"\";\n    return { hook: localStorage.getItem(\"webhook\") + \"\", name: name };\n  } else return undefined;\n}\n","export const sendMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  content: string,\n  avatar?: string\n) => {\n  if (webhook !== undefined) {\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    let params = {\n      username: webhook.name !== \"\" ? webhook.name : \"SkirmishTome\",\n      avatar_url: avatar !== undefined ? avatar : \"\",\n      content: content,\n    };\n    request.send(JSON.stringify(params));\n  }\n};\n\nexport const sendEmbedMessage = (\n  webhook: { hook: string; name: string } | undefined,\n  params: string\n) => {\n  if (webhook !== undefined) {\n    console.log(params);\n    let request = new XMLHttpRequest();\n    request.open(\"POST\", webhook.hook);\n    request.setRequestHeader(\"Content-type\", \"application/json\");\n    request.send(params);\n  }\n};\n\nexport const formatDiscordText = (text: string): string => {\n  if (text.includes(\"[[\")) {\n    return text.replaceAll(\"[[\", \"*\").replaceAll(\"]]\", \"*\");\n  } else {\n    return text;\n  }\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n\n  --notchSize: 15px;\n  clip-path: polygon(\n    0% var(--notchSize),\n    var(--notchSize) 0%,\n    100% 0%,\n    100% calc(100% - var(--notchSize)),\n    calc(100% - var(--notchSize)) 100%,\n    0 100%\n  );\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","export interface StringPair {\n  label: string;\n  drain: number;\n}\nexport interface NumberPair {\n  label: number;\n  drain: number;\n}\n\n// export class Dummy {\n//   static readonly NONE: StringPair = { label: \"\", drain: 0,};\n//   static readonly DUMMY: StringPair = { label: , drain: 0 };\n\n//   private constructor(\n//     private readonly label: string,\n//     public readonly drain: number\n//   ) {}\n\n//   static find = (label: string): StringPair => {\n//     switch (label?.toLowerCase().trim()) {\n//       case Dummy.DUMMY.label.toLowerCase():\n//         return Dummy.DUMMY;\n//       default:\n//         return Dummy.NONE;\n//     }\n//   };\n//   static getAll = (): string[] => {\n//     return [Dummy.DUMMY.label];\n//   };\n// }\n\nexport class SpellPureDamage {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ACID: StringPair = { label: \"Acid\", drain: 0 };\n  static readonly NECROTIC: StringPair = { label: \"Necrotic\", drain: 0 };\n  static readonly FROST: StringPair = { label: \"Frost\", drain: 0 };\n  static readonly FIRE: StringPair = { label: \"Fire\", drain: 0 };\n  static readonly LIGHTNING: StringPair = { label: \"Lightning\", drain: 0 };\n  static readonly RADIANT: StringPair = { label: \"Radiant\", drain: 0 };\n  static readonly ARCANE: StringPair = { label: \"Arcane\", drain: 1 };\n  static readonly POISON: StringPair = { label: \"Poison\", drain: 0 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellPureDamage.ACID.label.toLowerCase():\n        return SpellPureDamage.ACID;\n      case SpellPureDamage.NECROTIC.label.toLowerCase():\n        return SpellPureDamage.NECROTIC;\n      case SpellPureDamage.FROST.label.toLowerCase():\n        return SpellPureDamage.FROST;\n      case SpellPureDamage.FIRE.label.toLowerCase():\n        return SpellPureDamage.FIRE;\n      case SpellPureDamage.LIGHTNING.label.toLowerCase():\n        return SpellPureDamage.LIGHTNING;\n      case SpellPureDamage.RADIANT.label.toLowerCase():\n        return SpellPureDamage.RADIANT;\n      case SpellPureDamage.ARCANE.label.toLowerCase():\n        return SpellPureDamage.ARCANE;\n      case SpellPureDamage.POISON.label.toLowerCase():\n        return SpellPureDamage.POISON;\n      default:\n        return SpellPureDamage.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellPureDamage.NONE.label,\n      SpellPureDamage.ACID.label,\n      SpellPureDamage.NECROTIC.label,\n      SpellPureDamage.FROST.label,\n      SpellPureDamage.FIRE.label,\n      SpellPureDamage.LIGHTNING.label,\n      SpellPureDamage.RADIANT.label,\n      SpellPureDamage.ARCANE.label,\n      SpellPureDamage.POISON.label,\n    ];\n  };\n}\n\nexport class SpellHp {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSTRUCTUREHP: StringPair = {\n    label: \"1/2 Magic/Faith structure rating and Magic/Faith *1 hit points\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSTRUCTUREDOUBLEHP: StringPair = {\n    label: \"1/2 Magic/Faith structure rating and Magic/Faith *2 hit points\",\n    drain: 1,\n  };\n  static readonly HALFMAGICSTRUCTURETRIPPLEHP: StringPair = {\n    label: \"1/2 Magic/Faith structure rating and Magic/Faith *3 hit points\",\n    drain: 2,\n  };\n  static readonly MAGICSTRUCTUREHP: StringPair = {\n    label: \"Magic/Faith structure rating and Magic/Faith *1 hit points\",\n    drain: 1,\n  };\n  static readonly MAGICSTRUCTUREDOUBLEHP: StringPair = {\n    label: \"Magic/Faith structure rating and Magic/Faith *2 hit points\",\n    drain: 3,\n  };\n  static readonly DOUBLEMAGICESTRUCTUREHP: StringPair = {\n    label: \"Magic/Faith *2 structure rating and Magic/Faith hit points\",\n    drain: 4,\n  };\n  static readonly MAGICHP: StringPair = {\n    label: \"Magic/Faith *1 hit points\",\n    drain: 1,\n  };\n  static readonly MAGICDOUBLEHP: StringPair = {\n    label: \"Magic/Faith *2 hit points\",\n    drain: 2,\n  };\n  static readonly MAGICTRIPPLEHP: StringPair = {\n    label: \"Magic/Faith *3 hit points\",\n    drain: 3,\n  };\n  static readonly MAGICQUADRUPLEHP: StringPair = {\n    label: \"Magic/Faith *4 hit points\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellHp.HALFMAGICSTRUCTUREHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTUREHP;\n      case SpellHp.HALFMAGICSTRUCTUREDOUBLEHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTUREDOUBLEHP;\n      case SpellHp.HALFMAGICSTRUCTURETRIPPLEHP.label.toLowerCase():\n        return SpellHp.HALFMAGICSTRUCTURETRIPPLEHP;\n      case SpellHp.MAGICSTRUCTUREHP.label.toLowerCase():\n        return SpellHp.MAGICSTRUCTUREHP;\n      case SpellHp.MAGICSTRUCTUREDOUBLEHP.label.toLowerCase():\n        return SpellHp.MAGICSTRUCTUREDOUBLEHP;\n      case SpellHp.DOUBLEMAGICESTRUCTUREHP.label.toLowerCase():\n        return SpellHp.DOUBLEMAGICESTRUCTUREHP;\n      case SpellHp.MAGICHP.label.toLowerCase():\n        return SpellHp.MAGICHP;\n      case SpellHp.MAGICDOUBLEHP.label.toLowerCase():\n        return SpellHp.MAGICDOUBLEHP;\n      case SpellHp.MAGICTRIPPLEHP.label.toLowerCase():\n        return SpellHp.MAGICTRIPPLEHP;\n      case SpellHp.MAGICQUADRUPLEHP.label.toLowerCase():\n        return SpellHp.MAGICQUADRUPLEHP;\n      default:\n        return SpellHp.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellHp.NONE.label,\n      SpellHp.HALFMAGICSTRUCTUREHP.label,\n      SpellHp.HALFMAGICSTRUCTUREDOUBLEHP.label,\n      SpellHp.HALFMAGICSTRUCTURETRIPPLEHP.label,\n      SpellHp.MAGICSTRUCTUREHP.label,\n      SpellHp.MAGICSTRUCTUREDOUBLEHP.label,\n      SpellHp.DOUBLEMAGICESTRUCTUREHP.label,\n      SpellHp.MAGICHP.label,\n      SpellHp.MAGICDOUBLEHP.label,\n      SpellHp.MAGICTRIPPLEHP.label,\n      SpellHp.MAGICQUADRUPLEHP.label,\n    ];\n  };\n}\n\nexport class SpellSize {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGICSQUARED: StringPair = {\n    label: \"1/2 Magic/Faith M²\",\n    drain: 0,\n  };\n  static readonly MAGICSQUARED: StringPair = {\n    label: \"Magic/Faith M²\",\n    drain: 1,\n  };\n  static readonly DOUBLEMAGICSQUARED: StringPair = {\n    label: \"Magic/Faith *2 M²\",\n    drain: 2,\n  };\n  static readonly TRIPPLEMAGICSQUARED: StringPair = {\n    label: \"Magic/Faith *3 M²\",\n    drain: 4,\n  };\n  static readonly HALFMAGICQUBED: StringPair = {\n    label: \"1/2 Magic/Faith M³\",\n    drain: 0,\n  };\n  static readonly MAGICQUBED: StringPair = {\n    label: \"Magic/Faith M³\",\n    drain: 1,\n  };\n  static readonly DOUBLEMAGICQUBED: StringPair = {\n    label: \"Magic/Faith *2 M³\",\n    drain: 2,\n  };\n  static readonly TRIPPLEMAGICQUBED: StringPair = {\n    label: \"Magic/Faith *3 M³\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSize.HALFMAGICSQUARED.label.toLowerCase():\n        return SpellSize.HALFMAGICSQUARED;\n      case SpellSize.MAGICSQUARED.label.toLowerCase():\n        return SpellSize.MAGICSQUARED;\n      case SpellSize.DOUBLEMAGICSQUARED.label.toLowerCase():\n        return SpellSize.DOUBLEMAGICSQUARED;\n      case SpellSize.TRIPPLEMAGICSQUARED.label.toLowerCase():\n        return SpellSize.TRIPPLEMAGICSQUARED;\n      case SpellSize.HALFMAGICQUBED.label.toLowerCase():\n        return SpellSize.HALFMAGICQUBED;\n      case SpellSize.MAGICQUBED.label.toLowerCase():\n        return SpellSize.MAGICQUBED;\n      case SpellSize.DOUBLEMAGICQUBED.label.toLowerCase():\n        return SpellSize.DOUBLEMAGICQUBED;\n      case SpellSize.TRIPPLEMAGICQUBED.label.toLowerCase():\n        return SpellSize.TRIPPLEMAGICQUBED;\n      default:\n        return SpellSize.HALFMAGICSQUARED;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSize.NONE.label,\n      SpellSize.HALFMAGICSQUARED.label,\n      SpellSize.MAGICSQUARED.label,\n      SpellSize.DOUBLEMAGICSQUARED.label,\n      SpellSize.TRIPPLEMAGICSQUARED.label,\n      SpellSize.HALFMAGICQUBED.label,\n      SpellSize.MAGICQUBED.label,\n      SpellSize.DOUBLEMAGICQUBED.label,\n      SpellSize.TRIPPLEMAGICQUBED.label,\n    ];\n  };\n}\n\nexport class SpellDirectEffects {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly DIFFICULTTERRAIN: StringPair = {\n    label: \"Difficult Terrain\",\n    drain: 1,\n  };\n  static readonly LIFELEECH: StringPair = { label: \"Life Leech\", drain: 2 };\n  static readonly COMMUNICATE: StringPair = { label: \"Communicate\", drain: 2 };\n  static readonly CONFUSIONSTUNBLIND: StringPair = {\n    label: \"Confusion / Stun / Blind\",\n    drain: 3,\n  };\n  static readonly HEX: StringPair = { label: \"Hex\", drain: 4 };\n  static readonly IMPAIRMOVEMENTVISION: StringPair = {\n    label: \"Impair Movement / Vision\",\n    drain: 4,\n  };\n  static readonly MOVEFEARROOT: StringPair = {\n    label: \"Move / Fear / Root\",\n    drain: 4,\n  };\n  static readonly DOT: StringPair = { label: \"Damage Over Time\", drain: 3 };\n  static readonly INCAPACITATE: StringPair = {\n    label: \"Incapacitate\",\n    drain: 4,\n  };\n  static readonly SPHERE: StringPair = { label: \"Sphere\", drain: 5 };\n  static readonly KNOCKDOWN: StringPair = { label: \"Knockdown\", drain: 2 };\n  static readonly WALLBARRIERCONSTRUCTSUMMON: StringPair = {\n    label: \"Wall / Barrier / Construct / Summon\",\n    drain: 0,\n  };\n  static readonly TELEPORT: StringPair = { label: \"Teleport\", drain: 6 };\n  static readonly HEAL: StringPair = { label: \"Heal\", drain: 5 };\n  static readonly BUFFILLUSIONSHIELD: StringPair = {\n    label: \"Buff / Illusion / Shield\",\n    drain: 5,\n  };\n  static readonly CHARMCONTROLINFLUENCE: StringPair = {\n    label: \"Charm / Control / Influence\",\n    drain: 3,\n  };\n  static readonly TRANSFORM: StringPair = { label: \"Transform\", drain: 4 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDirectEffects.DIFFICULTTERRAIN.label.toLowerCase():\n        return SpellDirectEffects.DIFFICULTTERRAIN;\n      case SpellDirectEffects.LIFELEECH.label.toLowerCase():\n        return SpellDirectEffects.LIFELEECH;\n      case SpellDirectEffects.COMMUNICATE.label.toLowerCase():\n        return SpellDirectEffects.COMMUNICATE;\n      case SpellDirectEffects.CONFUSIONSTUNBLIND.label.toLowerCase():\n        return SpellDirectEffects.CONFUSIONSTUNBLIND;\n      case SpellDirectEffects.HEX.label.toLowerCase():\n        return SpellDirectEffects.HEX;\n      case SpellDirectEffects.IMPAIRMOVEMENTVISION.label.toLowerCase():\n        return SpellDirectEffects.IMPAIRMOVEMENTVISION;\n      case SpellDirectEffects.MOVEFEARROOT.label.toLowerCase():\n        return SpellDirectEffects.MOVEFEARROOT;\n      case SpellDirectEffects.DOT.label.toLowerCase():\n        return SpellDirectEffects.DOT;\n      case SpellDirectEffects.INCAPACITATE.label.toLowerCase():\n        return SpellDirectEffects.INCAPACITATE;\n      case SpellDirectEffects.SPHERE.label.toLowerCase():\n        return SpellDirectEffects.SPHERE;\n      case SpellDirectEffects.KNOCKDOWN.label.toLowerCase():\n        return SpellDirectEffects.KNOCKDOWN;\n      case SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON.label.toLowerCase():\n        return SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON;\n      case SpellDirectEffects.TELEPORT.label.toLowerCase():\n        return SpellDirectEffects.TELEPORT;\n      case SpellDirectEffects.HEAL.label.toLowerCase():\n        return SpellDirectEffects.HEAL;\n      case SpellDirectEffects.BUFFILLUSIONSHIELD.label.toLowerCase():\n        return SpellDirectEffects.BUFFILLUSIONSHIELD;\n      case SpellDirectEffects.CHARMCONTROLINFLUENCE.label.toLowerCase():\n        return SpellDirectEffects.CHARMCONTROLINFLUENCE;\n      case SpellDirectEffects.TRANSFORM.label.toLowerCase():\n        return SpellDirectEffects.TRANSFORM;\n      default:\n        return SpellDirectEffects.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDirectEffects.NONE.label,\n      SpellDirectEffects.DIFFICULTTERRAIN.label,\n      SpellDirectEffects.LIFELEECH.label,\n      SpellDirectEffects.COMMUNICATE.label,\n      SpellDirectEffects.CONFUSIONSTUNBLIND.label,\n      SpellDirectEffects.HEX.label,\n      SpellDirectEffects.IMPAIRMOVEMENTVISION.label,\n      SpellDirectEffects.MOVEFEARROOT.label,\n      SpellDirectEffects.DOT.label,\n      SpellDirectEffects.INCAPACITATE.label,\n      SpellDirectEffects.SPHERE.label,\n      SpellDirectEffects.KNOCKDOWN.label,\n      SpellDirectEffects.WALLBARRIERCONSTRUCTSUMMON.label,\n      SpellDirectEffects.TELEPORT.label,\n      SpellDirectEffects.HEAL.label,\n      SpellDirectEffects.BUFFILLUSIONSHIELD.label,\n      SpellDirectEffects.CHARMCONTROLINFLUENCE.label,\n      SpellDirectEffects.TRANSFORM.label,\n    ];\n  };\n}\n\nexport class SpellScalingEffect {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly MYSTBRADIUS: StringPair = {\n    label: \"plus MystB Meters Radius\",\n    drain: 2,\n  };\n  static readonly MYSTBPROJECTILES: StringPair = {\n    label: \"plus MystB Projectiles\",\n    drain: 2,\n  };\n  static readonly ONEVARIABLEPROJECTILE: StringPair = {\n    label: \"1 Projectile/Effect per Variable Factor\",\n    drain: 3,\n  };\n  static readonly ONEPROJECTILETHREEMAGIC: StringPair = {\n    label: \"1 Projectile/Effect per 3 Magic/Faith Rating\",\n    drain: 2,\n  };\n  static readonly ONEPROJECTILETWOMAGIC: StringPair = {\n    label: \"1 Projectile/Effect per 2 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly ONEPROJECTILERADIUSTWOMAGIC: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per 2 Magic/Faith Rating\",\n    drain: 5,\n  };\n  static readonly ONEPROJECTILERADIUSTHREEMAGIC: StringPair = {\n    label: \"1 Projectile/Effect and 1 Meter Radius per 3 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PROJECTILETWOMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 2 Magic/Faith Rating\",\n    drain: 4,\n  };\n  static readonly PROJECTILETHREEMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 3 Magic/Faith Rating\",\n    drain: 3,\n  };\n  static readonly ONEPROJECTILEFOURMAGIC: StringPair = {\n    label: \"plus 1 Projectile/Effect per 4 Magic/Faith Rating\",\n    drain: 2,\n  };\n  static readonly MYSTBRADIUSEFFECT: StringPair = {\n    label: \"plus MystB Meters Radius & Effect\",\n    drain: 3,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellScalingEffect.MYSTBRADIUS.label.toLowerCase():\n        return SpellScalingEffect.MYSTBRADIUS;\n      case SpellScalingEffect.MYSTBPROJECTILES.label.toLowerCase():\n        return SpellScalingEffect.MYSTBPROJECTILES;\n      case SpellScalingEffect.ONEVARIABLEPROJECTILE.label.toLowerCase():\n        return SpellScalingEffect.ONEVARIABLEPROJECTILE;\n      case SpellScalingEffect.ONEPROJECTILETHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.ONEPROJECTILETHREEMAGIC;\n      case SpellScalingEffect.ONEPROJECTILETWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.ONEPROJECTILETWOMAGIC;\n      case SpellScalingEffect.ONEPROJECTILERADIUSTWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.ONEPROJECTILERADIUSTWOMAGIC;\n      case SpellScalingEffect.ONEPROJECTILERADIUSTHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.ONEPROJECTILERADIUSTHREEMAGIC;\n      case SpellScalingEffect.PROJECTILETWOMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILETWOMAGIC;\n      case SpellScalingEffect.PROJECTILETHREEMAGIC.label.toLowerCase():\n        return SpellScalingEffect.PROJECTILETHREEMAGIC;\n      case SpellScalingEffect.ONEPROJECTILEFOURMAGIC.label.toLowerCase():\n        return SpellScalingEffect.ONEPROJECTILEFOURMAGIC;\n      case SpellScalingEffect.MYSTBRADIUSEFFECT.label.toLowerCase():\n        return SpellScalingEffect.MYSTBRADIUSEFFECT;\n      default:\n        return SpellScalingEffect.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellScalingEffect.NONE.label,\n      SpellScalingEffect.MYSTBRADIUS.label,\n      SpellScalingEffect.MYSTBPROJECTILES.label,\n      SpellScalingEffect.ONEVARIABLEPROJECTILE.label,\n      SpellScalingEffect.ONEPROJECTILETHREEMAGIC.label,\n      SpellScalingEffect.ONEPROJECTILETWOMAGIC.label,\n      SpellScalingEffect.ONEPROJECTILERADIUSTWOMAGIC.label,\n      SpellScalingEffect.ONEPROJECTILERADIUSTHREEMAGIC.label,\n      SpellScalingEffect.PROJECTILETWOMAGIC.label,\n      SpellScalingEffect.PROJECTILETHREEMAGIC.label,\n      SpellScalingEffect.ONEPROJECTILEFOURMAGIC.label,\n      SpellScalingEffect.MYSTBRADIUSEFFECT.label,\n    ];\n  };\n}\n\nexport class SpellDamageType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly COMBINED: StringPair = { label: \"Combined\", drain: 0 };\n  static readonly PHYSICAL: StringPair = { label: \"Physical\", drain: 0 };\n  static readonly STUN: StringPair = { label: \"Stun\", drain: 1 };\n  static readonly PURE: StringPair = { label: \"Pure\", drain: 2 };\n  static readonly FATIGUE: StringPair = { label: \"Fatigue\", drain: 3 };\n  static readonly AGONY: StringPair = { label: \"Agony\", drain: 5 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDamageType.COMBINED.label.toLowerCase():\n        return SpellDamageType.COMBINED;\n      case SpellDamageType.PHYSICAL.label.toLowerCase():\n        return SpellDamageType.PHYSICAL;\n      case SpellDamageType.STUN.label.toLowerCase():\n        return SpellDamageType.STUN;\n      case SpellDamageType.PURE.label.toLowerCase():\n        return SpellDamageType.PURE;\n      case SpellDamageType.FATIGUE.label.toLowerCase():\n        return SpellDamageType.FATIGUE;\n      case SpellDamageType.AGONY.label.toLowerCase():\n        return SpellDamageType.AGONY;\n      default:\n        return SpellDamageType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDamageType.NONE.label,\n      SpellDamageType.COMBINED.label,\n      SpellDamageType.PHYSICAL.label,\n      SpellDamageType.STUN.label,\n      SpellDamageType.PURE.label,\n      SpellDamageType.FATIGUE.label,\n      SpellDamageType.AGONY.label,\n    ];\n  };\n}\n\nexport class SpellDamage {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONEPRMAGIC: StringPair = {\n    label: \"1 PR Magic/Faith\",\n    drain: 3,\n  };\n  static readonly TWOPRMAGIC: StringPair = {\n    label: \"2 PR Magic/Faith\",\n    drain: 4,\n  };\n  static readonly THREEPRMAGIC: StringPair = {\n    label: \"3 PR Magic/Faith\",\n    drain: 6,\n  };\n  static readonly FOURPRMAGIC: StringPair = {\n    label: \"4 PR Magic/Faith\",\n    drain: 8,\n  };\n  static readonly FIVEPRMAGIC: StringPair = {\n    label: \"5 PR Magic/Faith\",\n    drain: 12,\n  };\n  static readonly ONE: StringPair = { label: \"1\", drain: 1 };\n  static readonly TWO: StringPair = { label: \"2\", drain: 2 };\n  static readonly THREE: StringPair = { label: \"3\", drain: 3 };\n  static readonly FOUR: StringPair = { label: \"4\", drain: 4 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 5 };\n  static readonly ONEDFOUR: StringPair = { label: \"1d4\", drain: 1 };\n  static readonly ONEDSIX: StringPair = { label: \"1d6\", drain: 1 };\n  static readonly ONEDEIGHT: StringPair = { label: \"1d8\", drain: 2 };\n  static readonly ONEDTEN: StringPair = { label: \"1d10\", drain: 3 };\n  static readonly ONEDTWELVE: StringPair = { label: \"1d12\", drain: 3 };\n  static readonly ONEDTWENTY: StringPair = { label: \"1d20\", drain: 5 };\n  static readonly TWODFOUR: StringPair = { label: \"2d4\", drain: 2 };\n  static readonly TWODSIX: StringPair = { label: \"2d6\", drain: 3 };\n  static readonly TWODEIGHT: StringPair = { label: \"2d8\", drain: 4 };\n  static readonly TWODTEN: StringPair = { label: \"2d10\", drain: 5 };\n  static readonly TWODTWELVE: StringPair = { label: \"2d12\", drain: 5 };\n  static readonly TWODTWENTY: StringPair = { label: \"2d20\", drain: 10 };\n  static readonly THREEDFOUR: StringPair = { label: \"3d4\", drain: 3 };\n  static readonly THREEDSIX: StringPair = { label: \"3d6\", drain: 5 };\n  static readonly THREEDEIGHT: StringPair = { label: \"3d8\", drain: 6 };\n  static readonly THREEDTEN: StringPair = { label: \"3d10\", drain: 7 };\n  static readonly THREEDTWELVE: StringPair = { label: \"3d12\", drain: 9 };\n  static readonly FOURDFOUR: StringPair = { label: \"4d4\", drain: 4 };\n  static readonly FOURDSIX: StringPair = { label: \"4d6\", drain: 6 };\n  static readonly FOURDEIGHT: StringPair = { label: \"4d8\", drain: 8 };\n  static readonly FOURDTEN: StringPair = { label: \"4d10\", drain: 11 };\n  static readonly FIVEDFOUR: StringPair = { label: \"5d4\", drain: 5 };\n  static readonly FIVEDSIX: StringPair = { label: \"5d6\", drain: 8 };\n  static readonly FIVEDEIGHT: StringPair = { label: \"5d8\", drain: 12 };\n  static readonly SIXDFOUR: StringPair = { label: \"6d4\", drain: 7 };\n  static readonly MYSTB: StringPair = { label: \"MystB\", drain: 1 };\n  static readonly MYSTBDOUBLE: StringPair = { label: \"MystB *2\", drain: 2 };\n  static readonly QUARTERMAGIC: StringPair = {\n    label: \"1/4 Magic/Faith\",\n    drain: 2,\n  };\n  static readonly HALFMAGIC: StringPair = {\n    label: \"1/2 Magic/Faith\",\n    drain: 3,\n  };\n  static readonly MAGIC: StringPair = { label: \"Magic/Faith\", drain: 4 };\n  static readonly COLLETERAL: StringPair = {\n    label: \"Collateral Damage based on environment\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDamage.ONEPRMAGIC.label.toLowerCase():\n        return SpellDamage.ONEPRMAGIC;\n      case SpellDamage.TWOPRMAGIC.label.toLowerCase():\n        return SpellDamage.TWOPRMAGIC;\n      case SpellDamage.THREEPRMAGIC.label.toLowerCase():\n        return SpellDamage.THREEPRMAGIC;\n      case SpellDamage.FOURPRMAGIC.label.toLowerCase():\n        return SpellDamage.FOURPRMAGIC;\n      case SpellDamage.FIVEPRMAGIC.label.toLowerCase():\n        return SpellDamage.FIVEPRMAGIC;\n      case SpellDamage.ONE.label.toLowerCase():\n        return SpellDamage.ONE;\n      case SpellDamage.TWO.label.toLowerCase():\n        return SpellDamage.TWO;\n      case SpellDamage.THREE.label.toLowerCase():\n        return SpellDamage.THREE;\n      case SpellDamage.FOUR.label.toLowerCase():\n        return SpellDamage.FOUR;\n      case SpellDamage.FIVE.label.toLowerCase():\n        return SpellDamage.FIVE;\n      case SpellDamage.ONEDFOUR.label.toLowerCase():\n        return SpellDamage.ONEDFOUR;\n      case SpellDamage.ONEDSIX.label.toLowerCase():\n        return SpellDamage.ONEDSIX;\n      case SpellDamage.ONEDEIGHT.label.toLowerCase():\n        return SpellDamage.ONEDEIGHT;\n      case SpellDamage.ONEDTEN.label.toLowerCase():\n        return SpellDamage.ONEDTEN;\n      case SpellDamage.ONEDTWELVE.label.toLowerCase():\n        return SpellDamage.ONEDTWELVE;\n      case SpellDamage.ONEDTWENTY.label.toLowerCase():\n        return SpellDamage.ONEDTWENTY;\n      case SpellDamage.TWODFOUR.label.toLowerCase():\n        return SpellDamage.TWODFOUR;\n      case SpellDamage.TWODSIX.label.toLowerCase():\n        return SpellDamage.TWODSIX;\n      case SpellDamage.TWODEIGHT.label.toLowerCase():\n        return SpellDamage.TWODEIGHT;\n      case SpellDamage.TWODTEN.label.toLowerCase():\n        return SpellDamage.TWODTEN;\n      case SpellDamage.TWODTWELVE.label.toLowerCase():\n        return SpellDamage.TWODTWELVE;\n      case SpellDamage.TWODTWENTY.label.toLowerCase():\n        return SpellDamage.TWODTWENTY;\n      case SpellDamage.THREEDFOUR.label.toLowerCase():\n        return SpellDamage.THREEDFOUR;\n      case SpellDamage.THREEDSIX.label.toLowerCase():\n        return SpellDamage.THREEDSIX;\n      case SpellDamage.THREEDEIGHT.label.toLowerCase():\n        return SpellDamage.THREEDEIGHT;\n      case SpellDamage.THREEDTEN.label.toLowerCase():\n        return SpellDamage.THREEDTEN;\n      case SpellDamage.THREEDTWELVE.label.toLowerCase():\n        return SpellDamage.THREEDTWELVE;\n      case SpellDamage.FOURDFOUR.label.toLowerCase():\n        return SpellDamage.FOURDFOUR;\n      case SpellDamage.FOURDSIX.label.toLowerCase():\n        return SpellDamage.FOURDSIX;\n      case SpellDamage.FOURDEIGHT.label.toLowerCase():\n        return SpellDamage.FOURDEIGHT;\n      case SpellDamage.FOURDTEN.label.toLowerCase():\n        return SpellDamage.FOURDTEN;\n      case SpellDamage.FIVEDFOUR.label.toLowerCase():\n        return SpellDamage.FIVEDFOUR;\n      case SpellDamage.FIVEDSIX.label.toLowerCase():\n        return SpellDamage.FIVEDSIX;\n      case SpellDamage.FIVEDEIGHT.label.toLowerCase():\n        return SpellDamage.FIVEDEIGHT;\n      case SpellDamage.SIXDFOUR.label.toLowerCase():\n        return SpellDamage.SIXDFOUR;\n      case SpellDamage.MYSTB.label.toLowerCase():\n        return SpellDamage.MYSTB;\n      case SpellDamage.MYSTBDOUBLE.label.toLowerCase():\n        return SpellDamage.MYSTBDOUBLE;\n      case SpellDamage.QUARTERMAGIC.label.toLowerCase():\n        return SpellDamage.QUARTERMAGIC;\n      case SpellDamage.HALFMAGIC.label.toLowerCase():\n        return SpellDamage.HALFMAGIC;\n      case SpellDamage.MAGIC.label.toLowerCase():\n        return SpellDamage.MAGIC;\n      case SpellDamage.COLLETERAL.label.toLowerCase():\n        return SpellDamage.COLLETERAL;\n      default:\n        return SpellDamage.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDamage.NONE.label,\n      SpellDamage.ONEPRMAGIC.label,\n      SpellDamage.TWOPRMAGIC.label,\n      SpellDamage.THREEPRMAGIC.label,\n      SpellDamage.FOURPRMAGIC.label,\n      SpellDamage.FIVEPRMAGIC.label,\n      SpellDamage.ONE.label,\n      SpellDamage.TWO.label,\n      SpellDamage.THREE.label,\n      SpellDamage.FOUR.label,\n      SpellDamage.FIVE.label,\n      SpellDamage.ONEDFOUR.label,\n      SpellDamage.ONEDSIX.label,\n      SpellDamage.ONEDEIGHT.label,\n      SpellDamage.ONEDTEN.label,\n      SpellDamage.ONEDTWELVE.label,\n      SpellDamage.ONEDTWENTY.label,\n      SpellDamage.TWODFOUR.label,\n      SpellDamage.TWODSIX.label,\n      SpellDamage.TWODEIGHT.label,\n      SpellDamage.TWODTEN.label,\n      SpellDamage.TWODTWELVE.label,\n      SpellDamage.TWODTWENTY.label,\n      SpellDamage.THREEDFOUR.label,\n      SpellDamage.THREEDSIX.label,\n      SpellDamage.THREEDEIGHT.label,\n      SpellDamage.THREEDTEN.label,\n      SpellDamage.THREEDTWELVE.label,\n      SpellDamage.FOURDFOUR.label,\n      SpellDamage.FOURDSIX.label,\n      SpellDamage.FOURDEIGHT.label,\n      SpellDamage.FOURDTEN.label,\n      SpellDamage.FIVEDFOUR.label,\n      SpellDamage.FIVEDSIX.label,\n      SpellDamage.FIVEDEIGHT.label,\n      SpellDamage.SIXDFOUR.label,\n      SpellDamage.MYSTB.label,\n      SpellDamage.MYSTBDOUBLE.label,\n      SpellDamage.QUARTERMAGIC.label,\n      SpellDamage.HALFMAGIC.label,\n      SpellDamage.MAGIC.label,\n      SpellDamage.COLLETERAL.label,\n    ];\n  };\n}\n\nexport class SpellAoeRadius {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONEMETER: StringPair = { label: \"1 Meter\", drain: -1 };\n  static readonly TWOMETER: StringPair = { label: \"2 Meter\", drain: 0 };\n  static readonly THREEMETER: StringPair = { label: \"3 Meter\", drain: 1 };\n  static readonly FOURMETER: StringPair = { label: \"4 Meter\", drain: 2 };\n  static readonly FIVEMETER: StringPair = { label: \"5 Meter\", drain: 2 };\n  static readonly SIXMETER: StringPair = { label: \"6 Meter\", drain: 3 };\n  static readonly SEVENMETER: StringPair = { label: \"7 Meter\", drain: 3 };\n  static readonly EIGHTMETER: StringPair = { label: \"8 Meter\", drain: 4 };\n  static readonly NINEMETER: StringPair = { label: \"9 Meter\", drain: 4 };\n  static readonly TENMETER: StringPair = { label: \"10 Meter\", drain: 5 };\n  static readonly HALFMAGICMETER: StringPair = {\n    label: \"1/2 Magic/Faith Meter\",\n    drain: 2,\n  };\n  static readonly MAGICMETER: StringPair = {\n    label: \"Magic/Faith Meters\",\n    drain: 3,\n  };\n  static readonly DOUBLEMAGICMETER: StringPair = {\n    label: \"Magic/Faith *2 Meters\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellAoeRadius.ONEMETER.label.toLowerCase():\n        return SpellAoeRadius.ONEMETER;\n      case SpellAoeRadius.TWOMETER.label.toLowerCase():\n        return SpellAoeRadius.TWOMETER;\n      case SpellAoeRadius.THREEMETER.label.toLowerCase():\n        return SpellAoeRadius.THREEMETER;\n      case SpellAoeRadius.FOURMETER.label.toLowerCase():\n        return SpellAoeRadius.FOURMETER;\n      case SpellAoeRadius.FIVEMETER.label.toLowerCase():\n        return SpellAoeRadius.FIVEMETER;\n      case SpellAoeRadius.SIXMETER.label.toLowerCase():\n        return SpellAoeRadius.SIXMETER;\n      case SpellAoeRadius.SEVENMETER.label.toLowerCase():\n        return SpellAoeRadius.SEVENMETER;\n      case SpellAoeRadius.EIGHTMETER.label.toLowerCase():\n        return SpellAoeRadius.EIGHTMETER;\n      case SpellAoeRadius.NINEMETER.label.toLowerCase():\n        return SpellAoeRadius.NINEMETER;\n      case SpellAoeRadius.TENMETER.label.toLowerCase():\n        return SpellAoeRadius.TENMETER;\n      case SpellAoeRadius.HALFMAGICMETER.label.toLowerCase():\n        return SpellAoeRadius.HALFMAGICMETER;\n      case SpellAoeRadius.MAGICMETER.label.toLowerCase():\n        return SpellAoeRadius.MAGICMETER;\n      case SpellAoeRadius.DOUBLEMAGICMETER.label.toLowerCase():\n        return SpellAoeRadius.DOUBLEMAGICMETER;\n      default:\n        return SpellAoeRadius.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellAoeRadius.NONE.label,\n      SpellAoeRadius.ONEMETER.label,\n      SpellAoeRadius.TWOMETER.label,\n      SpellAoeRadius.THREEMETER.label,\n      SpellAoeRadius.FOURMETER.label,\n      SpellAoeRadius.FIVEMETER.label,\n      SpellAoeRadius.SIXMETER.label,\n      SpellAoeRadius.SEVENMETER.label,\n      SpellAoeRadius.EIGHTMETER.label,\n      SpellAoeRadius.NINEMETER.label,\n      SpellAoeRadius.TENMETER.label,\n      SpellAoeRadius.HALFMAGICMETER.label,\n      SpellAoeRadius.MAGICMETER.label,\n      SpellAoeRadius.DOUBLEMAGICMETER.label,\n    ];\n  };\n}\n\nexport class SpellLosRange {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly HALFMAGIC: StringPair = {\n    label: \"1/2 Magic/Faith meters\",\n    drain: -1,\n  };\n  static readonly ONEMAGIC: StringPair = {\n    label: \"Magic/Faith meters\",\n    drain: -1,\n  };\n  static readonly TWOMAGIC: StringPair = {\n    label: \"Magic/Faith *2 meters\",\n    drain: 0,\n  };\n  static readonly THREEMAGIC: StringPair = {\n    label: \"Magic/Faith *3 meters\",\n    drain: 1,\n  };\n  static readonly FOURMAGIC: StringPair = {\n    label: \"Magic/Faith *4 meters\",\n    drain: 2,\n  };\n  static readonly FIVEMAGIC: StringPair = {\n    label: \"Magic/Faith *5 meters\",\n    drain: 3,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellLosRange.HALFMAGIC.label.toLowerCase():\n        return SpellLosRange.HALFMAGIC;\n      case SpellLosRange.ONEMAGIC.label.toLowerCase():\n        return SpellLosRange.ONEMAGIC;\n      case SpellLosRange.TWOMAGIC.label.toLowerCase():\n        return SpellLosRange.TWOMAGIC;\n      case SpellLosRange.THREEMAGIC.label.toLowerCase():\n        return SpellLosRange.THREEMAGIC;\n      case SpellLosRange.FOURMAGIC.label.toLowerCase():\n        return SpellLosRange.FOURMAGIC;\n      case SpellLosRange.FIVEMAGIC.label.toLowerCase():\n        return SpellLosRange.FIVEMAGIC;\n      default:\n        return SpellLosRange.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellLosRange.NONE.label,\n      SpellLosRange.HALFMAGIC.label,\n      SpellLosRange.ONEMAGIC.label,\n      SpellLosRange.TWOMAGIC.label,\n      SpellLosRange.THREEMAGIC.label,\n      SpellLosRange.FOURMAGIC.label,\n      SpellLosRange.FIVEMAGIC.label,\n    ];\n  };\n}\n\nexport class SpellProjectileNumber {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly ONE: StringPair = { label: \"1\", drain: 1 };\n  static readonly TWO: StringPair = { label: \"2\", drain: 2 };\n  static readonly THREE: StringPair = { label: \"3\", drain: 4 };\n  static readonly FOUR: StringPair = { label: \"4\", drain: 6 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 8 };\n  static readonly SCALING: StringPair = {\n    label: \"Scaling / Variable\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellProjectileNumber.ONE.label.toLowerCase():\n        return SpellProjectileNumber.ONE;\n      case SpellProjectileNumber.TWO.label.toLowerCase():\n        return SpellProjectileNumber.TWO;\n      case SpellProjectileNumber.THREE.label.toLowerCase():\n        return SpellProjectileNumber.THREE;\n      case SpellProjectileNumber.FOUR.label.toLowerCase():\n        return SpellProjectileNumber.FOUR;\n      case SpellProjectileNumber.FIVE.label.toLowerCase():\n        return SpellProjectileNumber.FIVE;\n      case SpellProjectileNumber.SCALING.label.toLowerCase():\n        return SpellProjectileNumber.SCALING;\n      default:\n        return SpellProjectileNumber.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellProjectileNumber.NONE.label,\n      SpellProjectileNumber.ONE.label,\n      SpellProjectileNumber.TWO.label,\n      SpellProjectileNumber.THREE.label,\n      SpellProjectileNumber.FOUR.label,\n      SpellProjectileNumber.FIVE.label,\n      SpellProjectileNumber.SCALING.label,\n    ];\n  };\n}\n\nexport class SpellProjectileType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly BALL: StringPair = { label: \"Ball\", drain: -1 };\n  static readonly MISSILE: StringPair = { label: \"Missile\", drain: 0 };\n  static readonly BOLT: StringPair = { label: \"Bolt\", drain: 0 };\n  static readonly RAY: StringPair = { label: \"Ray\", drain: 1 };\n  static readonly SPRAY: StringPair = { label: \"Spray\", drain: 0 };\n  static readonly LASSO: StringPair = { label: \"Lasso\", drain: 1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellProjectileType.BALL.label.toLowerCase():\n        return SpellProjectileType.BALL;\n      case SpellProjectileType.MISSILE.label.toLowerCase():\n        return SpellProjectileType.MISSILE;\n      case SpellProjectileType.BOLT.label.toLowerCase():\n        return SpellProjectileType.BOLT;\n      case SpellProjectileType.RAY.label.toLowerCase():\n        return SpellProjectileType.RAY;\n      case SpellProjectileType.SPRAY.label.toLowerCase():\n        return SpellProjectileType.SPRAY;\n      case SpellProjectileType.LASSO.label.toLowerCase():\n        return SpellProjectileType.LASSO;\n      default:\n        return SpellProjectileType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellProjectileType.NONE.label,\n      SpellProjectileType.BALL.label,\n      SpellProjectileType.MISSILE.label,\n      SpellProjectileType.BOLT.label,\n      SpellProjectileType.RAY.label,\n      SpellProjectileType.SPRAY.label,\n      SpellProjectileType.LASSO.label,\n    ];\n  };\n}\n\nexport class SpellTargetingType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly DIRECTTARGET: StringPair = {\n    label: \"Direct Target\",\n    drain: 0,\n  };\n  static readonly AURATARGETING: StringPair = {\n    label: \"Aura Targeting\",\n    drain: 2,\n  };\n  static readonly INDIRECTTARGETING: StringPair = {\n    label: \"Indirect Targeting\",\n    drain: 1,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellTargetingType.DIRECTTARGET.label.toLowerCase():\n        return SpellTargetingType.DIRECTTARGET;\n      case SpellTargetingType.AURATARGETING.label.toLowerCase():\n        return SpellTargetingType.AURATARGETING;\n      case SpellTargetingType.INDIRECTTARGETING.label.toLowerCase():\n        return SpellTargetingType.INDIRECTTARGETING;\n      default:\n        return SpellTargetingType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellTargetingType.NONE.label,\n      SpellTargetingType.DIRECTTARGET.label,\n      SpellTargetingType.AURATARGETING.label,\n      SpellTargetingType.INDIRECTTARGETING.label,\n    ];\n  };\n}\n\nexport class SpellCastTime {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly FOURMYSTBROUNDS: StringPair = {\n    label: \"4 - Mystb Rounds\",\n    drain: 2,\n  };\n  static readonly NINETHREE: StringPair = { label: \"9 + 3\", drain: -4 };\n  static readonly NINETHREECHANNEL: StringPair = {\n    label: \"9 + 3 (Channel)\",\n    drain: -3,\n  };\n  static readonly SEVENTHREE: StringPair = { label: \"7 + 3\", drain: -1 };\n  static readonly FIVETHREE: StringPair = { label: \"5 + 3\", drain: 1 };\n  static readonly FIVE: StringPair = { label: \"5\", drain: 4 };\n  static readonly DRAINCHENNEL: StringPair = {\n    label: \"Drain (Channel)\",\n    drain: -3,\n  };\n  static readonly DRAINTHREE: StringPair = { label: \"Drain + 3\", drain: -2 };\n  static readonly MAGIFAITHHOURS: StringPair = {\n    label: \"24/MagiFaith Hours\",\n    drain: 0,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellCastTime.FOURMYSTBROUNDS.label.toLowerCase():\n        return SpellCastTime.FOURMYSTBROUNDS;\n      case SpellCastTime.NINETHREE.label.toLowerCase():\n        return SpellCastTime.NINETHREE;\n      case SpellCastTime.NINETHREECHANNEL.label.toLowerCase():\n        return SpellCastTime.NINETHREECHANNEL;\n      case SpellCastTime.SEVENTHREE.label.toLowerCase():\n        return SpellCastTime.SEVENTHREE;\n      case SpellCastTime.FIVETHREE.label.toLowerCase():\n        return SpellCastTime.FIVETHREE;\n      case SpellCastTime.FIVE.label.toLowerCase():\n        return SpellCastTime.FIVE;\n      case SpellCastTime.DRAINCHENNEL.label.toLowerCase():\n        return SpellCastTime.DRAINCHENNEL;\n      case SpellCastTime.DRAINTHREE.label.toLowerCase():\n        return SpellCastTime.DRAINTHREE;\n      case SpellCastTime.MAGIFAITHHOURS.label.toLowerCase():\n        return SpellCastTime.MAGIFAITHHOURS;\n      default:\n        return SpellCastTime.NONE;\n    }\n  };\n  static getAllPhysical = (): string[] => {\n    return [\n      SpellCastTime.NONE.label,\n      SpellCastTime.FOURMYSTBROUNDS.label,\n      SpellCastTime.NINETHREE.label,\n      SpellCastTime.NINETHREECHANNEL.label,\n      SpellCastTime.SEVENTHREE.label,\n      SpellCastTime.FIVETHREE.label,\n      SpellCastTime.FIVE.label,\n      SpellCastTime.DRAINCHENNEL.label,\n      SpellCastTime.DRAINTHREE.label,\n      SpellCastTime.MAGIFAITHHOURS.label,\n    ];\n  };\n  static getAllStun = (): string[] => {\n    return [\n      SpellCastTime.NONE.label,\n      SpellCastTime.FOURMYSTBROUNDS.label,\n      SpellCastTime.NINETHREE.label,\n      SpellCastTime.NINETHREECHANNEL.label,\n      SpellCastTime.SEVENTHREE.label,\n      SpellCastTime.FIVETHREE.label,\n      SpellCastTime.FIVE.label,\n      SpellCastTime.MAGIFAITHHOURS.label,\n    ];\n  };\n}\n\nexport class SpellLevel {\n  static readonly NONE: NumberPair = {\n    label: 0,\n    drain: 0,\n  };\n  static readonly ONE: NumberPair = { label: 1, drain: -4 };\n  static readonly TWO: NumberPair = { label: 2, drain: -3 };\n  static readonly THREE: NumberPair = { label: 3, drain: -2 };\n  static readonly FOUR: NumberPair = { label: 4, drain: -1 };\n  static readonly FIVE: NumberPair = { label: 5, drain: 0 };\n  static readonly SIX: NumberPair = { label: 6, drain: 1 };\n  static readonly SEVEN: NumberPair = { label: 7, drain: 2 };\n  static readonly EIGHT: NumberPair = { label: 8, drain: 3 };\n  static readonly NINE: NumberPair = { label: 9, drain: 4 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): NumberPair => {\n    switch (+label) {\n      case SpellLevel.ONE.label:\n        return SpellLevel.ONE;\n      case SpellLevel.TWO.label:\n        return SpellLevel.TWO;\n      case SpellLevel.THREE.label:\n        return SpellLevel.THREE;\n      case SpellLevel.FOUR.label:\n        return SpellLevel.FOUR;\n      case SpellLevel.FIVE.label:\n        return SpellLevel.FIVE;\n      case SpellLevel.SIX.label:\n        return SpellLevel.SIX;\n      case SpellLevel.SEVEN.label:\n        return SpellLevel.SEVEN;\n      case SpellLevel.EIGHT.label:\n        return SpellLevel.EIGHT;\n      case SpellLevel.NINE.label:\n        return SpellLevel.NINE;\n      default:\n        return SpellLevel.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellLevel.NONE.label + \"\",\n      SpellLevel.ONE.label + \"\",\n      SpellLevel.TWO.label + \"\",\n      SpellLevel.THREE.label + \"\",\n      SpellLevel.FOUR.label + \"\",\n      SpellLevel.FIVE.label + \"\",\n      SpellLevel.SIX.label + \"\",\n      SpellLevel.SEVEN.label + \"\",\n      SpellLevel.EIGHT.label + \"\",\n      SpellLevel.NINE.label + \"\",\n    ];\n  };\n}\n\nexport class SpellSource {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly EARTH: StringPair = { label: \"earth\", drain: 0 };\n  static readonly FROST: StringPair = { label: \"frost\", drain: 0 };\n  static readonly AIR: StringPair = { label: \"air\", drain: 0 };\n  static readonly FIRE: StringPair = { label: \"fire\", drain: 0 };\n  static readonly ARCANE: StringPair = { label: \"arcane\", drain: 1 };\n  static readonly DIVINE: StringPair = { label: \"divine\", drain: 0 };\n  static readonly DEMONIC: StringPair = { label: \"demonic\", drain: 0 };\n  static readonly DRUIDIC: StringPair = { label: \"druidic\", drain: 0 };\n  static readonly PSYCHIC: StringPair = { label: \"psychic\", drain: 0 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSource.EARTH.label.toLowerCase():\n        return SpellSource.EARTH;\n      case SpellSource.FROST.label.toLowerCase():\n        return SpellSource.FROST;\n      case SpellSource.AIR.label.toLowerCase():\n        return SpellSource.AIR;\n      case SpellSource.FIRE.label.toLowerCase():\n        return SpellSource.FIRE;\n      case SpellSource.ARCANE.label.toLowerCase():\n        return SpellSource.ARCANE;\n      case SpellSource.DIVINE.label.toLowerCase():\n        return SpellSource.DIVINE;\n      case SpellSource.DEMONIC.label.toLowerCase():\n        return SpellSource.DEMONIC;\n      case SpellSource.DRUIDIC.label.toLowerCase():\n        return SpellSource.DRUIDIC;\n      case SpellSource.PSYCHIC.label.toLowerCase():\n        return SpellSource.PSYCHIC;\n      default:\n        return SpellSource.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSource.NONE.label,\n      SpellSource.EARTH.label,\n      SpellSource.FROST.label,\n      SpellSource.AIR.label,\n      SpellSource.FIRE.label,\n      SpellSource.ARCANE.label,\n      SpellSource.DIVINE.label,\n      SpellSource.DEMONIC.label,\n      SpellSource.DRUIDIC.label,\n      SpellSource.PSYCHIC.label,\n    ];\n  };\n}\n\nexport class SpellRange {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly TOUCH: StringPair = { label: \"touch\", drain: 1 };\n  static readonly SONIC: StringPair = { label: \"sonic\", drain: 1 };\n  static readonly RADIUS: StringPair = {\n    label: \"Radius 90° around Caster\",\n    drain: 1,\n  };\n  static readonly RADIUSPLUS: StringPair = {\n    label: \"Radius 90°+ around Caster\",\n    drain: 2,\n  };\n  static readonly LOSAURA: StringPair = {\n    label: \"Line of Sight Aura or Projectile\",\n    drain: 1,\n  };\n  static readonly LOSMANIPULATE: StringPair = {\n    label: \"Line of Sight Manipulate\",\n    drain: 3,\n  };\n  static readonly LOSPOINT: StringPair = {\n    label: \"Line of Sight Spawn At Point\",\n    drain: 4,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellRange.TOUCH.label.toLowerCase():\n        return SpellRange.TOUCH;\n      case SpellRange.SONIC.label.toLowerCase():\n        return SpellRange.SONIC;\n      case SpellRange.RADIUS.label.toLowerCase():\n        return SpellRange.RADIUS;\n      case SpellRange.RADIUSPLUS.label.toLowerCase():\n        return SpellRange.RADIUSPLUS;\n      case SpellRange.LOSAURA.label.toLowerCase():\n        return SpellRange.LOSAURA;\n      case SpellRange.LOSMANIPULATE.label.toLowerCase():\n        return SpellRange.LOSMANIPULATE;\n      case SpellRange.LOSPOINT.label.toLowerCase():\n        return SpellRange.LOSPOINT;\n      default:\n        return SpellRange.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellRange.NONE.label,\n      SpellRange.TOUCH.label,\n      SpellRange.SONIC.label,\n      SpellRange.RADIUS.label,\n      SpellRange.RADIUSPLUS.label,\n      SpellRange.LOSAURA.label,\n      SpellRange.LOSMANIPULATE.label,\n      SpellRange.LOSPOINT.label,\n    ];\n  };\n}\n\nexport class SpellRite {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly VERBAL: StringPair = { label: \"verbal\", drain: 2 };\n  static readonly SOMATIC: StringPair = { label: \"somatic\", drain: 1 };\n  static readonly MENTAL: StringPair = { label: \"mental\", drain: 3 };\n  static readonly RITUAL: StringPair = { label: \"ritual\", drain: 3 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellRite.VERBAL.label.toLowerCase():\n        return SpellRite.VERBAL;\n      case SpellRite.SOMATIC.label.toLowerCase():\n        return SpellRite.SOMATIC;\n      case SpellRite.MENTAL.label.toLowerCase():\n        return SpellRite.MENTAL;\n      case SpellRite.RITUAL.label.toLowerCase():\n        return SpellRite.RITUAL;\n      default:\n        return SpellRite.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellRite.NONE.label,\n      SpellRite.VERBAL.label,\n      SpellRite.SOMATIC.label,\n      SpellRite.MENTAL.label,\n      SpellRite.RITUAL.label,\n    ];\n  };\n}\n\nexport class SpellTarget {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly SINGLE: StringPair = { label: \"Single Target\", drain: 1 };\n  static readonly DAOE: StringPair = {\n    label: \"Diminishing Area Of Effect \",\n    drain: 1,\n  };\n  static readonly MULTI: StringPair = {\n    label: \"Multiple Targets\",\n    drain: 4,\n  };\n  static readonly AOE: StringPair = {\n    label: \"Area Of Effect\",\n    drain: 2,\n  };\n  static readonly CASTER: StringPair = {\n    label: \"Caster\",\n    drain: 3,\n  };\n  static readonly TARGET: StringPair = {\n    label: \"Caster Or Target\",\n    drain: 3,\n  };\n  static readonly LINE: StringPair = {\n    label: \"Straight Line\",\n    drain: 2,\n  };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellTarget.SINGLE.label.toLowerCase():\n        return SpellTarget.SINGLE;\n      case SpellTarget.DAOE.label.toLowerCase():\n        return SpellTarget.DAOE;\n      case SpellTarget.MULTI.label.toLowerCase():\n        return SpellTarget.MULTI;\n      case SpellTarget.AOE.label.toLowerCase():\n        return SpellTarget.AOE;\n      case SpellTarget.CASTER.label.toLowerCase():\n        return SpellTarget.CASTER;\n      case SpellTarget.TARGET.label.toLowerCase():\n        return SpellTarget.TARGET;\n      case SpellTarget.LINE.label.toLowerCase():\n        return SpellTarget.LINE;\n      default:\n        return SpellTarget.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellTarget.NONE.label,\n      SpellTarget.SINGLE.label,\n      SpellTarget.MULTI.label,\n      SpellTarget.AOE.label,\n      SpellTarget.DAOE.label,\n      SpellTarget.TARGET.label,\n      SpellTarget.CASTER.label,\n      SpellTarget.LINE.label,\n    ];\n  };\n}\n\nexport class SpellDuration {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly CONCENTRATION: StringPair = {\n    label: \"concentration\",\n    drain: 0,\n  };\n  static readonly INSTANTANEOUS: StringPair = {\n    label: \"instantaneous\",\n    drain: 1,\n  };\n  static readonly PERMANENT: StringPair = { label: \"permanent\", drain: 1 };\n  static readonly FIXEDTICKS: StringPair = {\n    label: \"fixed # of ticks\",\n    drain: 1,\n  };\n  static readonly FIXEDROUNDS: StringPair = {\n    label: \"fixed # of rounds\",\n    drain: 2,\n  };\n  static readonly FIXEDHOURS: StringPair = {\n    label: \"fixed # of hours\",\n    drain: 2,\n  };\n  static readonly CHANNEL: StringPair = { label: \"channel\", drain: -1 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDuration.CONCENTRATION.label.toLowerCase():\n        return SpellDuration.CONCENTRATION;\n      case SpellDuration.INSTANTANEOUS.label.toLowerCase():\n        return SpellDuration.INSTANTANEOUS;\n      case SpellDuration.PERMANENT.label.toLowerCase():\n        return SpellDuration.PERMANENT;\n      case SpellDuration.FIXEDTICKS.label.toLowerCase():\n        return SpellDuration.FIXEDTICKS;\n      case SpellDuration.FIXEDROUNDS.label.toLowerCase():\n        return SpellDuration.FIXEDROUNDS;\n      case SpellDuration.FIXEDHOURS.label.toLowerCase():\n        return SpellDuration.FIXEDHOURS;\n      case SpellDuration.CHANNEL.label.toLowerCase():\n        return SpellDuration.CHANNEL;\n      default:\n        return SpellDuration.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDuration.NONE.label,\n      SpellDuration.CONCENTRATION.label,\n      SpellDuration.FIXEDTICKS.label,\n      SpellDuration.FIXEDROUNDS.label,\n      SpellDuration.FIXEDHOURS.label,\n      SpellDuration.CHANNEL.label,\n      SpellDuration.INSTANTANEOUS.label,\n      SpellDuration.PERMANENT.label,\n    ];\n  };\n}\n\nexport class SpellSchool {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly TRANSMUTATION: StringPair = {\n    label: \"Transmutation\",\n    drain: 1,\n  };\n  static readonly EVOCATION: StringPair = { label: \"Evocation\", drain: 0 };\n  static readonly FORTIFICATION: StringPair = {\n    label: \"Fortification\",\n    drain: 1,\n  };\n  static readonly HEX: StringPair = { label: \"Hex\", drain: 1 };\n  static readonly ILLUSION: StringPair = { label: \"Illusion\", drain: 1 };\n  static readonly CONJURATION: StringPair = { label: \"Conjuration\", drain: 1 };\n  static readonly NECROMANCY: StringPair = { label: \"Necromancy\", drain: 1 };\n  static readonly ENCHANTMENT: StringPair = { label: \"Enchantment\", drain: 2 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellSchool.FORTIFICATION.label.toLowerCase():\n        return SpellSchool.FORTIFICATION;\n      case SpellSchool.HEX.label.toLowerCase():\n        return SpellSchool.HEX;\n      case SpellSchool.ILLUSION.label.toLowerCase():\n        return SpellSchool.ILLUSION;\n      case SpellSchool.NECROMANCY.label.toLowerCase():\n        return SpellSchool.NECROMANCY;\n      case SpellSchool.TRANSMUTATION.label.toLowerCase():\n        return SpellSchool.TRANSMUTATION;\n      case SpellSchool.CONJURATION.label.toLowerCase():\n        return SpellSchool.CONJURATION;\n      case SpellSchool.EVOCATION.label.toLowerCase():\n        return SpellSchool.EVOCATION;\n      case SpellSchool.ENCHANTMENT.label.toLowerCase():\n        return SpellSchool.ENCHANTMENT;\n      default:\n        return SpellSchool.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellSchool.NONE.label,\n      SpellSchool.CONJURATION.label,\n      SpellSchool.EVOCATION.label,\n      SpellSchool.FORTIFICATION.label,\n      SpellSchool.HEX.label,\n      SpellSchool.ILLUSION.label,\n      SpellSchool.NECROMANCY.label,\n      SpellSchool.TRANSMUTATION.label,\n      SpellSchool.ENCHANTMENT.label,\n    ];\n  };\n}\n\nexport class SpellDrainType {\n  static readonly NONE: StringPair = {\n    label: \"\",\n    drain: 0,\n  };\n  static readonly STUN: StringPair = { label: \"Stun\", drain: 0 };\n  static readonly PHYSICAL: StringPair = { label: \"Physical\", drain: -7 };\n\n  private constructor(\n    private readonly label: string,\n    public readonly drain: number\n  ) {}\n\n  static find = (label: string): StringPair => {\n    switch (label?.toLowerCase().trim()) {\n      case SpellDrainType.STUN.label.toLowerCase():\n        return SpellDrainType.STUN;\n      case SpellDrainType.PHYSICAL.label.toLowerCase():\n        return SpellDrainType.PHYSICAL;\n      default:\n        return SpellDrainType.NONE;\n    }\n  };\n  static getAll = (): string[] => {\n    return [\n      SpellDrainType.NONE.label,\n      SpellDrainType.STUN.label,\n      SpellDrainType.PHYSICAL.label,\n    ];\n  };\n}\n","export const rollCommand = (\n  commands: string,\n  krit?: boolean\n): { result: number; text: string; rolls: string } => {\n  let result = 0;\n  let text = \"\";\n\n  let newCommands = \"\";\n  commands.split(\" \").forEach((command) => {\n    if (/\\d+/g.test(command)) {\n      newCommands += command;\n    } else {\n      text += \" \" + command;\n    }\n  });\n  newCommands = newCommands.trim();\n\n  let rolls: string = \"(`\";\n  newCommands.split(\" \").forEach((fullCommand: string) => {\n    let commandSplits: string[] = [];\n    fullCommand.split(\"+\").forEach((part) => {\n      let split = part.split(\"-\");\n      commandSplits = commandSplits.concat(split);\n    });\n\n    commandSplits.forEach((command: string) => {\n      let multiplier: number = 1;\n      if (command.includes(\"d\")) {\n        if (!command.startsWith(\"d\")) {\n          multiplier = parseInt(command.split(\"d\")[0]);\n          command = command.split(\"d\")[1];\n        }\n        command = command.replaceAll(\"d\", \"\");\n        if (krit) multiplier = multiplier * 2;\n\n        if (command.includes(\"+\")) {\n          const com = command.split(\"+\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result += parseInt(com[1]);\n        } else if (command.includes(\"-\")) {\n          const com = command.split(\"-\");\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(com[0]));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n          result -= parseInt(com[1]);\n        } else {\n          for (let i = 0; i < multiplier; i++) {\n            const newRoll = rollDie(parseInt(command));\n            result += newRoll;\n            rolls += newRoll + \",\";\n          }\n        }\n      } else {\n        result += parseInt(command);\n        rolls += command + \",\";\n      }\n    });\n    rolls = rolls.slice(0, -1) + \"`)\";\n  });\n\n  return { result: result, text: text, rolls: rolls };\n};\n\nexport const rollDie = (size: number): number => {\n  const min = 1;\n  const max = size;\n  let rand = Math.round(min + Math.random() * (max - min));\n  return rand;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiError, BiHistory } from \"react-icons/bi\";\nimport { GiDiceTwentyFacesTwenty, GiSwordsPower } from \"react-icons/gi\";\nimport { recivePromiseByAttributeCount } from \"../../services/DatabaseService\";\n\ninterface $Props {\n  type: string;\n  name: string;\n}\n\nconst LinkCheck = ({ type, name }: $Props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [entitiyFound, setEntity] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (type === \"dice\") {\n      setEntity(true);\n      setLoading(false);\n    } else {\n      let newType = type + \"s\";\n      if (type === \"class\" || type === \"subclass\") newType = type + \"es\";\n      recivePromiseByAttributeCount(newType, \"name\", name)\n        .then((count: number) => {\n          setEntity(count > 0);\n          setLoading(false);\n        })\n        .catch(() => {\n          setEntity(false);\n          setLoading(false);\n        });\n    }\n  }, [type, name]);\n\n  const formatIcon = (type: string) => {\n    switch (type) {\n      case \"talent\":\n        return <GiSwordsPower />;\n      case \"dice\":\n        return <GiDiceTwentyFacesTwenty />;\n      default:\n        return \"\";\n    }\n  };\n\n  return (\n    <>\n      {loading && <BiHistory />}\n      {!loading && !entitiyFound && <BiError />}\n      {!loading && entitiyFound && <>{formatIcon(type)}</>}\n    </>\n  );\n};\n\nexport default LinkCheck;\n","import IEntity from \"./IEntity\";\n\nexport enum TalentCategory {\n  physical = \"physical\",\n  mental = \"mental\",\n  social = \"social\",\n  magical = \"magical\",\n}\n\nexport default class Talent implements IEntity {\n  id?: number;\n  name: string;\n  category: string;\n  isFlaw: boolean;\n  cost: number;\n  prerequisite: string;\n  effect: string;\n  type: boolean;\n  stress: string;\n  trigger: string;\n  triggerFrequency: string;\n  ticks: number;\n\n  constructor(\n    id?: number,\n    name?: string,\n    category?: string,\n    isFlaw?: boolean,\n    cost?: number,\n    prerequisite?: string,\n    effect?: string,\n    type?: boolean,\n    stress?: string,\n    trigger?: string,\n    triggerFrequency?: string,\n    ticks?: number\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.category = category || TalentCategory.magical;\n    this.isFlaw = isFlaw || false;\n    this.cost = cost || 0;\n    this.prerequisite = prerequisite || \"\";\n    this.effect = effect || \"\";\n    this.type = type || false;\n    this.stress = stress || \"\";\n    this.trigger = trigger || \"\";\n    this.triggerFrequency = triggerFrequency || \"\";\n    this.ticks = ticks || 0;\n  }\n\n  static makeCsv = (talent: Talent): any[] => {\n    return [\n      talent.id,\n      talent.name,\n      talent.category,\n      talent.isFlaw,\n      talent.cost,\n      talent.prerequisite,\n      talent.effect,\n      talent.type,\n      talent.stress,\n      talent.trigger,\n      talent.triggerFrequency,\n      talent.ticks,\n    ];\n  };\n}\n\nexport function isTalent(arg: any): arg is Talent {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const costCheck = arg.cost !== undefined && typeof arg.cost == \"number\";\n  const isFlawCheck =\n    arg.isFlaw !== undefined && typeof arg.isFlaw == \"boolean\";\n  const prerequisiteCheck =\n    arg.prerequisite !== undefined && typeof arg.prerequisite == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const typeCheck = arg.type !== undefined && typeof arg.type == \"boolean\";\n  const stressCheck = arg.stress !== undefined && typeof arg.stress == \"string\";\n  const triggerCheck =\n    arg.trigger !== undefined && typeof arg.trigger == \"string\";\n  const triggerFrequencyCheck =\n    arg.triggerFrequency !== undefined &&\n    typeof arg.triggerFrequency == \"string\";\n  const ticksCheck = arg.ticks !== undefined && typeof arg.ticks == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    costCheck &&\n    isFlawCheck &&\n    prerequisiteCheck &&\n    effectCheck &&\n    typeCheck &&\n    stressCheck &&\n    triggerCheck &&\n    triggerFrequencyCheck &&\n    ticksCheck\n  );\n}\n","import IEntity from \"./IEntity\";\nimport {\n  StringPair,\n  NumberPair,\n  SpellSource,\n  SpellRite,\n  SpellDuration,\n  SpellRange,\n  SpellSchool,\n  SpellTarget,\n  SpellDrainType,\n  SpellLevel,\n  SpellCastTime,\n  SpellScalingEffect,\n  SpellAoeRadius,\n  SpellDirectEffects,\n  SpellProjectileType,\n  SpellProjectileNumber,\n  SpellDamageType,\n  SpellTargetingType,\n  SpellLosRange,\n  SpellSize,\n  SpellPureDamage,\n  SpellHp,\n} from \"./SpellValues\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  source: StringPair;\n  castTime: StringPair;\n  rite: StringPair;\n  duration: StringPair;\n  durationText: string;\n  range: StringPair;\n  school: StringPair;\n  effect: string;\n  damageText: string;\n  mastery: string;\n  resist: string;\n  drain: number;\n  masteryDrain: number;\n\n  drainType: StringPair;\n  scalingEffect: StringPair;\n  spellTarget: StringPair;\n  aoeRadius: StringPair;\n  damage: StringPair[];\n  directEffects: StringPair;\n  level: NumberPair;\n  projectileType: StringPair;\n  projectileNumber: StringPair;\n  damageType: StringPair;\n  targetingType: StringPair;\n  losRange: StringPair;\n  pureDamage: StringPair;\n  size: StringPair;\n  hp: StringPair;\n  chargeable: boolean;\n  needsMaterial: boolean;\n\n  constructor(\n    id?: number,\n    name?: string,\n    source?: StringPair,\n    castTime?: StringPair,\n    rite?: StringPair,\n    duration?: StringPair,\n    durationText?: string,\n    range?: StringPair,\n    school?: StringPair,\n    effect?: string,\n    damageText?: string,\n    mastery?: string,\n    resist?: string,\n    drain?: number,\n    masteryDrain?: number,\n\n    scalingEffect?: StringPair,\n    spellTarget?: StringPair,\n    aoeRadius?: StringPair,\n    damage?: StringPair[],\n    directEffects?: StringPair,\n    level?: NumberPair,\n    projectileType?: StringPair,\n    projectileNumber?: StringPair,\n    damageType?: StringPair,\n    targetingType?: StringPair,\n    losRange?: StringPair,\n    drainType?: StringPair,\n    pureDamage?: StringPair,\n    size?: StringPair,\n    hp?: StringPair,\n    chargeable?: boolean,\n    needsMaterial?: boolean\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.source = source || SpellSource.NONE;\n    this.castTime = castTime || SpellCastTime.NONE;\n    this.rite = rite || SpellRite.NONE;\n    this.duration = duration || SpellDuration.NONE;\n    this.durationText = durationText || \"\";\n    this.range = range || SpellRange.NONE;\n    this.school = school || SpellSchool.NONE;\n    this.effect = effect || \"\";\n    this.damageText = damageText || \"\";\n    this.mastery = mastery || \"\";\n    this.resist = resist || \"\";\n    this.drain = drain || 0;\n    this.masteryDrain = masteryDrain || 0;\n\n    this.scalingEffect = scalingEffect || SpellScalingEffect.NONE;\n    this.spellTarget = spellTarget || SpellTarget.NONE;\n    this.aoeRadius = aoeRadius || SpellAoeRadius.NONE;\n    this.damage = damage || [];\n    this.directEffects = directEffects || SpellDirectEffects.NONE;\n    this.level = level || SpellLevel.NONE;\n    this.projectileType = projectileType || SpellProjectileType.NONE;\n    this.projectileNumber = projectileNumber || SpellProjectileNumber.NONE;\n    this.damageType = damageType || SpellDamageType.NONE;\n    this.targetingType = targetingType || SpellTargetingType.NONE;\n    this.losRange = losRange || SpellLosRange.NONE;\n    this.drainType = drainType || SpellDrainType.NONE;\n    this.pureDamage = pureDamage || SpellPureDamage.NONE;\n    this.size = size || SpellSize.NONE;\n    this.hp = hp || SpellHp.NONE;\n    this.chargeable = chargeable || false;\n    this.needsMaterial = needsMaterial || false;\n  }\n\n  static calcDrain = (spell: Spell): number => {\n    let drain = 0;\n    drain += spell.drainType ? spell.drainType.drain : 0;\n    drain += spell.school ? spell.school.drain : 0;\n    drain += spell.duration ? spell.duration.drain : 0;\n    drain += spell.spellTarget ? spell.spellTarget.drain : 0;\n    drain += spell.rite ? spell.rite.drain : 0;\n    drain += spell.range ? spell.range.drain : 0;\n    drain += spell.source ? spell.source.drain : 0;\n    drain += spell.level ? spell.level.drain : 0;\n    drain += spell.chargeable ? -1 : 0;\n    drain += spell.needsMaterial ? -1 : 0;\n    drain += spell.targetingType ? spell.targetingType.drain : 0;\n    drain += spell.projectileType ? spell.projectileType.drain : 0;\n    drain += spell.projectileNumber ? spell.projectileNumber.drain : 0;\n    drain += spell.losRange ? spell.losRange.drain : 0;\n    drain += spell.aoeRadius ? spell.aoeRadius.drain : 0;\n    drain += spell.damage[0] ? spell.damage[0].drain : 0;\n    drain += spell.damage[1] ? spell.damage[1].drain : 0;\n    drain += spell.damage[2] ? spell.damage[2].drain : 0;\n    drain += spell.damageType ? spell.damageType.drain : 0;\n    drain += spell.scalingEffect ? spell.scalingEffect.drain : 0;\n    drain += spell.directEffects ? spell.directEffects.drain : 0;\n    drain += spell.size ? spell.size.drain : 0;\n    drain += spell.hp ? spell.hp.drain : 0;\n    drain += spell.pureDamage ? spell.pureDamage.drain : 0;\n    return drain;\n  };\n\n  static makeCsv = (spell: Spell): any[] => {\n    return [\n      spell.id,\n      spell.name,\n      spell.source.label,\n      spell.castTime.label,\n      spell.rite.label,\n      spell.duration.label,\n      spell.durationText,\n      spell.range.label,\n      spell.school.label,\n      spell.effect,\n      spell.damageText,\n      spell.mastery,\n      spell.resist,\n      spell.drain,\n      spell.masteryDrain,\n      spell.scalingEffect.label,\n      spell.spellTarget.label,\n      spell.aoeRadius.label,\n      spell.damage[0].label + \", \" +spell.damage[1].label + \", \" +spell.damage[2].label,\n      spell.directEffects.label,\n      spell.level.label,\n      spell.projectileType.label,\n      spell.projectileNumber.label,\n      spell.damageType.label,\n      spell.targetingType.label,\n      spell.losRange.label,\n      spell.drainType.label,\n      spell.pureDamage.label,\n      spell.size.label,\n      spell.hp.label,\n      spell.chargeable,\n      spell.needsMaterial,\n    ];\n  };\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const sourceCheck = arg.source !== undefined && typeof arg.source == \"string\";\n  const castTimeCheck =\n    arg.castTime !== undefined && typeof arg.castTime == \"string\";\n  const riteCheck = arg.rite !== undefined && typeof arg.rite == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const effectCheck = arg.effect !== undefined && typeof arg.effect == \"string\";\n  const damageCheck = arg.damage !== undefined && typeof arg.damage == \"string\";\n  const masteryCheck =\n    arg.mastery !== undefined && typeof arg.mastery == \"string\";\n  const resistCheck = arg.resist !== undefined && typeof arg.resist == \"string\";\n  const drainCheck = arg.drain !== undefined && typeof arg.drain == \"number\";\n\n  return (\n    arg &&\n    nameCheck &&\n    sourceCheck &&\n    castTimeCheck &&\n    riteCheck &&\n    durationCheck &&\n    rangeCheck &&\n    schoolCheck &&\n    effectCheck &&\n    damageCheck &&\n    masteryCheck &&\n    resistCheck &&\n    drainCheck\n  );\n}\n","import IEntity from \"./IEntity\";\n\nexport default class Race implements IEntity {\n  id?: number;\n  name: string;\n  hp: number;\n  abilityModifier: string;\n  size: string;\n  stamina: number;\n  talents: string[];\n  flaws: string[];\n\n  constructor(\n    id?: number,\n    name?: string,\n    hp?: number,\n    abilityModifier?: string,\n    size?: string,\n    stamina?: number,\n    talents?: string[],\n    flaws?: string[]\n  ) {\n    this.id = id;\n    this.name = name || \"\";\n    this.hp = hp || 0;\n    this.abilityModifier = abilityModifier || \"\";\n    this.size = size || \"\";\n    this.stamina = stamina || 0;\n    this.talents = talents || [];\n    this.flaws = flaws || [];\n  }\n\n  static makeCsv = (race: Race): any[] => {\n    return [\n      race.id,\n      race.name,\n      race.hp,\n      race.abilityModifier,\n      race.size,\n      race.stamina,\n      race.talents,\n      race.flaws,\n    ];\n  };\n}\n\nexport function isRace(arg: any): arg is Race {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const hpCheck = arg.hp !== undefined && typeof arg.hp == \"number\";\n  const abilityModifierCheck =\n    arg.abilityModifier !== undefined && typeof arg.abilityModifier == \"number\";\n  const talentsCheck = arg.talents !== undefined && Array.isArray(arg.talents);\n  const flawsCheck = arg.flaws !== undefined && Array.isArray(arg.flaws);\n\n  return (\n    arg &&\n    nameCheck &&\n    hpCheck &&\n    abilityModifierCheck &&\n    talentsCheck &&\n    flawsCheck\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n"],"sourceRoot":""}