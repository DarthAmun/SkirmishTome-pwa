{"version":3,"sources":["../node_modules/peerjs/dist sync","data/Spell.tsx","services/OptionService.tsx","components/form_elements/StringField.tsx","components/p2p/P2PReciver.tsx","components/entities/spells/SpellTile.tsx","components/options/GeneralOptions.tsx","components/p2p/P2PSender.tsx","services/PeerIdService.tsx","components/options/SpellsOptions.tsx","components/form_elements/FileField.tsx","components/form_elements/ImportField.tsx","components/options/DiscordOptions.tsx","components/options/Options.tsx","database/MyDatabase.tsx","services/DatabaseService.tsx","components/general_elements/TabBar.tsx","components/form_elements/IconButton.tsx","components/form_elements/TextButton.tsx"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","isSpell","arg","nameCheck","undefined","name","classesCheck","classes","sourcesCheck","sources","levelCheck","level","schoolCheck","school","timeCheck","time","rangeCheck","range","compCheck","components","durationCheck","duration","ritualCheck","ritual","textCheck","text","picCheck","pic","scanImportFileTest","json","fileName","callback","a","promList","Array","isArray","forEach","obj","push","saveNew","Promise","all","exportAll","filename","reciveAllPromise","spells","window","navigator","msSaveOrOpenBlob","blob","Blob","decodeURIComponent","encodeURI","JSON","stringify","type","document","createElement","download","href","encodeURIComponent","target","body","appendChild","click","removeChild","StringField","value","label","placeholder","icon","transform","onChange","Field","LabelText","Icon","Input","styled","theme","tile","color","backgroundColor","FontAwesomeIcon","main","highlight","div","input","P2PReciver","changeData","reload","useState","peerId","setId","loading","isLoading","error","setError","state","setState","Peer","host","secure","peer","useEffect","conn","connect","on","data","console","log","Loading","faExclamationCircle","TextButton","faCheck","onClick","SpellTile","spell","formatTime","useCallback","split","formatLevel","hasRitual","className","hasConcentration","toLowerCase","includes","formatComponents","words","length","formatDuration","search","replace","trim","getPicture","Tile","to","School","Flag","Level","ImageName","Name","PropWrapper","Prop","faHistory","faHourglassHalf","faPowerOff","rotate","faMortarPestle","WideProp","faUser","faLink","Link","boxShadow","props","headerColor","Image","style","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","ImageElm","Empty","GeneralOptions","useTheme","setTheme","General","OptionSection","SelectionTitle","Button","darkTheme","lightTheme","localStorage","setItem","button","buttons","P2PSender","mode","setName","setPeer","brokerId","min","max","password","characters","i","Math","floor","random","generateBrokerId","newPeer","errorData","send","disconnected","destroyed","reconnect","then","results","SpellsOptions","amount","triggerDeleteAll","setSend","OptionTab","SectionRow","SectionText","IconButton","faFileExport","tableName","reciveAll","entity","faTrashAlt","faPaperPlane","ImportModus","FileField","accept","isMulti","files","multiple","ImportField","modus","setFiles","Files","faFileImport","file","fileList","from","changeFile","map","index","key","FileTile","succCount","setSucc","maxCount","setMax","scanImportFile","listOfNew","newMax","NORMAL","newEntitiy","Object","entries","newTableName","bulkList","filter","saveNewFromList","fileReader","FileReader","onloadend","content","result","parse","toString","readAsText","FileWrapper","completed","round","isLabelVisible","bgcolor","height","margin","DiscordOptions","getItem","webhook","setWebhook","webhookUser","setWebhookUser","Options","activeTab","setTab","spellAmount","setSpellAmount","isReload","setData","reciveCount","returnTile","TabBar","children","tab","deleteAll","OptionSectionLarge","MyAppDatabase","version","stores","table","Dexie","db","open","put","prom","finally","close","entities","refinedEntities","bulkPut","toArray","array","count","reciveCountPromise","recivePromiseByAttributeCount","where","equalsIgnoreCase","equals","reciveAttributeSelectionPromise","attribute","orderBy","uniqueKeys","clear","Bar","child","Tab","isActive","floatLeft","disabled","SimpleButton","left","DisabledSimpleButton","hoverColor"],"mappings":"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","file":"static/js/5.453a2612.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 105;","import IEntity from \"./IEntity\";\n\nexport default class Spell implements IEntity {\n  id?: number;\n  name: string;\n  classes: string;\n  sources: string;\n  level: number;\n  school: string;\n  time: string;\n  range: string;\n  components: string;\n  duration: string;\n  ritual: number;\n  text: string;\n  filename: string;\n  pic: string;\n\n  constructor(\n    name?: string,\n    classes?: string,\n    sources?: string,\n    level?: number,\n    school?: string,\n    time?: string,\n    range?: string,\n    components?: string,\n    duration?: string,\n    ritual?: number,\n    text?: string,\n    id?: number,\n    filename?: string,\n    pic?: string\n  ) {\n    this.name = name || \"\";\n    this.classes = classes || \"\";\n    this.sources = sources || \"\";\n    this.level = level || 0;\n    this.school = school || \"\";\n    this.time = time || \"\";\n    this.range = range || \"\";\n    this.components = components || \"\";\n    this.duration = duration || \"\";\n    this.ritual = ritual || 0;\n    this.text = text || \"\";\n    this.id = id;\n    this.filename = filename || \"\";\n    this.pic = pic || \"\";\n  }\n}\n\nexport function isSpell(arg: any): arg is Spell {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return (\n    arg &&\n    nameCheck &&\n    classesCheck &&\n    sourcesCheck &&\n    levelCheck &&\n    schoolCheck &&\n    timeCheck &&\n    rangeCheck &&\n    compCheck &&\n    durationCheck &&\n    ritualCheck &&\n    textCheck &&\n    picCheck\n  );\n}\n\nexport function findSpellFormattError(\n  arg: any\n): {\n  nameCheck: boolean;\n  classesCheck: boolean;\n  sourcesCheck: boolean;\n  levelCheck: boolean;\n  schoolCheck: boolean;\n  timeCheck: boolean;\n  rangeCheck: boolean;\n  compCheck: boolean;\n  durationCheck: boolean;\n  ritualCheck: boolean;\n  textCheck: boolean;\n  picCheck: boolean;\n} {\n  const nameCheck = arg.name !== undefined && typeof arg.name == \"string\";\n  const classesCheck =\n    arg.classes !== undefined && typeof arg.classes == \"string\";\n  const sourcesCheck =\n    arg.sources !== undefined && typeof arg.sources == \"string\";\n  const levelCheck = arg.level !== undefined && typeof arg.level == \"number\";\n  const schoolCheck = arg.school !== undefined && typeof arg.school == \"string\";\n  const timeCheck = arg.time !== undefined && typeof arg.time == \"string\";\n  const rangeCheck = arg.range !== undefined && typeof arg.range == \"string\";\n  const compCheck =\n    arg.components !== undefined && typeof arg.components == \"string\";\n  const durationCheck =\n    arg.duration !== undefined && typeof arg.duration == \"string\";\n  const ritualCheck = arg.ritual !== undefined && typeof arg.ritual == \"number\";\n  const textCheck = arg.text !== undefined && typeof arg.text == \"string\";\n  const picCheck = arg.pic !== undefined && typeof arg.pic == \"string\";\n  return {\n    nameCheck: nameCheck,\n    classesCheck: classesCheck,\n    sourcesCheck: sourcesCheck,\n    levelCheck: levelCheck,\n    schoolCheck: schoolCheck,\n    timeCheck: timeCheck,\n    rangeCheck: rangeCheck,\n    compCheck: compCheck,\n    durationCheck: durationCheck,\n    ritualCheck: ritualCheck,\n    textCheck: textCheck,\n    picCheck: picCheck,\n  };\n}\n","import { reciveAll, reciveAllPromise, saveNew } from \"./DatabaseService\";\nimport { IndexableType } from \"dexie\";\nimport Spell, { isSpell } from \"../data/Spell\";\n\nexport const scanImportFileTest = async (json: any, fileName: string, callback: () => void) => {\n  let promList: Promise<any>[] = [];\n\n  if (!Array.isArray(json)) {\n    json = [json];\n  }\n\n  json.forEach((obj: any) => {\n    if (isSpell(obj)) {\n      promList.push(saveNew(\"spells\", obj as Spell, fileName));\n    }\n  });\n  await Promise.all(promList);\n  callback();\n};\n\n// const scanForFormatErrors = (obj: any) => {\n//   const itemFormatErrors = findItemFromattError(obj);\n//   let itemFailCount: number = 0;\n//   for (const value of Object.entries(itemFormatErrors)) {\n//     if (!value[1]) itemFailCount++;\n//   }\n//   const gearFormatErrors = findGearFormattError(obj);\n//   let gearFailCount: number = 0;\n//   for (const value of Object.entries(gearFormatErrors)) {\n//     if (!value[1]) gearFailCount++;\n//   }\n//   const spellFormatErrors = findSpellFormattError(obj);\n//   let spellFailCount: number = 0;\n//   for (const value of Object.entries(spellFormatErrors)) {\n//     if (!value[1]) spellFailCount++;\n//   }\n//   const monsterFormatErrors = findMonsterFormattError(obj);\n//   let monsterFailCount: number = 0;\n//   for (const value of Object.entries(monsterFormatErrors)) {\n//     if (!value[1]) monsterFailCount++;\n//   }\n//   const raceFormatErrors = findRaceFormattError(obj);\n//   let raceFailCount: number = 0;\n//   for (const value of Object.entries(raceFormatErrors)) {\n//     if (!value[1]) raceFailCount++;\n//   }\n//   const subraceFormatErrors = findSubraceFormattError(obj);\n//   let subraceFailCount: number = 0;\n//   for (const value of Object.entries(subraceFormatErrors)) {\n//     if (!value[1]) subraceFailCount++;\n//   }\n//   const classFormatErrors = findClassFormattError(obj);\n//   let classFailCount: number = 0;\n//   for (const value of Object.entries(classFormatErrors)) {\n//     if (!value[1]) classFailCount++;\n//   }\n//   const subclassFormatErrors = formattSubclassFromattError(obj);\n//   let subclassFailCount: number = 0;\n//   for (const value of Object.entries(subclassFormatErrors)) {\n//     if (!value[1]) subclassFailCount++;\n//   }\n//   const selectionFormatErrors = findSelectionFormattError(obj);\n//   let selectionFailCount: number = 0;\n//   for (const value of Object.entries(selectionFormatErrors)) {\n//     if (!value[1]) selectionFailCount++;\n//   }\n\n//   let errors: any[] = [];\n//   if (\n//     itemFailCount <= gearFailCount &&\n//     itemFailCount <= spellFailCount &&\n//     itemFailCount <= raceFailCount &&\n//     itemFailCount <= subraceFailCount &&\n//     itemFailCount <= classFailCount &&\n//     itemFailCount <= subclassFailCount &&\n//     itemFailCount <= selectionFailCount &&\n//     itemFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ item: itemFormatErrors });\n//   }\n//   if (\n//     gearFailCount <= itemFailCount &&\n//     gearFailCount <= spellFailCount &&\n//     gearFailCount <= raceFailCount &&\n//     gearFailCount <= subraceFailCount &&\n//     gearFailCount <= classFailCount &&\n//     gearFailCount <= subclassFailCount &&\n//     gearFailCount <= selectionFailCount &&\n//     gearFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ gear: gearFormatErrors });\n//   }\n//   if (\n//     spellFailCount <= itemFailCount &&\n//     spellFailCount <= gearFailCount &&\n//     spellFailCount <= raceFailCount &&\n//     spellFailCount <= subraceFailCount &&\n//     spellFailCount <= classFailCount &&\n//     spellFailCount <= subclassFailCount &&\n//     spellFailCount <= selectionFailCount &&\n//     spellFailCount <= monsterFailCount\n//   ) {\n//     errors.push({ spell: spellFormatErrors });\n//   }\n//   if (\n//     monsterFailCount <= itemFailCount &&\n//     monsterFailCount <= gearFailCount &&\n//     monsterFailCount <= raceFailCount &&\n//     monsterFailCount <= subraceFailCount &&\n//     monsterFailCount <= classFailCount &&\n//     monsterFailCount <= subclassFailCount &&\n//     monsterFailCount <= selectionFailCount &&\n//     monsterFailCount <= spellFailCount\n//   ) {\n//     errors.push({ monster: monsterFormatErrors });\n//   }\n//   if (\n//     raceFailCount <= itemFailCount &&\n//     raceFailCount <= gearFailCount &&\n//     raceFailCount <= monsterFailCount &&\n//     raceFailCount <= subraceFailCount &&\n//     raceFailCount <= classFailCount &&\n//     raceFailCount <= subclassFailCount &&\n//     raceFailCount <= selectionFailCount &&\n//     raceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ race: raceFormatErrors });\n//   }\n//   if (\n//     subraceFailCount <= itemFailCount &&\n//     subraceFailCount <= gearFailCount &&\n//     subraceFailCount <= monsterFailCount &&\n//     subraceFailCount <= raceFailCount &&\n//     subraceFailCount <= classFailCount &&\n//     subraceFailCount <= subclassFailCount &&\n//     subraceFailCount <= selectionFailCount &&\n//     subraceFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subrace: subraceFormatErrors });\n//   }\n//   if (\n//     classFailCount <= itemFailCount &&\n//     classFailCount <= gearFailCount &&\n//     classFailCount <= monsterFailCount &&\n//     classFailCount <= raceFailCount &&\n//     classFailCount <= subraceFailCount &&\n//     classFailCount <= subclassFailCount &&\n//     classFailCount <= selectionFailCount &&\n//     classFailCount <= spellFailCount\n//   ) {\n//     errors.push({ class: classFormatErrors });\n//   }\n//   if (\n//     subclassFailCount <= itemFailCount &&\n//     subclassFailCount <= gearFailCount &&\n//     subclassFailCount <= monsterFailCount &&\n//     subclassFailCount <= raceFailCount &&\n//     subclassFailCount <= subraceFailCount &&\n//     subclassFailCount <= classFailCount &&\n//     subclassFailCount <= selectionFailCount &&\n//     subclassFailCount <= spellFailCount\n//   ) {\n//     errors.push({ subclass: subclassFormatErrors });\n//   }\n//   if (\n//     selectionFailCount <= itemFailCount &&\n//     selectionFailCount <= gearFailCount &&\n//     selectionFailCount <= monsterFailCount &&\n//     selectionFailCount <= raceFailCount &&\n//     selectionFailCount <= subraceFailCount &&\n//     selectionFailCount <= classFailCount &&\n//     selectionFailCount <= subclassFailCount &&\n//     selectionFailCount <= spellFailCount\n//   ) {\n//     errors.push({ selection: selectionFormatErrors });\n//   }\n//   return JSON.stringify({ failedObject: obj, Errors: errors }, null, 2);\n// };\n\nexport const exportAllFromTable = (tableName: string, filename: string) => {\n  reciveAll(tableName, (all: IndexableType[]) => {\n    let entity = { [tableName]: all };\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(entity)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(entity));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n\nexport const exportAll = async (filename: string) => {\n  const spells = await reciveAllPromise(\"spells\");\n\n  let all: any = {\n    spells: spells,\n  };\n\n  let contentType = \"application/json;charset=utf-8;\";\n  if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n    var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n      type: contentType,\n    });\n    navigator.msSaveOrOpenBlob(blob, filename);\n  } else {\n    var a = document.createElement(\"a\");\n    a.download = filename;\n    a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n    a.target = \"_blank\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  }\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  value: string;\n  label: string;\n  placeholder?: string;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: string) => void;\n}\n\nconst StringField = ({ value, label, placeholder, icon, transform, onChange }: $Props) => (\n  <Field>\n    <LabelText>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n    </LabelText>\n    <Input\n      type=\"text\"\n      value={value}\n      onChange={(e) => onChange(e.target.value)}\n      placeholder={placeholder}\n    ></Input>\n  </Field>\n);\n\nexport default StringField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 30px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n  width: 0;\n  min-width: 100px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { scanImportFileTest } from \"../../services/OptionService\";\nimport IEntity from \"../../data/IEntity\";\n\nimport {\n  faCheck,\n  faExclamationCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport TextButton from \"../form_elements/TextButton\";\nimport { LoadingSpinner } from \"../Loading\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  changeData: (data: IEntity[] | IEntity | undefined) => void;\n  reload: (value: boolean) => void;\n}\n\nconst P2PReciver = ({ changeData, reload }: $Props) => {\n  const [peerId, setId] = useState<string>(\"\");\n  const [loading, isLoading] = useState<boolean>(false);\n  const [error, setError] = useState<any>();\n  const [state, setState] = useState<any>();\n  const [peer] = useState<Peer>(\n    new Peer(undefined, {\n      host: \"peerjs.thedndtome.com\",\n      secure: true,\n    })\n  );\n\n  useEffect(() => {\n    const conn = peer.connect(peerId);\n    conn.on(\"open\", function () {\n      conn.on(\"error\", function (data) {\n        setError(data);\n      });\n      // Receive messages\n      conn.on(\"data\", function (data) {\n        console.log(data);\n        setState(data);\n        changeData(data);\n        reload(true);\n      });\n    });\n  }, [peer, peerId, changeData, reload]);\n\n  const acceptData = () => {\n    if (state !== undefined) {\n      isLoading(true);\n      scanImportFileTest(state, \"recived\", () => {\n        setId(\"\");\n        changeData(undefined);\n        reload(true);\n        isLoading(false);\n        setState(undefined);\n      });\n    }\n  };\n\n  const declineData = () => {\n    setId(\"\");\n    changeData(undefined);\n    reload(true);\n    isLoading(false);\n    setState(undefined);\n  };\n\n  return (\n    <>\n      {!!loading && <LoadingSpinner />}\n      <StringField\n        value={peerId}\n        label={\"ID to recive from\"}\n        onChange={(id) => setId(id)}\n      />\n      {error && <Icon icon={faExclamationCircle} />}\n      {state !== undefined && peerId !== \"\" && (\n        <>\n          <TextButton\n            text={\"Accept\"}\n            icon={faCheck}\n            onClick={() => acceptData()}\n          />\n          <TextButton\n            text={\"Decline\"}\n            icon={faCheck}\n            onClick={() => declineData()}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default P2PReciver;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","import React, { useCallback } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Spell from \"../../../data/Spell\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faHourglassHalf,\n  faMortarPestle,\n  faHistory,\n  faPowerOff,\n  faUser,\n  faLink,\n} from \"@fortawesome/free-solid-svg-icons\";\n\ninterface $Props {\n  spell: Spell;\n}\n\nconst SpellTile = ({ spell }: $Props) => {\n  const formatTime = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.time.split(\",\");\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatLevel = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.level === 0) {\n        return \"C\";\n      }\n      return spell.level;\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasRitual = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.ritual === 1) {\n        return <div className=\"icon\">R</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const hasConcentration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        return <div className=\"icon\">C</div>;\n      }\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatComponents = useCallback(() => {\n    if (spell !== undefined) {\n      let words = spell.components.split(\"(\");\n      if (words.length > 1) {\n        return words[0] + \"*\";\n      }\n      return words[0];\n    }\n    return \"\";\n  }, [spell]);\n\n  const formatDuration = useCallback(() => {\n    if (spell !== undefined) {\n      let search = spell.duration.toLowerCase();\n      if (search.includes(\"concentration\")) {\n        if (search.includes(\"concentration, \")) {\n          let words = spell.duration.replace(\"Concentration,\", \"\").trim();\n          return words;\n        } else {\n          let words = spell.duration.replace(\"Concentration\", \"\").trim();\n          return words;\n        }\n      }\n      return spell.duration;\n    }\n    return \"\";\n  }, [spell]);\n\n  const getPicture = useCallback(() => {\n    if (spell !== undefined) {\n      if (spell.pic === \"\" || spell.pic === null) {\n        return \"\";\n      }\n      return spell.pic;\n    }\n    return \"\";\n  }, [spell]);\n\n  return (\n    <Tile to={\"/spell-detail/id/\" + spell.id}>\n      <School school={spell.school}>{spell.school}</School>\n\n      <Flag>\n        <b>{hasConcentration()}</b>\n      </Flag>\n      <Flag>\n        <b>{hasRitual()}</b>\n      </Flag>\n\n      <Level>\n        <b>{formatLevel()}</b>\n      </Level>\n      {getPicture() !== \"\" ? (\n        <ImageName>\n          <Image pic={getPicture()}></Image>\n          <b>{spell.name}</b>\n        </ImageName>\n      ) : (\n        <Name>\n          <b>{spell.name}</b>\n        </Name>\n      )}\n\n      <PropWrapper>\n        <Prop>\n          <Icon icon={faHistory} />\n          {formatTime()}\n        </Prop>\n        <Prop>\n          <Icon icon={faHourglassHalf} />\n          {formatDuration()}\n        </Prop>\n        <Prop>\n          <Icon icon={faPowerOff} transform={{ rotate: 42 }} />\n          {spell.range}\n        </Prop>\n        <Prop>\n          <Icon icon={faMortarPestle} />\n          {formatComponents()}\n        </Prop>\n        <WideProp>\n          <Icon icon={faUser} />\n          {spell.classes}\n        </WideProp>\n        <WideProp>\n          <Icon icon={faLink} />\n          {spell.sources}\n        </WideProp>\n      </PropWrapper>\n    </Tile>\n  );\n};\n\nexport default SpellTile;\n\nconst Tile = styled(Link)`\n  flex: 1 1 15em;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n  cursor: pointer;\n`;\n\ntype SchoolType = {\n  school?: string;\n};\n\nconst School = styled.div<SchoolType>`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 0px;\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  color: ${(props) => {\n    if (props.school === \"Necromancy\") {\n      return \"#bef28e\";\n    } else if (props.school === \"Conjuration\") {\n      return \"#fce97a\";\n    } else if (props.school === \"Evocation\") {\n      return \"#db5740\";\n    } else if (props.school === \"Divination\") {\n      return \"#9ebed2\";\n    } else if (props.school === \"Enchantment\") {\n      return \"#ce90ca\";\n    } else if (props.school === \"Transmutation\") {\n      return \"#e19c60\";\n    } else if (props.school === \"Abjuration\") {\n      return \"#278ae4\";\n    } else if (props.school === \"Illusion\") {\n      return \"#8b42f9\";\n    } else {\n      return \"white\";\n    }\n  }};\n`;\n\nconst Level = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  float: right;\n  text-align: center;\n  border-top-right-radius: 3px;\n  border-radius: 30px;\n  border-bottom: solid 1px ${({ theme }) => theme.main.highlight};\n  margin: 5px;\n`;\n\nconst Name = styled.div`\n  height: auto;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 5px;\n`;\n\nconst ImageName = styled.div`\n  height: 30px;\n  float: left;\n  padding: 10px;\n  margin: 0 5px 5px 5px;\n  font-size: 14px;\n  width: calc(100% - 30px);\n  color: ${({ theme }) => theme.tile.headerColor};\n  text-align: center;\n  border-radius: 50px 5px 5px 50px;\n`;\n\nconst PropWrapper = styled.div`\n  height: auto;\n  width: calc(100% - 10px);\n  float: left;\n  padding: 5px 5px 0 5px;\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nconst Prop = styled.div`\n  height: 12px;\n  width: calc(50% - 22.5px);\n  margin: 0 0 5px 5px;\n  float: left;\n  line-height: 10px;\n  padding: 10px;\n  font-size: 12px;\n  border-radius: 5px;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n\n  &:nth-child(odd) {\n  margin: 0 0 5px 0px;\n  }\n}\n`;\n\nconst WideProp = styled(Prop)`\n  margin: 0 0 5px 0px;\n  width: calc(100% - 20px);\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst Flag = styled.div`\n  height: auto;\n  float: left;\n  padding: 5px 10px 7px 10px;\n  margin-left: 5px;\n  font-size: 12px;\n  line-height: 30px;\n  border-radius: 0px 0px 10px 10px;\n`;\n\ninterface $ImageProps {\n  pic: string;\n}\n\nconst Image = ({ pic }: $ImageProps) => {\n  const style = {\n    backgroundImage: `url(${pic})`,\n    backgroundPosition: \"center\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  };\n\n  if (pic !== \"\") {\n    return <ImageElm style={style}></ImageElm>;\n  } else {\n    return <Empty />;\n  }\n};\n\nconst ImageElm = styled.div`\n  margin: -10px 5px -10px -10px;\n  height: 47px;\n  width: 47px;\n  float: left;\n  border-radius: 100px;\n  border: 3px solid ${({ theme }) => theme.main.highlight};\n  box-shadow: 0px 0px 10px 0px rgba(172, 172, 172, 0.2);\n  background-color: white;\n  overflow: hidden;\n`;\nconst Empty = styled.div``;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useTheme } from \"../theme/MyThemeProvider\";\nimport { darkTheme, lightTheme } from \"../theme/Theme\";\n\nconst GeneralOptions = () => {\n  const { theme, setTheme } = useTheme();\n\n  const toggleTheme = () => {\n    if (theme === darkTheme) {\n      setTheme(lightTheme);\n      localStorage.setItem(\"theme\", \"light\");\n    } else {\n      setTheme(darkTheme);\n      localStorage.setItem(\"theme\", \"dark\");\n    }\n  };\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Theme</SelectionTitle>\n        <Button onClick={() => toggleTheme()}>Toggle Style</Button>\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default GeneralOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst Button = styled.button`\n  flex: 1 1 auto;\n  display: inline-block;\n  text-decoration: none;\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  height: 28px;\n  border: none;\n  border-radius: 5px;\n  padding-left: 10px;\n  padding-right: 10px;\n  margin: 5px;\n  text-align: center;\n  font-family: inherit;\n  font-size: 14px;\n  color: ${({ theme }) => theme.buttons.color};\n  cursor: pointer;\n  line-height: 26px;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Peer from \"peerjs\";\nimport { reciveAllPromise } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport { generateBrokerId } from \"../../services/PeerIdService\";\n\nimport { faExclamationCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport StringField from \"../form_elements/StringField\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ninterface $Props {\n  data: string | IEntity;\n  mode: \"ALL\" | \"THIS\";\n}\n\nconst P2PSender = ({ data, mode }: $Props) => {\n  const [name, setName] = useState<string>(\"\");\n  const [peer, setPeer] = useState<Peer>();\n  const [error, setError] = useState<any>();\n\n  useEffect(() => {\n    if (peer === undefined) {\n      const brokerId = generateBrokerId();\n      const newPeer = new Peer(brokerId, {\n        host: \"peerjs.thedndtome.com\",\n        secure: true,\n      });\n      console.log(newPeer);\n      newPeer.on(\"connection\", function (conn) {\n        conn.on(\"error\", function (errorData) {\n          setError(errorData);\n        });\n        conn.on(\"open\", function () {\n          conn.send(data);\n        });\n      });\n      setPeer(newPeer);\n    }\n  }, [data, peer]);\n\n  useEffect(() => {\n    if (peer !== undefined) {\n      if (peer.disconnected && !peer.destroyed) {\n        peer.reconnect();\n      }\n      if (mode === \"ALL\" && typeof data === \"string\") {\n        reciveAllPromise(data).then((results) => {\n          console.log(results);\n          setName(data);\n          peer.on(\"connection\", function (conn) {\n            conn.on(\"error\", function (errorData) {\n              setError(errorData);\n            });\n            conn.on(\"open\", function () {\n              conn.send(results);\n            });\n          });\n        });\n      } else if (mode === \"THIS\" && typeof data !== \"string\") {\n        setName(data.name);\n        peer.on(\"connection\", function (conn) {\n          conn.on(\"error\", function (errorData) {\n            setError(errorData);\n          });\n          conn.on(\"open\", function () {\n            conn.send(data);\n          });\n        });\n      }\n    }\n  }, [data, mode, peer]);\n\n  return (\n    <>\n      {peer !== undefined && peer.id !== null && (\n        <>\n          <StringField value={peer.id} label={`Your ${name} ID:`} onChange={() => {}} />\n        </>\n      )}\n      {error && <Icon icon={faExclamationCircle} />}\n    </>\n  );\n};\n\nexport default P2PSender;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n","const getRandomInteger = (min: number, max: number) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\nexport const generateBrokerId = () => {\n  let password = \"\";\n  const characters =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 13; i++) {\n    password += characters[getRandomInteger(0, characters.length - 1)];\n  }\n  return password;\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport { faFileExport, faPaperPlane, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { exportAllFromTable } from \"../../services/OptionService\";\nimport IconButton from \"../form_elements/IconButton\";\nimport P2PSender from \"../p2p/P2PSender\";\nimport TextButton from \"../form_elements/TextButton\";\n\ninterface $Props {\n  amount: number;\n  triggerDeleteAll: (tableName: string) => void;\n}\n\nconst SpellsOptions = ({ amount, triggerDeleteAll }: $Props) => {\n  const [send, setSend] = useState<boolean>(false);\n\n  return (\n    <OptionTab>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export all Spells?</SectionText>\n          <IconButton\n            icon={faFileExport}\n            onClick={() => exportAllFromTable(\"spells\", \"SkirmishTome_spells.json\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Delete</SelectionTitle>\n        <SectionRow>\n          <SectionText>Delete all {amount} Spells?</SectionText>\n          <IconButton\n            icon={faTrashAlt}\n            onClick={() => triggerDeleteAll(\"spells\")}\n          />\n        </SectionRow>\n      </OptionSection>\n      <OptionSection>\n        {!send && (\n          <TextButton\n            text={`Send all spells`}\n            icon={faPaperPlane}\n            onClick={() => setSend(true)}\n          />\n        )}\n        {!!send && <P2PSender data={\"spells\"} mode={\"ALL\"} />}\n      </OptionSection>\n    </OptionTab>\n  );\n};\n\nexport default SpellsOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  label: string;\n  accept: string;\n  isMulti: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  onChange: (value: FileList | null) => void;\n}\n\nconst FileField = ({\n  label,\n  accept,\n  isMulti,\n  icon,\n  transform,\n  onChange,\n}: $Props) => {\n  return (\n    <Field>\n      <LabelText>\n        {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {label}\n      </LabelText>\n      {isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          type=\"file\"\n          accept={accept}\n          multiple\n        ></Input>\n      )}\n      {!isMulti && (\n        <Input\n          onChange={(e) => onChange(e.target.files)}\n          accept={accept}\n          type=\"file\"\n        ></Input>\n      )}\n    </Field>\n  );\n};\n\nexport default FileField;\n\nconst Field = styled.label`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: 38px;\n  line-height: 38px;\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  border-radius: 5px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  margin-right: 5px;\n  width: 20px;\n  height: auto;\n  border-radius: 150px;\n  transition: color 0.2s;\n  color: ${({ theme }) => theme.main.highlight};\n`;\n\nconst LabelText = styled.div`\n  flex: 1 1 auto;\n`;\n\nconst Input = styled.input`\n  flex: 3 1 auto;\n  height: 38px;\n  line-height: 30px;\n  padding: 5px;\n  box-sizing: border-box;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin-left: 5px;\n  border-radius: 5px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport FileField from \"./FileField\";\nimport IEntity from \"../../data/IEntity\";\nimport { faFileImport } from \"@fortawesome/free-solid-svg-icons\";\nimport { saveNewFromList } from \"../../services/DatabaseService\";\n\nimport ProgressBar from \"@ramonak/react-progress-bar\";\n\nexport enum ImportModus {\n  NORMAL,\n}\n\ninterface $Props {\n  modus: ImportModus;\n}\n\nconst ImportField = ({ modus }: $Props) => {\n  const [files, setFiles] = useState<File[]>([]);\n\n  const changeFile = (fileList: FileList | null) => {\n    console.log(\"Start File Upload\");\n    if (fileList !== null) {\n      const files = Array.from(fileList);\n      setFiles(files);\n    }\n  };\n\n  return (\n    <>\n      <Files>\n        <FileField\n          label=\"\"\n          isMulti={true}\n          accept={\".json\"}\n          icon={faFileImport}\n          onChange={(file) => changeFile(file)}\n        />\n      </Files>\n      <Files>\n        {files &&\n          files.map((file: File, index: number) => (\n            <FileTile key={index} modus={modus} file={file} />\n          ))}\n      </Files>\n    </>\n  );\n};\n\nexport default ImportField;\n\ninterface $FileProps {\n  file: File;\n  modus: ImportModus;\n}\n\nconst FileTile = ({ file, modus }: $FileProps) => {\n  const [succCount, setSucc] = useState<number>(0);\n  const [maxCount, setMax] = useState<number>(0);\n\n  const scanImportFile = async (json: any, fileName: string) => {\n    console.log(\"Start 5eTools Json interpreting \" + fileName);\n\n    let listOfNew: { tableName: string; newEntitiy: IEntity }[] = [];\n\n    let newMax: number = 0;\n    for (const [key, value] of Object.entries(json)) {\n      if (Array.isArray(value)) {\n        newMax += value.length;\n        if (modus === ImportModus.NORMAL) {\n          // eslint-disable-next-line\n          value.forEach((obj: any) => listOfNew.push({ tableName: key, newEntitiy: obj }));\n        }\n      }\n    }\n    setMax(newMax);\n\n    while (listOfNew.length > 0) {\n      let newTableName = listOfNew[0].tableName;\n      let bulkList: IEntity[] = listOfNew\n        .filter((newEntitiy) => newEntitiy.tableName === newTableName)\n        .map((entity: { tableName: string; newEntitiy: IEntity }) => {\n          return entity.newEntitiy;\n        });\n      await saveNewFromList(newTableName, bulkList, fileName);\n      listOfNew = listOfNew.filter((entity) => entity.tableName !== newTableName);\n      setSucc(newMax - listOfNew.length);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Start Filereader \" + file.name);\n    let fileReader = new FileReader();\n    fileReader.onloadend = function () {\n      const content = fileReader.result;\n      if (content !== null) {\n        let json = JSON.parse(content.toString());\n        console.log(\"Json loaded from \" + file.name);\n        scanImportFile(json, file.name);\n      }\n    };\n    fileReader.readAsText(file);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file]);\n\n  return (\n    <FileWrapper>\n      {file.name} {succCount}/{maxCount}\n      <ProgressBar\n        completed={Math.round((succCount / maxCount) * 100)}\n        isLabelVisible={false}\n        bgcolor={\"#F55C5C\"}\n        height={\"5px\"}\n        margin={\"5px\"}\n      />\n    </FileWrapper>\n  );\n};\n\nconst Files = styled.div`\n  flex: 1 1 100%;\n`;\n\nconst FileWrapper = styled.div`\n  width: clac(100% - 20px);\n  height: 50px;\n  padding: 10px;\n`;\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport StringField from \"../form_elements/StringField\";\n\nconst DiscordOptions = () => {\n  const [webhook, setWebhook] = useState<string>(localStorage.getItem(\"webhook\") + \"\");\n  const [webhookUser, setWebhookUser] = useState<string>(localStorage.getItem(\"webhook_user\") + \"\");\n\n  useEffect(() => {\n    if (webhook !== localStorage.getItem(\"webhook\")) localStorage.setItem(\"webhook\", webhook);\n  }, [webhook]);\n\n  useEffect(() => {\n    if (webhookUser !== localStorage.getItem(\"webhook_user\"))\n      localStorage.setItem(\"webhook_user\", webhookUser);\n  }, [webhookUser]);\n\n  return (\n    <General>\n      <OptionSection>\n        <SelectionTitle>Discord Webhook</SelectionTitle>\n        <StringField value={webhookUser} label=\"PlayerName\" onChange={setWebhookUser} />\n        <StringField value={webhook} label=\"Webhook\" onChange={setWebhook} />\n      </OptionSection>\n    </General>\n  );\n};\n\nexport default DiscordOptions;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { exportAll } from \"../../services/OptionService\";\nimport { deleteAll, reciveCount } from \"../../services/DatabaseService\";\nimport IEntity from \"../../data/IEntity\";\nimport P2PReciver from \"../p2p/P2PReciver\";\n\nimport { isSpell } from \"../../data/Spell\";\n\nimport { faFileExport } from \"@fortawesome/free-solid-svg-icons\";\nimport TabBar from \"../general_elements/TabBar\";\nimport IconButton from \"../form_elements/IconButton\";\nimport SpellTile from \"../entities/spells/SpellTile\";\nimport GeneralOptions from \"./GeneralOptions\";\nimport SpellsOptions from \"./SpellsOptions\";\nimport ImportField, { ImportModus } from \"../form_elements/ImportField\";\nimport DiscordOptions from \"./DiscordOptions\";\n\nconst Options = () => {\n  const [activeTab, setTab] = useState<string>(\"General\");\n\n  const [spellAmount, setSpellAmount] = useState<number>(0);\n\n  const [reload, isReload] = useState<boolean>(true);\n  const [data, setData] = useState<IEntity[] | IEntity>();\n\n  useEffect(() => {\n    if (reload) {\n      reciveCount(\"spells\", (result: number) => {\n        setSpellAmount(result);\n      });\n      isReload(false);\n    }\n  }, [reload]);\n\n  const triggerDeleteAll = (tableName: string) => {\n    deleteAll(tableName);\n    isReload(true);\n  };\n\n  const returnTile = (entity: IEntity, index: number) => {\n    if (isSpell(entity)) {\n      return <SpellTile key={index} spell={entity} />;\n    } else {\n      return <OptionSection key={index}>{entity.name}</OptionSection>;\n    }\n  };\n\n  return (\n    <>\n      <OptionSection>\n        <SelectionTitle>Import</SelectionTitle>\n        <ImportField modus={ImportModus.NORMAL} />\n      </OptionSection>\n      <OptionSection>\n        <SelectionTitle>Export</SelectionTitle>\n        <SectionRow>\n          <SectionText>Export as one file?</SectionText>\n          <IconButton icon={faFileExport} onClick={() => exportAll(\"SkirmishTome_all.json\")} />\n        </SectionRow>\n      </OptionSection>\n      <TabBar\n        children={[\"General\", \"Spells\", \"Discord\", \"Receive\"]}\n        onChange={(tab: string) => setTab(tab)}\n        activeTab={activeTab}\n      />\n      {activeTab === \"General\" && <GeneralOptions />}\n      {activeTab === \"Spells\" && (\n        <SpellsOptions amount={spellAmount} triggerDeleteAll={triggerDeleteAll} />\n      )}\n      {activeTab === \"Discord\" && <DiscordOptions />}\n      {activeTab === \"Receive\" && (\n        <OptionTab>\n          <OptionSectionLarge>\n            <P2PReciver reload={isReload} changeData={setData} />\n          </OptionSectionLarge>\n          {data !== undefined &&\n            Array.isArray(data) &&\n            data.map((entity: IEntity, index: number) => {\n              return returnTile(entity, index);\n            })}\n          {data !== undefined && !Array.isArray(data) && returnTile(data, 0)}\n        </OptionTab>\n      )}\n      {/* {failedObjs &&\n        failedObjs.length > 0 &&\n        failedObjs.map((obj: string, index: number) => {\n          return (\n            <OptionSection key={index}>\n              <SelectionTitle>Formatt Errors</SelectionTitle>\n              <SectionText>\n                <pre>{obj}</pre>\n              </SectionText>\n            </OptionSection>\n          );\n        })} */}\n    </>\n  );\n};\n\nexport default Options;\n\nconst General = styled.div`\n  flex: 1 1 auto;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionTab = styled(General)`\n  flex: 1 1 auto;\n`;\n\nconst OptionSection = styled(General)`\n  flex: 1 1 auto;\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  margin: 0.5em;\n  border-radius: 10px;\n  box-shadow: ${({ theme }) => theme.tile.boxShadow};\n  overflow: hidden;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: flex-start;\n  align-content: flex-start;\n`;\n\nconst OptionSectionLarge = styled(OptionSection)`\n  width: calc(100% - 1em);\n`;\n\nconst SelectionTitle = styled.div`\n  flex: 1 1 auto;\n  padding: 5px;\n  margin: 5px;\n  min-width: calc(100% - 20px);\n  font-weight: bold;\n  text-algin: center;\n  border-radius: 5px;\n  color: ${({ theme }) => theme.input.color};\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n`;\n\nconst SectionRow = styled.div`\n  flex: 1 1 auto;\n  margin: 5px;\n  min-width: calc(100% - 10px);\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  align-content: flex-start;\n`;\n\nconst SectionText = styled.div`\n  flex: 1 1 auto;\n`;\n","import Dexie from \"dexie\";\nimport Spell from \"../data/Spell\";\n\nexport class MyAppDatabase extends Dexie {\n  spells: Dexie.Table<Spell, number>;\n\n  constructor() {\n    super(\"SkirmishTomeDB\");\n    this.version(1).stores({\n      spells:\n        \"++id, name, classes, sources, level, school, time, range, components, duration, ritual, text, pic\",\n    });\n   \n    this.spells = this.table(\"spells\");\n  }\n}\n","import { MyAppDatabase } from \"../database/MyDatabase\";\nimport { IndexableType } from \"dexie\";\nimport IEntity from \"../data/IEntity\";\nimport Filter from \"../data/Filter\";\n\nexport const update = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).update(data.id, data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const updateWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .update(data.id, data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const save = (tableName: string, data: IEntity) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).add(data);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNew = (tableName: string, entity: IEntity, filename: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      delete entity[\"id\"];\n      const prom = await db.table(tableName).put({ ...entity, filename: filename });\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveNewFromList = (tableName: string, entities: IEntity[], filename: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(async function () {\n      const refinedEntities = (entities as IEntity[]).map((entity: IEntity) => {\n        delete entity[\"id\"];\n        return { ...entity, filename: filename };\n      });\n      const prom = await db.table(tableName).bulkPut(refinedEntities);\n      return prom;\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const saveWithCallback = (\n  tableName: string,\n  data: IEntity,\n  callback: (data: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .add(data)\n        .then((result: number) => {\n          callback(result);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const remove = (tableName: string, id: number | undefined) => {\n  const db = new MyAppDatabase();\n  if (id !== undefined) {\n    db.open()\n      .then(function () {\n        db.table(tableName).delete(id);\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAll = (tableName: string, callback: (data: IndexableType[]) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .toArray()\n        .then((array) => {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCount = (tableName: string, callback: (value: number) => void) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).count((count) => {\n        callback(count);\n      });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveCountPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).count();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveByAttribute = (\n  tableName: string,\n  name: string,\n  value: string,\n  callback: (data: IEntity) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .where(name)\n        .equalsIgnoreCase(value)\n        .toArray()\n        .then((array) => {\n          callback(array[0]);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttribute = (tableName: string, name: string, value: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      const array = await db.table(tableName).where(name).equalsIgnoreCase(value).toArray();\n      return array[0];\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromise = (tableName: string, value: number) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).get(value);\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const recivePromiseByAttributeCount = (\n  tableName: string,\n  name: string,\n  value: string | number\n) => {\n  const db = new MyAppDatabase();\n  if (typeof value === \"string\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equalsIgnoreCase(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else if (typeof value === \"number\") {\n    return db\n      .open()\n      .then(async function () {\n        return await db.table(tableName).where(name).equals(value).count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  } else {\n    return db\n      .open()\n      .then(async function () {\n        return await db\n          .table(tableName)\n          .where(name)\n          .equalsIgnoreCase(\"\" + value)\n          .count();\n      })\n      .finally(function () {\n        db.close();\n      });\n  }\n};\n\nexport const reciveAllPromise = (tableName: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(async function () {\n      return await db.table(tableName).toArray();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const applyFilters = (obj: any, filters: Filter[]) => {\n  let test: boolean[] = [];\n  filters.forEach((filter) => {\n    if (typeof filter.value === \"string\") {\n      if (obj[filter.fieldName] instanceof Array) {\n        let hasTag = false;\n        obj[filter.fieldName].forEach((fieldPart: string) => {\n          // @ts-ignore\n          if (fieldPart.toLowerCase().includes(filter.value.toLowerCase())) {\n            hasTag = true;\n          }\n        });\n        if (hasTag) {\n          test.push(true);\n        } else {\n          test.push(false);\n        }\n      } else {\n        test.push(\n          // @ts-ignore\n          obj[filter.fieldName].toLowerCase().includes(filter.value.toLowerCase())\n        );\n      }\n    } else if (typeof filter.value === \"number\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (typeof filter.value === \"boolean\") {\n      // @ts-ignore\n      test.push(obj[filter.fieldName] === filter.value);\n    } else if (filter.value instanceof Array) {\n      let arrayTest: boolean = false;\n      filter.value.forEach((filterPart: string | boolean | number) => {\n        if (typeof filterPart === \"string\") {\n          if (\n            // @ts-ignore\n            obj[filter.fieldName].toLowerCase().includes(filterPart.toLowerCase())\n          )\n            arrayTest = true;\n        } else if (typeof filterPart === \"number\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        } else if (typeof filterPart === \"boolean\") {\n          // @ts-ignore\n          if (obj[filter.fieldName] === filterPart) arrayTest = true;\n        }\n      });\n      test.push(arrayTest);\n    }\n  });\n\n  let result = true;\n  test.forEach((val) => {\n    if (!val) result = false;\n  });\n  return result;\n};\n\nexport const reciveAllFiltered = (\n  tableName: string,\n  filters: Filter[],\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      } else {\n        db.table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled)\n          .then((data) => {\n            callback(data);\n          });\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAllFilteredPromise = (tableName: string, filters: Filter[]) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      let sortedFiled: string = \"name\";\n      let reverse: boolean = false;\n\n      filters.forEach((filter: Filter) => {\n        if (filter.sort !== 0) {\n          sortedFiled = filter.fieldName;\n          if (filter.sort === 2) reverse = true;\n        }\n      });\n\n      if (reverse) {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .reverse()\n          .sortBy(sortedFiled);\n      } else {\n        return db\n          .table(tableName)\n          .filter((obj) => applyFilters(obj, filters))\n          .sortBy(sortedFiled);\n      }\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelection = (\n  tableName: string,\n  attribute: string,\n  callback: (data: IndexableType[]) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .orderBy(attribute)\n        .uniqueKeys(function (array) {\n          callback(array);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const reciveAttributeSelectionPromise = (tableName: string, attribute: string) => {\n  const db = new MyAppDatabase();\n  return db\n    .open()\n    .then(function () {\n      return db.table(tableName).orderBy(attribute).uniqueKeys();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const createNewWithId = (\n  tableName: string,\n  entity: IEntity,\n  callback: (id: number) => void\n) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName)\n        .put(entity)\n        .then((id: number) => {\n          callback(id);\n        });\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const deleteAll = (tableName: string) => {\n  const db = new MyAppDatabase();\n  db.open()\n    .then(function () {\n      db.table(tableName).clear();\n    })\n    .finally(function () {\n      db.close();\n    });\n};\n\nexport const exportFilteredFromTable = (tableName: string, filters: Filter[], filename: string) => {\n  reciveAllFiltered(tableName, filters, (all: IndexableType[]) => {\n    let contentType = \"application/json;charset=utf-8;\";\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      var blob = new Blob([decodeURIComponent(encodeURI(JSON.stringify(all)))], {\n        type: contentType,\n      });\n      navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      var a = document.createElement(\"a\");\n      a.download = filename;\n      a.href = \"data:\" + contentType + \",\" + encodeURIComponent(JSON.stringify(all));\n      a.target = \"_blank\";\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    }\n  });\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface $Props {\n  children: string[];\n  activeTab?: string;\n  onChange: (name: string) => void;\n}\n\nconst TabBar = ({ children, activeTab, onChange }: $Props) => {\n  return (\n    <Bar>\n      {children.map((child, index) => {\n        return (\n          <Tab key={index} onClick={(e) => onChange(child)} isActive={child === activeTab}>\n            {child}\n          </Tab>\n        );\n      })}\n    </Bar>\n  );\n};\n\nexport default TabBar;\n\nconst Bar = styled.div`\n  color: ${({ theme }) => theme.tile.color};\n  background-color: ${({ theme }) => theme.tile.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  min-width: calc(100% - 20px);\n  flex: 1 1 auto;\n  padding: 3px;\n  margin: 5px;\n  border-radius: 10px;\n  position: relative;\n  z-index: 100;\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: baseline;\n`;\n\ntype ActiveType = {\n  isActive?: boolean;\n};\n\nconst Tab = styled.div<ActiveType>`\n  flex: 3 1 auto;\n  height: 30px;\n  line-height: 20px;\n  padding: 5px;\n  box-sizing: border-box;\n  text-align: center;\n  border: none;\n  background-color: ${({ theme }) => theme.input.backgroundColor};\n  color: ${({ theme }) => theme.input.color};\n  margin: 2px;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n\n  &:hover {\n    background-color: ${({ theme }) => theme.buttons.backgroundColor};\n    color: ${({ theme }) => theme.buttons.color};\n  }\n\n  ${(props) => {\n    if (props.isActive) {\n      return `background-color: ${props.theme.buttons.backgroundColor}; \n      color: ${props.theme.buttons.color};`;\n    }\n  }}\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  icon: IconDefinition;\n  floatLeft?: boolean;\n  disabled?: boolean;\n  transform?: string | Transform;\n  style?: any;\n  onClick?: (() => void) | ((e: any) => void);\n}\n\nconst IconButton = ({ icon, floatLeft, disabled, transform, style, onClick }: $Props) => {\n  return (\n    <>\n      {!disabled && (\n        <SimpleButton left={floatLeft} onClick={onClick} style={style}>\n          <Icon icon={icon} transform={transform} />\n        </SimpleButton>\n      )}\n      {disabled && (\n        <DisabledSimpleButton style={style}>\n          <Icon icon={icon} transform={transform} />\n        </DisabledSimpleButton>\n      )}\n    </>\n  );\n};\n\nexport default IconButton;\n\ntype FloatMpde = {\n  left?: boolean;\n};\n\nconst SimpleButton = styled.div<FloatMpde>`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  cursor: pointer;\n\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: ${({ left }) => (left ? \"left\" : \"right\")};\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: white;\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DisabledSimpleButton = styled(SimpleButton)`\n  color: ${({ theme }) => theme.buttons.backgroundColor};\n  background-color: ${({ theme }) => theme.buttons.color};\n  cursor: not-allowed;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/free-solid-svg-icons\";\nimport { Transform } from \"@fortawesome/fontawesome-svg-core\";\n\ninterface $Props {\n  text: string;\n  disabled?: boolean;\n  icon?: IconDefinition;\n  transform?: string | Transform;\n  style?: any;\n  onClick: () => void;\n}\n\nconst TextButton = ({ text, icon, transform, disabled, style, onClick }: $Props) => {\n  return (\n    <SimpleButton onClick={onClick} disabled={disabled} style={style}>\n      {icon ? <Icon icon={icon} transform={transform} /> : \"\"} {text}\n    </SimpleButton>\n  );\n};\n\nexport default TextButton;\n\nconst SimpleButton = styled.button`\n  color: ${({ theme }) => theme.buttons.color};\n  background-color: ${({ theme }) => theme.buttons.backgroundColor};\n  font-size: 16px;\n  overflow: hidden;\n  height: ${({ theme }) => theme.buttons.height};\n  line-height: ${({ theme }) => theme.buttons.height};\n  float: right;\n  padding: 10px;\n  margin: 5px;\n  border-radius: 10px;\n  cursor: pointer;\n  box-shadow: inset -2px -2px 5px 0px rgba(0, 0, 0, 0.3);\n  box-sizing: content-box;\n  border: none;\n\n  transition: color 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.buttons.hoverColor};\n  }\n\n  &:disabled {\n    background-color: ${({ theme }) => theme.buttons.disabled};\n  }\n\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  flex: 1 1 auto;\n  margin-right: 5px;\n`;\n"],"sourceRoot":""}